[2017-09-06 19:05:02,662 - DEBUG - CoreLogging.java::28] - Logging Provider: org.jboss.logging.Log4jLoggerProvider 
[2017-09-06 19:05:02,676 - DEBUG - IntegratorServiceImpl.java::46] - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator]. 
[2017-09-06 19:05:02,677 - DEBUG - IntegratorServiceImpl.java::46] - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator]. 
[2017-09-06 19:05:02,679 - DEBUG - IntegratorServiceImpl.java::46] - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator]. 
[2017-09-06 19:05:02,735 - INFO - Version.java::37] - HHH000412: Hibernate Core {5.0.1.Final} 
[2017-09-06 19:05:02,737 - INFO - Environment.java::213] - HHH000206: hibernate.properties not found 
[2017-09-06 19:05:02,738 - INFO - Environment.java::317] - HHH000021: Bytecode provider name : javassist 
[2017-09-06 19:05:02,758 - DEBUG - LocalXmlResourceResolver.java::57] - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd createDatabaseIfNotExist=true] 
[2017-09-06 19:05:02,759 - WARN - LocalXmlResourceResolver.java::91] - HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-configuration. Use namespace http://www.hibernate.org/dtd/hibernate-configuration instead.  Support for obsolete DTD/XSD namespaces may be removed at any time. 
[2017-09-06 19:05:02,759 - DEBUG - LocalXmlResourceResolver.java::95] - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/ 
[2017-09-06 19:05:02,764 - DEBUG - JaxbCfgProcessor.java::116] - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information 
[2017-09-06 19:05:02,886 - DEBUG - Configuration.java::722] - Building session factory using internal StandardServiceRegistryBuilder 
[2017-09-06 19:05:02,891 - DEBUG - ServiceBinding.java::68] - Overriding existing service binding [org.hibernate.secure.spi.JaccService] 
[2017-09-06 19:05:02,892 - DEBUG - Configuration.java::653] - Building session factory using provided StandardServiceRegistry 
[2017-09-06 19:05:02,902 - DEBUG - RegionFactoryInitiator.java::88] - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory 
[2017-09-06 19:05:02,907 - INFO - JavaReflectionManager.java::66] - HCANN000001: Hibernate Commons Annotations {5.0.0.Final} 
[2017-09-06 19:05:02,915 - DEBUG - LocalXmlResourceResolver.java::57] - Interpreting public/system identifier : [-//Hibernate/Hibernate Mapping DTD 5.0//EN] - [http://hibernate.sourceforge.net/hibernate-mapping-5.0.dtd] 
[2017-09-06 19:05:02,915 - WARN - LocalXmlResourceResolver.java::75] - HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-mapping. Use namespace http://www.hibernate.org/dtd/hibernate-mapping instead.  Support for obsolete DTD/XSD namespaces may be removed at any time. 
[2017-09-06 19:05:02,915 - DEBUG - LocalXmlResourceResolver.java::79] - Recognized legacy hibernate-mapping identifier; attempting to resolve on classpath under org/hibernate/ 
[2017-09-06 19:05:02,926 - DEBUG - MappingBinder.java::54] - Performing JAXB binding of hbm.xml document : Origin(name=bookstore.hbm.xml,type=RESOURCE) 
[2017-09-06 19:05:03,437 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration boolean -> org.hibernate.type.BooleanType@f0c8a99 
[2017-09-06 19:05:03,437 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration boolean -> org.hibernate.type.BooleanType@f0c8a99 
[2017-09-06 19:05:03,438 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@f0c8a99 
[2017-09-06 19:05:03,438 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@7526515b 
[2017-09-06 19:05:03,439 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration true_false -> org.hibernate.type.TrueFalseType@6e6f2380 
[2017-09-06 19:05:03,440 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration yes_no -> org.hibernate.type.YesNoType@53fe15ff 
[2017-09-06 19:05:03,441 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration byte -> org.hibernate.type.ByteType@15bb5034 
[2017-09-06 19:05:03,441 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration byte -> org.hibernate.type.ByteType@15bb5034 
[2017-09-06 19:05:03,441 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@15bb5034 
[2017-09-06 19:05:03,443 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration character -> org.hibernate.type.CharacterType@2cf3d63b 
[2017-09-06 19:05:03,443 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration char -> org.hibernate.type.CharacterType@2cf3d63b 
[2017-09-06 19:05:03,443 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2cf3d63b 
[2017-09-06 19:05:03,445 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration short -> org.hibernate.type.ShortType@76b1e9b8 
[2017-09-06 19:05:03,445 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration short -> org.hibernate.type.ShortType@76b1e9b8 
[2017-09-06 19:05:03,445 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@76b1e9b8 
[2017-09-06 19:05:03,446 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration integer -> org.hibernate.type.IntegerType@793f29ff 
[2017-09-06 19:05:03,447 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration int -> org.hibernate.type.IntegerType@793f29ff 
[2017-09-06 19:05:03,447 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@793f29ff 
[2017-09-06 19:05:03,448 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration long -> org.hibernate.type.LongType@7ef82753 
[2017-09-06 19:05:03,449 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration long -> org.hibernate.type.LongType@7ef82753 
[2017-09-06 19:05:03,449 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.lang.Long -> org.hibernate.type.LongType@7ef82753 
[2017-09-06 19:05:03,451 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration float -> org.hibernate.type.FloatType@7161d8d1 
[2017-09-06 19:05:03,451 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration float -> org.hibernate.type.FloatType@7161d8d1 
[2017-09-06 19:05:03,451 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7161d8d1 
[2017-09-06 19:05:03,453 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration double -> org.hibernate.type.DoubleType@5149d738 
[2017-09-06 19:05:03,454 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration double -> org.hibernate.type.DoubleType@5149d738 
[2017-09-06 19:05:03,454 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@5149d738 
[2017-09-06 19:05:03,456 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@712625fd 
[2017-09-06 19:05:03,456 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@712625fd 
[2017-09-06 19:05:03,457 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1c5920df 
[2017-09-06 19:05:03,457 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1c5920df 
[2017-09-06 19:05:03,458 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration string -> org.hibernate.type.StringType@15043a2f 
[2017-09-06 19:05:03,458 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.lang.String -> org.hibernate.type.StringType@15043a2f 
[2017-09-06 19:05:03,459 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@28261e8e 
[2017-09-06 19:05:03,460 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@3ba987b8 
[2017-09-06 19:05:03,461 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration url -> org.hibernate.type.UrlType@72035809 
[2017-09-06 19:05:03,461 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.net.URL -> org.hibernate.type.UrlType@72035809 
[2017-09-06 19:05:03,463 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration date -> org.hibernate.type.DateType@2cb4893b 
[2017-09-06 19:05:03,463 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.sql.Date -> org.hibernate.type.DateType@2cb4893b 
[2017-09-06 19:05:03,465 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration time -> org.hibernate.type.TimeType@273444fe 
[2017-09-06 19:05:03,465 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@273444fe 
[2017-09-06 19:05:03,466 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration timestamp -> org.hibernate.type.TimestampType@4681c175 
[2017-09-06 19:05:03,467 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@4681c175 
[2017-09-06 19:05:03,467 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@4681c175 
[2017-09-06 19:05:03,470 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@6fa51cd4 
[2017-09-06 19:05:03,471 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration calendar -> org.hibernate.type.CalendarType@cecf639 
[2017-09-06 19:05:03,471 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@cecf639 
[2017-09-06 19:05:03,472 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@cecf639 
[2017-09-06 19:05:03,473 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7ce69770 
[2017-09-06 19:05:03,473 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration locale -> org.hibernate.type.LocaleType@6c284af 
[2017-09-06 19:05:03,474 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@6c284af 
[2017-09-06 19:05:03,474 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration currency -> org.hibernate.type.CurrencyType@183ec003 
[2017-09-06 19:05:03,479 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@183ec003 
[2017-09-06 19:05:03,480 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration timezone -> org.hibernate.type.TimeZoneType@4d1c005e 
[2017-09-06 19:05:03,480 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@4d1c005e 
[2017-09-06 19:05:03,481 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration class -> org.hibernate.type.ClassType@496bc455 
[2017-09-06 19:05:03,482 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@496bc455 
[2017-09-06 19:05:03,483 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@4a003cbe 
[2017-09-06 19:05:03,483 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@4a003cbe 
[2017-09-06 19:05:03,484 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2b30a42c 
[2017-09-06 19:05:03,485 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration binary -> org.hibernate.type.BinaryType@792b749c 
[2017-09-06 19:05:03,486 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration byte[] -> org.hibernate.type.BinaryType@792b749c 
[2017-09-06 19:05:03,486 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration [B -> org.hibernate.type.BinaryType@792b749c 
[2017-09-06 19:05:03,487 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@302c971f 
[2017-09-06 19:05:03,487 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@302c971f 
[2017-09-06 19:05:03,488 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@302c971f 
[2017-09-06 19:05:03,489 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration image -> org.hibernate.type.ImageType@6f10d5b6 
[2017-09-06 19:05:03,490 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration characters -> org.hibernate.type.CharArrayType@7fd50002 
[2017-09-06 19:05:03,490 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration char[] -> org.hibernate.type.CharArrayType@7fd50002 
[2017-09-06 19:05:03,490 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration [C -> org.hibernate.type.CharArrayType@7fd50002 
[2017-09-06 19:05:03,491 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@45d84a20 
[2017-09-06 19:05:03,492 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@45d84a20 
[2017-09-06 19:05:03,492 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@45d84a20 
[2017-09-06 19:05:03,493 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration text -> org.hibernate.type.TextType@c430e6c 
[2017-09-06 19:05:03,495 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration ntext -> org.hibernate.type.NTextType@70cf32e3 
[2017-09-06 19:05:03,499 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration blob -> org.hibernate.type.BlobType@43f02ef2 
[2017-09-06 19:05:03,499 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@43f02ef2 
[2017-09-06 19:05:03,499 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@6f204a1a 
[2017-09-06 19:05:03,502 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration clob -> org.hibernate.type.ClobType@57bc27f5 
[2017-09-06 19:05:03,505 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@57bc27f5 
[2017-09-06 19:05:03,508 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration nclob -> org.hibernate.type.NClobType@25df00a0 
[2017-09-06 19:05:03,509 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@25df00a0 
[2017-09-06 19:05:03,509 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@5884a914 
[2017-09-06 19:05:03,510 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@79207381 
[2017-09-06 19:05:03,510 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration serializable -> org.hibernate.type.SerializableType@97e93f1 
[2017-09-06 19:05:03,513 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration object -> org.hibernate.type.ObjectType@20b2475a 
[2017-09-06 19:05:03,513 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@20b2475a 
[2017-09-06 19:05:03,514 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1be2019a 
[2017-09-06 19:05:03,514 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@29d80d2b 
[2017-09-06 19:05:03,514 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@58e1d9d 
[2017-09-06 19:05:03,514 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@446a1e84 
[2017-09-06 19:05:03,518 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4f0f2942 
[2017-09-06 19:05:03,518 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2657d4dd 
[2017-09-06 19:05:03,518 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@5340477f 
[2017-09-06 19:05:03,518 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@47caedad 
[2017-09-06 19:05:03,525 - WARN - DriverManagerConnectionProviderImpl.java::76] - HHH000402: Using Hibernate built-in connection pool (not for production use!) 
[2017-09-06 19:05:03,538 - INFO - DriverManagerConnectionProviderImpl.java::149] - HHH000401: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/bookstore?createDatabaseIfNotExist=true&useSSL=false] 
[2017-09-06 19:05:03,538 - INFO - DriverManagerConnectionProviderImpl.java::155] - HHH000046: Connection properties: {user=neelakanta, password=Welcome@123, autocommit=true} 
[2017-09-06 19:05:03,538 - INFO - DriverManagerConnectionProviderImpl.java::163] - HHH000006: Autocommit mode: true 
[2017-09-06 19:05:03,539 - INFO - DriverManagerConnectionProviderImpl.java::85] - HHH000115: Hibernate connection pool size: 20 (min=1) 
[2017-09-06 19:05:03,540 - DEBUG - DelegatingBasicLogger.java::384] - Initializing Connection pool with 1 Connections 
[2017-09-06 19:05:03,796 - DEBUG - JdbcEnvironmentInitiator.java::72] - Database ->
       name : MySQL
    version : 5.5.55-0ubuntu0.14.04.1
      major : 5
      minor : 5 
[2017-09-06 19:05:03,797 - DEBUG - JdbcEnvironmentInitiator.java::83] - Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-6.0.5 ( Revision: 6e477e32dff18fb4dc102e53f5a68037a9f8762e )
      major : 6
      minor : 0 
[2017-09-06 19:05:03,797 - DEBUG - DelegatingBasicLogger.java::389] - JDBC version : 4.1 
[2017-09-06 19:05:03,808 - INFO - Dialect.java::154] - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect 
[2017-09-06 19:05:03,820 - DEBUG - StandardRefCursorSupport.java::170] - Unexpected error trying to gauge level of JDBC REF_CURSOR support : null 
[2017-09-06 19:05:03,837 - DEBUG - IdentifierHelperBuilder.java::116] - JDBC driver metadata reported database stores quoted identifiers in more than one case 
[2017-09-06 19:05:03,843 - DEBUG - IdentifierHelperBuilder.java::182] - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers 
[2017-09-06 19:05:03,902 - DEBUG - DefaultIdentifierGeneratorFactory.java::78] - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator] 
[2017-09-06 19:05:03,902 - DEBUG - DefaultIdentifierGeneratorFactory.java::78] - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator] 
[2017-09-06 19:05:03,903 - DEBUG - DefaultIdentifierGeneratorFactory.java::78] - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator] 
[2017-09-06 19:05:03,903 - DEBUG - DefaultIdentifierGeneratorFactory.java::78] - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator] 
[2017-09-06 19:05:03,903 - DEBUG - DefaultIdentifierGeneratorFactory.java::78] - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned] 
[2017-09-06 19:05:03,904 - DEBUG - DefaultIdentifierGeneratorFactory.java::78] - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator] 
[2017-09-06 19:05:03,904 - DEBUG - DefaultIdentifierGeneratorFactory.java::78] - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator] 
[2017-09-06 19:05:03,905 - DEBUG - DefaultIdentifierGeneratorFactory.java::78] - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator] 
[2017-09-06 19:05:03,906 - DEBUG - DefaultIdentifierGeneratorFactory.java::78] - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator] 
[2017-09-06 19:05:03,906 - DEBUG - DefaultIdentifierGeneratorFactory.java::78] - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator] 
[2017-09-06 19:05:03,906 - DEBUG - DefaultIdentifierGeneratorFactory.java::78] - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator] 
[2017-09-06 19:05:03,907 - DEBUG - DefaultIdentifierGeneratorFactory.java::78] - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator] 
[2017-09-06 19:05:03,907 - DEBUG - DefaultIdentifierGeneratorFactory.java::78] - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator] 
[2017-09-06 19:05:03,907 - DEBUG - DefaultIdentifierGeneratorFactory.java::78] - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator] 
[2017-09-06 19:05:03,937 - DEBUG - Namespace.java::47] - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}] 
[2017-09-06 19:05:03,950 - DEBUG - ModelBinder.java::230] - Mapping class: com.book.store.entity.Book -> Book 
[2017-09-06 19:05:03,954 - WARN - ModelBinder.java::2441] - HHH90000003: Use of DOM4J entity-mode is considered deprecated 
[2017-09-06 19:05:03,954 - DEBUG - ModelBinder.java::2538] - Mapped property: bookId -> [Book_id] 
[2017-09-06 19:05:03,958 - WARN - ModelBinder.java::2441] - HHH90000003: Use of DOM4J entity-mode is considered deprecated 
[2017-09-06 19:05:03,959 - DEBUG - ModelBinder.java::2538] - Mapped property: bookName -> [Book_name] 
[2017-09-06 19:05:03,959 - WARN - ModelBinder.java::2441] - HHH90000003: Use of DOM4J entity-mode is considered deprecated 
[2017-09-06 19:05:03,959 - DEBUG - ModelBinder.java::2538] - Mapped property: authorName -> [Author_name] 
[2017-09-06 19:05:03,959 - WARN - ModelBinder.java::2441] - HHH90000003: Use of DOM4J entity-mode is considered deprecated 
[2017-09-06 19:05:03,959 - DEBUG - ModelBinder.java::2538] - Mapped property: publisherName -> [Publisher] 
[2017-09-06 19:05:03,960 - WARN - ModelBinder.java::2441] - HHH90000003: Use of DOM4J entity-mode is considered deprecated 
[2017-09-06 19:05:03,960 - DEBUG - ModelBinder.java::2538] - Mapped property: categoryName -> [Category] 
[2017-09-06 19:05:03,960 - WARN - ModelBinder.java::2441] - HHH90000003: Use of DOM4J entity-mode is considered deprecated 
[2017-09-06 19:05:03,960 - DEBUG - ModelBinder.java::2538] - Mapped property: price -> [price] 
[2017-09-06 19:05:03,960 - DEBUG - ModelBinder.java::230] - Mapping class: com.book.store.entity.Purchase -> Purchase 
[2017-09-06 19:05:03,960 - WARN - ModelBinder.java::2441] - HHH90000003: Use of DOM4J entity-mode is considered deprecated 
[2017-09-06 19:05:03,961 - DEBUG - ModelBinder.java::2538] - Mapped property: purchaseNumber -> [Purchase_no] 
[2017-09-06 19:05:03,961 - WARN - ModelBinder.java::2441] - HHH90000003: Use of DOM4J entity-mode is considered deprecated 
[2017-09-06 19:05:03,961 - DEBUG - ModelBinder.java::2538] - Mapped property: bookId -> [Book_id] 
[2017-09-06 19:05:03,961 - WARN - ModelBinder.java::2441] - HHH90000003: Use of DOM4J entity-mode is considered deprecated 
[2017-09-06 19:05:03,962 - DEBUG - ModelBinder.java::2538] - Mapped property: customerName -> [Customer_name] 
[2017-09-06 19:05:03,962 - WARN - ModelBinder.java::2441] - HHH90000003: Use of DOM4J entity-mode is considered deprecated 
[2017-09-06 19:05:03,962 - DEBUG - ModelBinder.java::2538] - Mapped property: customerMobileNumber -> [Customer_mobileno] 
[2017-09-06 19:05:03,962 - WARN - ModelBinder.java::2441] - HHH90000003: Use of DOM4J entity-mode is considered deprecated 
[2017-09-06 19:05:03,962 - DEBUG - ModelBinder.java::2538] - Mapped property: purchaseDate -> [Purchase_date] 
[2017-09-06 19:05:03,962 - WARN - ModelBinder.java::2441] - HHH90000003: Use of DOM4J entity-mode is considered deprecated 
[2017-09-06 19:05:03,962 - DEBUG - ModelBinder.java::2538] - Mapped property: amount -> [Amount] 
[2017-09-06 19:05:03,981 - DEBUG - SessionFactoryImpl.java::210] - Building session factory 
[2017-09-06 19:05:03,982 - DEBUG - Settings.java::69] - SessionFactory name : null 
[2017-09-06 19:05:03,982 - DEBUG - Settings.java::70] - Automatic flush during beforeCompletion(): disabled 
[2017-09-06 19:05:03,982 - DEBUG - Settings.java::71] - Automatic session close at end of transaction: disabled 
[2017-09-06 19:05:03,982 - DEBUG - Settings.java::73] - Statistics: disabled 
[2017-09-06 19:05:03,982 - DEBUG - Settings.java::75] - Deleted entity synthetic identifier rollback: disabled 
[2017-09-06 19:05:03,982 - DEBUG - Settings.java::76] - Default entity-mode: pojo 
[2017-09-06 19:05:03,983 - DEBUG - Settings.java::77] - Check Nullability in Core (should be disabled when Bean Validation is on): enabled 
[2017-09-06 19:05:03,983 - DEBUG - Settings.java::78] - Allow initialization of lazy state outside session : disabled 
[2017-09-06 19:05:03,983 - DEBUG - Settings.java::80] - Using BatchFetchStyle : LEGACY 
[2017-09-06 19:05:03,983 - DEBUG - Settings.java::81] - Default batch fetch size: -1 
[2017-09-06 19:05:03,983 - DEBUG - Settings.java::82] - Maximum outer join fetch depth: 2 
[2017-09-06 19:05:03,984 - DEBUG - Settings.java::83] - Default null ordering: NONE 
[2017-09-06 19:05:03,984 - DEBUG - Settings.java::84] - Order SQL updates by primary key: disabled 
[2017-09-06 19:05:03,985 - DEBUG - Settings.java::85] - Order SQL inserts for batching: disabled 
[2017-09-06 19:05:03,985 - DEBUG - Settings.java::87] - multi-tenancy strategy : NONE 
[2017-09-06 19:05:03,985 - DEBUG - Settings.java::89] - JTA Track by Thread: enabled 
[2017-09-06 19:05:03,985 - DEBUG - Settings.java::91] - Query language substitutions: {} 
[2017-09-06 19:05:03,985 - DEBUG - Settings.java::92] - JPA query language strict compliance: disabled 
[2017-09-06 19:05:03,985 - DEBUG - Settings.java::93] - Named query checking : enabled 
[2017-09-06 19:05:03,985 - DEBUG - Settings.java::95] - Second-level cache: enabled 
[2017-09-06 19:05:03,985 - DEBUG - Settings.java::96] - Second-level query cache: disabled 
[2017-09-06 19:05:03,986 - DEBUG - Settings.java::97] - Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@74a6a609 
[2017-09-06 19:05:03,987 - DEBUG - Settings.java::98] - Second-level cache region prefix: null 
[2017-09-06 19:05:03,987 - DEBUG - Settings.java::99] - Optimize second-level cache for minimal puts: disabled 
[2017-09-06 19:05:03,987 - DEBUG - Settings.java::100] - Structured second-level cache entries: disabled 
[2017-09-06 19:05:03,987 - DEBUG - Settings.java::101] - Second-level cache direct-reference entries: disabled 
[2017-09-06 19:05:03,987 - DEBUG - Settings.java::102] - Automatic eviction of collection cache: disabled 
[2017-09-06 19:05:03,987 - DEBUG - Settings.java::104] - JDBC batch size: 15 
[2017-09-06 19:05:03,987 - DEBUG - Settings.java::105] - JDBC batch updates for versioned data: enabled 
[2017-09-06 19:05:03,987 - DEBUG - Settings.java::106] - Scrollable result sets: enabled 
[2017-09-06 19:05:03,988 - DEBUG - Settings.java::107] - Wrap result sets: disabled 
[2017-09-06 19:05:03,988 - DEBUG - Settings.java::108] - JDBC3 getGeneratedKeys(): enabled 
[2017-09-06 19:05:03,988 - DEBUG - Settings.java::109] - JDBC result set fetch size: null 
[2017-09-06 19:05:03,988 - DEBUG - Settings.java::110] - Connection release mode: ON_CLOSE 
[2017-09-06 19:05:03,988 - DEBUG - Settings.java::111] - Generate SQL with comments: disabled 
[2017-09-06 19:05:04,020 - DEBUG - SessionFactoryImpl.java::255] - Session factory constructed with filter configurations : {} 
[2017-09-06 19:05:04,020 - DEBUG - SessionFactoryImpl.java::256] - Instantiating session factory with properties: {hibernate.connection.password=Welcome@123, java.runtime.name=Java(TM) SE Runtime Environment, java.vm.version=25.45-b02, sun.boot.library.path=/usr/java/jdk1.8.0_45/jre/lib/amd64, hibernate.connection.username=neelakanta, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@1c7fd41f, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=:, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, sun.os.patch.level=unknown, user.country=US, sun.java.launcher=SUN_STANDARD, java.vm.specification.name=Java Virtual Machine Specification, user.dir=/home/neelakanta/Documents/Eclipse Documents/Mars Documents/BookStore, java.runtime.version=1.8.0_45-b14, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, basedir=/home/neelakanta/Documents/Eclipse Documents/Mars Documents/BookStore, os.arch=amd64, java.endorsed.dirs=/usr/java/jdk1.8.0_45/jre/lib/endorsed, surefire.real.class.path=/home/neelakanta/Documents/Eclipse Documents/Mars Documents/BookStore/target/surefire/surefirebooter5232880889481838645.jar, hibernate.connection.autocommit=true, java.io.tmpdir=/tmp, line.separator=
, java.vm.specification.vendor=Oracle Corporation, os.name=Linux, sun.jnu.encoding=UTF-8, java.library.path=/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib, surefire.test.class.path=/home/neelakanta/Documents/Eclipse Documents/Mars Documents/BookStore/target/test-classes:/home/neelakanta/Documents/Eclipse Documents/Mars Documents/BookStore/target/classes:/home/neelakanta/.m2/repository/junit/junit/4.12/junit-4.12.jar:/home/neelakanta/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/neelakanta/.m2/repository/org/hibernate/hibernate-core/5.0.1.Final/hibernate-core-5.0.1.Final.jar:/home/neelakanta/.m2/repository/org/jboss/logging/jboss-logging/3.3.0.Final/jboss-logging-3.3.0.Final.jar:/home/neelakanta/.m2/repository/org/apache/geronimo/specs/geronimo-jta_1.1_spec/1.1.1/geronimo-jta_1.1_spec-1.1.1.jar:/home/neelakanta/.m2/repository/org/hibernate/javax/persistence/hibernate-jpa-2.1-api/1.0.0.Final/hibernate-jpa-2.1-api-1.0.0.Final.jar:/home/neelakanta/.m2/repository/org/javassist/javassist/3.18.1-GA/javassist-3.18.1-GA.jar:/home/neelakanta/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/home/neelakanta/.m2/repository/org/jboss/jandex/1.2.2.Final/jandex-1.2.2.Final.jar:/home/neelakanta/.m2/repository/dom4j/dom4j/1.6.1/dom4j-1.6.1.jar:/home/neelakanta/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.0.0.Final/hibernate-commons-annotations-5.0.0.Final.jar:/home/neelakanta/.m2/repository/org/hibernate/hibernate-validator/5.0.1.Final/hibernate-validator-5.0.1.Final.jar:/home/neelakanta/.m2/repository/javax/validation/validation-api/1.1.0.Final/validation-api-1.1.0.Final.jar:/home/neelakanta/.m2/repository/com/fasterxml/classmate/0.8.0/classmate-0.8.0.jar:/home/neelakanta/.m2/repository/org/hibernate/hibernate-annotations/3.3.0.ga/hibernate-annotations-3.3.0.ga.jar:/home/neelakanta/.m2/repository/org/hibernate/hibernate/3.2.1.ga/hibernate-3.2.1.ga.jar:/home/neelakanta/.m2/repository/net/sf/ehcache/ehcache/1.2.3/ehcache-1.2.3.jar:/home/neelakanta/.m2/repository/commons-logging/commons-logging/1.0.4/commons-logging-1.0.4.jar:/home/neelakanta/.m2/repository/asm/asm-attrs/1.5.3/asm-attrs-1.5.3.jar:/home/neelakanta/.m2/repository/cglib/cglib/2.1_3/cglib-2.1_3.jar:/home/neelakanta/.m2/repository/asm/asm/1.5.3/asm-1.5.3.jar:/home/neelakanta/.m2/repository/commons-collections/commons-collections/2.1.1/commons-collections-2.1.1.jar:/home/neelakanta/.m2/repository/javax/persistence/persistence-api/1.0/persistence-api-1.0.jar:/home/neelakanta/.m2/repository/org/hibernate/hibernate-commons-annotations/3.3.0.ga/hibernate-commons-annotations-3.3.0.ga.jar:/home/neelakanta/.m2/repository/javax/transaction/jta/1.1/jta-1.1.jar:/home/neelakanta/.m2/repository/mysql/mysql-connector-java/6.0.5/mysql-connector-java-6.0.5.jar:/home/neelakanta/.m2/repository/c3p0/c3p0/0.9.0.4/c3p0-0.9.0.4.jar:/home/neelakanta/.m2/repository/org/hibernate/hibernate-entitymanager/4.3.1.Final/hibernate-entitymanager-4.3.1.Final.jar:/home/neelakanta/.m2/repository/org/jboss/logging/jboss-logging-annotations/1.2.0.Beta1/jboss-logging-annotations-1.2.0.Beta1.jar:/home/neelakanta/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.0.0.Final/jboss-transaction-api_1.2_spec-1.0.0.Final.jar:/home/neelakanta/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar:, java.class.version=52.0, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=3.13.0-119-generic, user.home=/home/neelakanta, user.timezone=Asia/Kolkata, java.awt.printerjob=sun.print.PSPrinterJob, file.encoding=UTF-8, java.specification.version=1.8, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, user.name=neelakanta, java.class.path=/home/neelakanta/Documents/Eclipse Documents/Mars Documents/BookStore/target/test-classes:/home/neelakanta/Documents/Eclipse Documents/Mars Documents/BookStore/target/classes:/home/neelakanta/.m2/repository/junit/junit/4.12/junit-4.12.jar:/home/neelakanta/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/neelakanta/.m2/repository/org/hibernate/hibernate-core/5.0.1.Final/hibernate-core-5.0.1.Final.jar:/home/neelakanta/.m2/repository/org/jboss/logging/jboss-logging/3.3.0.Final/jboss-logging-3.3.0.Final.jar:/home/neelakanta/.m2/repository/org/apache/geronimo/specs/geronimo-jta_1.1_spec/1.1.1/geronimo-jta_1.1_spec-1.1.1.jar:/home/neelakanta/.m2/repository/org/hibernate/javax/persistence/hibernate-jpa-2.1-api/1.0.0.Final/hibernate-jpa-2.1-api-1.0.0.Final.jar:/home/neelakanta/.m2/repository/org/javassist/javassist/3.18.1-GA/javassist-3.18.1-GA.jar:/home/neelakanta/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/home/neelakanta/.m2/repository/org/jboss/jandex/1.2.2.Final/jandex-1.2.2.Final.jar:/home/neelakanta/.m2/repository/dom4j/dom4j/1.6.1/dom4j-1.6.1.jar:/home/neelakanta/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.0.0.Final/hibernate-commons-annotations-5.0.0.Final.jar:/home/neelakanta/.m2/repository/org/hibernate/hibernate-validator/5.0.1.Final/hibernate-validator-5.0.1.Final.jar:/home/neelakanta/.m2/repository/javax/validation/validation-api/1.1.0.Final/validation-api-1.1.0.Final.jar:/home/neelakanta/.m2/repository/com/fasterxml/classmate/0.8.0/classmate-0.8.0.jar:/home/neelakanta/.m2/repository/org/hibernate/hibernate-annotations/3.3.0.ga/hibernate-annotations-3.3.0.ga.jar:/home/neelakanta/.m2/repository/org/hibernate/hibernate/3.2.1.ga/hibernate-3.2.1.ga.jar:/home/neelakanta/.m2/repository/net/sf/ehcache/ehcache/1.2.3/ehcache-1.2.3.jar:/home/neelakanta/.m2/repository/commons-logging/commons-logging/1.0.4/commons-logging-1.0.4.jar:/home/neelakanta/.m2/repository/asm/asm-attrs/1.5.3/asm-attrs-1.5.3.jar:/home/neelakanta/.m2/repository/cglib/cglib/2.1_3/cglib-2.1_3.jar:/home/neelakanta/.m2/repository/asm/asm/1.5.3/asm-1.5.3.jar:/home/neelakanta/.m2/repository/commons-collections/commons-collections/2.1.1/commons-collections-2.1.1.jar:/home/neelakanta/.m2/repository/javax/persistence/persistence-api/1.0/persistence-api-1.0.jar:/home/neelakanta/.m2/repository/org/hibernate/hibernate-commons-annotations/3.3.0.ga/hibernate-commons-annotations-3.3.0.ga.jar:/home/neelakanta/.m2/repository/javax/transaction/jta/1.1/jta-1.1.jar:/home/neelakanta/.m2/repository/mysql/mysql-connector-java/6.0.5/mysql-connector-java-6.0.5.jar:/home/neelakanta/.m2/repository/c3p0/c3p0/0.9.0.4/c3p0-0.9.0.4.jar:/home/neelakanta/.m2/repository/org/hibernate/hibernate-entitymanager/4.3.1.Final/hibernate-entitymanager-4.3.1.Final.jar:/home/neelakanta/.m2/repository/org/jboss/logging/jboss-logging-annotations/1.2.0.Beta1/jboss-logging-annotations-1.2.0.Beta1.jar:/home/neelakanta/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.0.0.Final/jboss-transaction-api_1.2_spec-1.0.0.Final.jar:/home/neelakanta/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar:, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=false, java.vm.specification.version=1.8, sun.arch.data.model=64, sun.java.command=/home/neelakanta/Documents/Eclipse Documents/Mars Documents/BookStore/target/surefire/surefirebooter5232880889481838645.jar /home/neelakanta/Documents/Eclipse Documents/Mars Documents/BookStore/target/surefire/surefire7552053918813552354tmp /home/neelakanta/Documents/Eclipse Documents/Mars Documents/BookStore/target/surefire/surefire_03604179774586556801tmp, java.home=/usr/java/jdk1.8.0_45/jre, hibernate.connection.url=jdbc:mysql://localhost:3306/bookstore?createDatabaseIfNotExist=true&useSSL=false, hibernate.dialect=org.hibernate.dialect.MySQLDialect, user.language=en, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.X11.XToolkit, java.vm.info=mixed mode, java.version=1.8.0_45, java.ext.dirs=/usr/java/jdk1.8.0_45/jre/lib/ext:/usr/java/packages/lib/ext, sun.boot.class.path=/usr/java/jdk1.8.0_45/jre/lib/resources.jar:/usr/java/jdk1.8.0_45/jre/lib/rt.jar:/usr/java/jdk1.8.0_45/jre/lib/sunrsasign.jar:/usr/java/jdk1.8.0_45/jre/lib/jsse.jar:/usr/java/jdk1.8.0_45/jre/lib/jce.jar:/usr/java/jdk1.8.0_45/jre/lib/charsets.jar:/usr/java/jdk1.8.0_45/jre/lib/jfr.jar:/usr/java/jdk1.8.0_45/jre/classes, java.vendor=Oracle Corporation, localRepository=/home/neelakanta/.m2/repository, file.separator=/, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, sun.desktop=gnome, sun.cpu.isalist=} 
[2017-09-06 19:05:04,039 - INFO - Version.java::27] - HV000001: Hibernate Validator 5.0.1.Final 
[2017-09-06 19:05:04,052 - DEBUG - DefaultTraversableResolver.java::106] - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver 
[2017-09-06 19:05:04,053 - DEBUG - DefaultTraversableResolver.java::117] - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. 
[2017-09-06 19:05:04,058 - DEBUG - ValidationXmlParser.java::88] - Trying to load META-INF/validation.xml for XML based Validator configuration. 
[2017-09-06 19:05:04,061 - DEBUG - ValidationXmlParser.java::95] - No META-INF/validation.xml found. Using annotation based configuration only. 
[2017-09-06 19:05:04,076 - DEBUG - ClassLoaderAccessImpl.java::55] - Not known whether passed class name [com.book.store.entity.Book] is safe 
[2017-09-06 19:05:04,076 - DEBUG - ClassLoaderAccessImpl.java::57] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.book.store.entity.Book 
[2017-09-06 19:05:04,118 - DEBUG - ClassLoaderAccessImpl.java::55] - Not known whether passed class name [com.book.store.entity.Purchase] is safe 
[2017-09-06 19:05:04,119 - DEBUG - ClassLoaderAccessImpl.java::57] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.book.store.entity.Purchase 
[2017-09-06 19:05:04,123 - DEBUG - JaccIntegrator.java::80] - Skipping JACC integration as it was not enabled 
[2017-09-06 19:05:04,142 - DEBUG - ClassLoaderAccessImpl.java::55] - Not known whether passed class name [com.book.store.entity.Book] is safe 
[2017-09-06 19:05:04,143 - DEBUG - ClassLoaderAccessImpl.java::57] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.book.store.entity.Book 
[2017-09-06 19:05:04,151 - DEBUG - ClassLoaderAccessImpl.java::55] - Not known whether passed class name [com.book.store.entity.Book] is safe 
[2017-09-06 19:05:04,151 - DEBUG - ClassLoaderAccessImpl.java::57] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.book.store.entity.Book 
[2017-09-06 19:05:04,199 - DEBUG - ClassLoaderAccessImpl.java::55] - Not known whether passed class name [com.book.store.entity.Purchase] is safe 
[2017-09-06 19:05:04,199 - DEBUG - ClassLoaderAccessImpl.java::57] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.book.store.entity.Purchase 
[2017-09-06 19:05:04,199 - DEBUG - ClassLoaderAccessImpl.java::55] - Not known whether passed class name [com.book.store.entity.Purchase] is safe 
[2017-09-06 19:05:04,200 - DEBUG - ClassLoaderAccessImpl.java::57] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.book.store.entity.Purchase 
[2017-09-06 19:05:04,206 - DEBUG - AbstractEntityPersister.java::3418] - Static SQL for entity: com.book.store.entity.Book 
[2017-09-06 19:05:04,207 - DEBUG - AbstractEntityPersister.java::3423] -  Version select: select Book_id from Book where Book_id =? 
[2017-09-06 19:05:04,207 - DEBUG - AbstractEntityPersister.java::3426] -  Snapshot select: select book_.Book_id, book_.Book_name as Book_nam2_0_, book_.Author_name as Author_n3_0_, book_.Publisher as Publishe4_0_, book_.Category as Category5_0_, book_.price as price6_0_ from Book book_ where book_.Book_id=? 
[2017-09-06 19:05:04,207 - DEBUG - DelegatingBasicLogger.java::394] -  Insert 0: insert into Book (Book_name, Author_name, Publisher, Category, price, Book_id) values (?, ?, ?, ?, ?, ?) 
[2017-09-06 19:05:04,207 - DEBUG - DelegatingBasicLogger.java::394] -  Update 0: update Book set Book_name=?, Author_name=?, Publisher=?, Category=?, price=? where Book_id=? 
[2017-09-06 19:05:04,207 - DEBUG - DelegatingBasicLogger.java::394] -  Delete 0: delete from Book where Book_id=? 
[2017-09-06 19:05:04,222 - DEBUG - QuerySpacesImpl.java::174] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3228d990] 
[2017-09-06 19:05:04,223 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : bookName 
[2017-09-06 19:05:04,223 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : authorName 
[2017-09-06 19:05:04,223 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : publisherName 
[2017-09-06 19:05:04,223 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : categoryName 
[2017-09-06 19:05:04,224 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : price 
[2017-09-06 19:05:04,224 - DEBUG - FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java::76] - Building LoadPlan... 
[2017-09-06 19:05:04,233 - DEBUG - LoadQueryJoinAndFetchProcessor.java::95] - processing queryspace <gen:0> 
[2017-09-06 19:05:04,236 - DEBUG - LoadPlanTreePrinter.java::55] - LoadPlan(entity=com.book.store.entity.Book)
    - Returns
       - EntityReturnImpl(entity=com.book.store.entity.Book, querySpaceUid=<gen:0>, path=com.book.store.entity.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.book.store.entity.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {Book_id1_0_0_}
 
[2017-09-06 19:05:04,238 - DEBUG - EntityLoader.java::128] - Static select for entity com.book.store.entity.Book [NONE]: select book0_.Book_id as Book_id1_0_0_, book0_.Book_name as Book_nam2_0_0_, book0_.Author_name as Author_n3_0_0_, book0_.Publisher as Publishe4_0_0_, book0_.Category as Category5_0_0_, book0_.price as price6_0_0_ from Book book0_ where book0_.Book_id=? 
[2017-09-06 19:05:04,238 - DEBUG - QuerySpacesImpl.java::174] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3e792ce3] 
[2017-09-06 19:05:04,238 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : bookName 
[2017-09-06 19:05:04,238 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : authorName 
[2017-09-06 19:05:04,238 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : publisherName 
[2017-09-06 19:05:04,238 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : categoryName 
[2017-09-06 19:05:04,239 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : price 
[2017-09-06 19:05:04,239 - DEBUG - FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java::76] - Building LoadPlan... 
[2017-09-06 19:05:04,239 - DEBUG - LoadQueryJoinAndFetchProcessor.java::95] - processing queryspace <gen:0> 
[2017-09-06 19:05:04,239 - DEBUG - LoadPlanTreePrinter.java::55] - LoadPlan(entity=com.book.store.entity.Book)
    - Returns
       - EntityReturnImpl(entity=com.book.store.entity.Book, querySpaceUid=<gen:0>, path=com.book.store.entity.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.book.store.entity.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {Book_id1_0_0_}
 
[2017-09-06 19:05:04,239 - DEBUG - EntityLoader.java::128] - Static select for entity com.book.store.entity.Book [READ]: select book0_.Book_id as Book_id1_0_0_, book0_.Book_name as Book_nam2_0_0_, book0_.Author_name as Author_n3_0_0_, book0_.Publisher as Publishe4_0_0_, book0_.Category as Category5_0_0_, book0_.price as price6_0_0_ from Book book0_ where book0_.Book_id=? 
[2017-09-06 19:05:04,240 - DEBUG - QuerySpacesImpl.java::174] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@26f143ed] 
[2017-09-06 19:05:04,240 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : bookName 
[2017-09-06 19:05:04,240 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : authorName 
[2017-09-06 19:05:04,240 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : publisherName 
[2017-09-06 19:05:04,240 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : categoryName 
[2017-09-06 19:05:04,240 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : price 
[2017-09-06 19:05:04,240 - DEBUG - FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java::76] - Building LoadPlan... 
[2017-09-06 19:05:04,241 - DEBUG - LoadQueryJoinAndFetchProcessor.java::95] - processing queryspace <gen:0> 
[2017-09-06 19:05:04,241 - DEBUG - LoadPlanTreePrinter.java::55] - LoadPlan(entity=com.book.store.entity.Book)
    - Returns
       - EntityReturnImpl(entity=com.book.store.entity.Book, querySpaceUid=<gen:0>, path=com.book.store.entity.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.book.store.entity.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {Book_id1_0_0_}
 
[2017-09-06 19:05:04,241 - DEBUG - EntityLoader.java::128] - Static select for entity com.book.store.entity.Book [UPGRADE]: select book0_.Book_id as Book_id1_0_0_, book0_.Book_name as Book_nam2_0_0_, book0_.Author_name as Author_n3_0_0_, book0_.Publisher as Publishe4_0_0_, book0_.Category as Category5_0_0_, book0_.price as price6_0_0_ from Book book0_ where book0_.Book_id=? for update 
[2017-09-06 19:05:04,241 - DEBUG - QuerySpacesImpl.java::174] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4b770e40] 
[2017-09-06 19:05:04,241 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : bookName 
[2017-09-06 19:05:04,241 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : authorName 
[2017-09-06 19:05:04,241 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : publisherName 
[2017-09-06 19:05:04,241 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : categoryName 
[2017-09-06 19:05:04,242 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : price 
[2017-09-06 19:05:04,242 - DEBUG - FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java::76] - Building LoadPlan... 
[2017-09-06 19:05:04,242 - DEBUG - LoadQueryJoinAndFetchProcessor.java::95] - processing queryspace <gen:0> 
[2017-09-06 19:05:04,242 - DEBUG - LoadPlanTreePrinter.java::55] - LoadPlan(entity=com.book.store.entity.Book)
    - Returns
       - EntityReturnImpl(entity=com.book.store.entity.Book, querySpaceUid=<gen:0>, path=com.book.store.entity.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.book.store.entity.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {Book_id1_0_0_}
 
[2017-09-06 19:05:04,242 - DEBUG - EntityLoader.java::128] - Static select for entity com.book.store.entity.Book [UPGRADE_NOWAIT]: select book0_.Book_id as Book_id1_0_0_, book0_.Book_name as Book_nam2_0_0_, book0_.Author_name as Author_n3_0_0_, book0_.Publisher as Publishe4_0_0_, book0_.Category as Category5_0_0_, book0_.price as price6_0_0_ from Book book0_ where book0_.Book_id=? for update 
[2017-09-06 19:05:04,243 - DEBUG - QuerySpacesImpl.java::174] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@54a3ab8f] 
[2017-09-06 19:05:04,243 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : bookName 
[2017-09-06 19:05:04,243 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : authorName 
[2017-09-06 19:05:04,243 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : publisherName 
[2017-09-06 19:05:04,243 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : categoryName 
[2017-09-06 19:05:04,243 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : price 
[2017-09-06 19:05:04,243 - DEBUG - FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java::76] - Building LoadPlan... 
[2017-09-06 19:05:04,243 - DEBUG - LoadQueryJoinAndFetchProcessor.java::95] - processing queryspace <gen:0> 
[2017-09-06 19:05:04,244 - DEBUG - LoadPlanTreePrinter.java::55] - LoadPlan(entity=com.book.store.entity.Book)
    - Returns
       - EntityReturnImpl(entity=com.book.store.entity.Book, querySpaceUid=<gen:0>, path=com.book.store.entity.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.book.store.entity.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {Book_id1_0_0_}
 
[2017-09-06 19:05:04,244 - DEBUG - EntityLoader.java::128] - Static select for entity com.book.store.entity.Book [UPGRADE_SKIPLOCKED]: select book0_.Book_id as Book_id1_0_0_, book0_.Book_name as Book_nam2_0_0_, book0_.Author_name as Author_n3_0_0_, book0_.Publisher as Publishe4_0_0_, book0_.Category as Category5_0_0_, book0_.price as price6_0_0_ from Book book0_ where book0_.Book_id=? for update 
[2017-09-06 19:05:04,244 - DEBUG - QuerySpacesImpl.java::174] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6a1ebcff] 
[2017-09-06 19:05:04,244 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : bookName 
[2017-09-06 19:05:04,244 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : authorName 
[2017-09-06 19:05:04,244 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : publisherName 
[2017-09-06 19:05:04,244 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : categoryName 
[2017-09-06 19:05:04,244 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : price 
[2017-09-06 19:05:04,245 - DEBUG - FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java::76] - Building LoadPlan... 
[2017-09-06 19:05:04,245 - DEBUG - LoadQueryJoinAndFetchProcessor.java::95] - processing queryspace <gen:0> 
[2017-09-06 19:05:04,245 - DEBUG - LoadPlanTreePrinter.java::55] - LoadPlan(entity=com.book.store.entity.Book)
    - Returns
       - EntityReturnImpl(entity=com.book.store.entity.Book, querySpaceUid=<gen:0>, path=com.book.store.entity.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.book.store.entity.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {Book_id1_0_0_}
 
[2017-09-06 19:05:04,245 - DEBUG - EntityLoader.java::128] - Static select for entity com.book.store.entity.Book [FORCE]: select book0_.Book_id as Book_id1_0_0_, book0_.Book_name as Book_nam2_0_0_, book0_.Author_name as Author_n3_0_0_, book0_.Publisher as Publishe4_0_0_, book0_.Category as Category5_0_0_, book0_.price as price6_0_0_ from Book book0_ where book0_.Book_id=? for update 
[2017-09-06 19:05:04,245 - DEBUG - QuerySpacesImpl.java::174] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@50b0bc4c] 
[2017-09-06 19:05:04,245 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : bookName 
[2017-09-06 19:05:04,246 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : authorName 
[2017-09-06 19:05:04,246 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : publisherName 
[2017-09-06 19:05:04,246 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : categoryName 
[2017-09-06 19:05:04,246 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : price 
[2017-09-06 19:05:04,246 - DEBUG - FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java::76] - Building LoadPlan... 
[2017-09-06 19:05:04,246 - DEBUG - LoadQueryJoinAndFetchProcessor.java::95] - processing queryspace <gen:0> 
[2017-09-06 19:05:04,246 - DEBUG - LoadPlanTreePrinter.java::55] - LoadPlan(entity=com.book.store.entity.Book)
    - Returns
       - EntityReturnImpl(entity=com.book.store.entity.Book, querySpaceUid=<gen:0>, path=com.book.store.entity.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.book.store.entity.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {Book_id1_0_0_}
 
[2017-09-06 19:05:04,247 - DEBUG - EntityLoader.java::128] - Static select for entity com.book.store.entity.Book [PESSIMISTIC_READ]: select book0_.Book_id as Book_id1_0_0_, book0_.Book_name as Book_nam2_0_0_, book0_.Author_name as Author_n3_0_0_, book0_.Publisher as Publishe4_0_0_, book0_.Category as Category5_0_0_, book0_.price as price6_0_0_ from Book book0_ where book0_.Book_id=? lock in share mode 
[2017-09-06 19:05:04,247 - DEBUG - QuerySpacesImpl.java::174] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@13c612bd] 
[2017-09-06 19:05:04,247 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : bookName 
[2017-09-06 19:05:04,247 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : authorName 
[2017-09-06 19:05:04,247 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : publisherName 
[2017-09-06 19:05:04,247 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : categoryName 
[2017-09-06 19:05:04,247 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : price 
[2017-09-06 19:05:04,247 - DEBUG - FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java::76] - Building LoadPlan... 
[2017-09-06 19:05:04,248 - DEBUG - LoadQueryJoinAndFetchProcessor.java::95] - processing queryspace <gen:0> 
[2017-09-06 19:05:04,248 - DEBUG - LoadPlanTreePrinter.java::55] - LoadPlan(entity=com.book.store.entity.Book)
    - Returns
       - EntityReturnImpl(entity=com.book.store.entity.Book, querySpaceUid=<gen:0>, path=com.book.store.entity.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.book.store.entity.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {Book_id1_0_0_}
 
[2017-09-06 19:05:04,248 - DEBUG - EntityLoader.java::128] - Static select for entity com.book.store.entity.Book [PESSIMISTIC_WRITE]: select book0_.Book_id as Book_id1_0_0_, book0_.Book_name as Book_nam2_0_0_, book0_.Author_name as Author_n3_0_0_, book0_.Publisher as Publishe4_0_0_, book0_.Category as Category5_0_0_, book0_.price as price6_0_0_ from Book book0_ where book0_.Book_id=? for update 
[2017-09-06 19:05:04,248 - DEBUG - QuerySpacesImpl.java::174] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6b739528] 
[2017-09-06 19:05:04,248 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : bookName 
[2017-09-06 19:05:04,248 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : authorName 
[2017-09-06 19:05:04,249 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : publisherName 
[2017-09-06 19:05:04,249 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : categoryName 
[2017-09-06 19:05:04,249 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : price 
[2017-09-06 19:05:04,249 - DEBUG - FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java::76] - Building LoadPlan... 
[2017-09-06 19:05:04,249 - DEBUG - LoadQueryJoinAndFetchProcessor.java::95] - processing queryspace <gen:0> 
[2017-09-06 19:05:04,249 - DEBUG - LoadPlanTreePrinter.java::55] - LoadPlan(entity=com.book.store.entity.Book)
    - Returns
       - EntityReturnImpl(entity=com.book.store.entity.Book, querySpaceUid=<gen:0>, path=com.book.store.entity.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.book.store.entity.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {Book_id1_0_0_}
 
[2017-09-06 19:05:04,250 - DEBUG - EntityLoader.java::128] - Static select for entity com.book.store.entity.Book [PESSIMISTIC_FORCE_INCREMENT]: select book0_.Book_id as Book_id1_0_0_, book0_.Book_name as Book_nam2_0_0_, book0_.Author_name as Author_n3_0_0_, book0_.Publisher as Publishe4_0_0_, book0_.Category as Category5_0_0_, book0_.price as price6_0_0_ from Book book0_ where book0_.Book_id=? for update 
[2017-09-06 19:05:04,250 - DEBUG - QuerySpacesImpl.java::174] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@41de5768] 
[2017-09-06 19:05:04,250 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : bookName 
[2017-09-06 19:05:04,250 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : authorName 
[2017-09-06 19:05:04,250 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : publisherName 
[2017-09-06 19:05:04,250 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : categoryName 
[2017-09-06 19:05:04,250 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : price 
[2017-09-06 19:05:04,250 - DEBUG - FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java::76] - Building LoadPlan... 
[2017-09-06 19:05:04,251 - DEBUG - LoadQueryJoinAndFetchProcessor.java::95] - processing queryspace <gen:0> 
[2017-09-06 19:05:04,251 - DEBUG - LoadPlanTreePrinter.java::55] - LoadPlan(entity=com.book.store.entity.Book)
    - Returns
       - EntityReturnImpl(entity=com.book.store.entity.Book, querySpaceUid=<gen:0>, path=com.book.store.entity.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.book.store.entity.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {Book_id1_0_0_}
 
[2017-09-06 19:05:04,251 - DEBUG - EntityLoader.java::128] - Static select for entity com.book.store.entity.Book [OPTIMISTIC]: select book0_.Book_id as Book_id1_0_0_, book0_.Book_name as Book_nam2_0_0_, book0_.Author_name as Author_n3_0_0_, book0_.Publisher as Publishe4_0_0_, book0_.Category as Category5_0_0_, book0_.price as price6_0_0_ from Book book0_ where book0_.Book_id=? 
[2017-09-06 19:05:04,251 - DEBUG - QuerySpacesImpl.java::174] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@28fa700e] 
[2017-09-06 19:05:04,251 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : bookName 
[2017-09-06 19:05:04,251 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : authorName 
[2017-09-06 19:05:04,251 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : publisherName 
[2017-09-06 19:05:04,251 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : categoryName 
[2017-09-06 19:05:04,251 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : price 
[2017-09-06 19:05:04,252 - DEBUG - FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java::76] - Building LoadPlan... 
[2017-09-06 19:05:04,252 - DEBUG - LoadQueryJoinAndFetchProcessor.java::95] - processing queryspace <gen:0> 
[2017-09-06 19:05:04,252 - DEBUG - LoadPlanTreePrinter.java::55] - LoadPlan(entity=com.book.store.entity.Book)
    - Returns
       - EntityReturnImpl(entity=com.book.store.entity.Book, querySpaceUid=<gen:0>, path=com.book.store.entity.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.book.store.entity.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {Book_id1_0_0_}
 
[2017-09-06 19:05:04,252 - DEBUG - EntityLoader.java::128] - Static select for entity com.book.store.entity.Book [OPTIMISTIC_FORCE_INCREMENT]: select book0_.Book_id as Book_id1_0_0_, book0_.Book_name as Book_nam2_0_0_, book0_.Author_name as Author_n3_0_0_, book0_.Publisher as Publishe4_0_0_, book0_.Category as Category5_0_0_, book0_.price as price6_0_0_ from Book book0_ where book0_.Book_id=? 
[2017-09-06 19:05:04,263 - DEBUG - CascadeEntityLoader.java::38] - Static select for action ACTION_MERGE on entity com.book.store.entity.Book: select book0_.Book_id as Book_id1_0_0_, book0_.Book_name as Book_nam2_0_0_, book0_.Author_name as Author_n3_0_0_, book0_.Publisher as Publishe4_0_0_, book0_.Category as Category5_0_0_, book0_.price as price6_0_0_ from Book book0_ where book0_.Book_id=? 
[2017-09-06 19:05:04,264 - DEBUG - CascadeEntityLoader.java::38] - Static select for action ACTION_REFRESH on entity com.book.store.entity.Book: select book0_.Book_id as Book_id1_0_0_, book0_.Book_name as Book_nam2_0_0_, book0_.Author_name as Author_n3_0_0_, book0_.Publisher as Publishe4_0_0_, book0_.Category as Category5_0_0_, book0_.price as price6_0_0_ from Book book0_ where book0_.Book_id=? 
[2017-09-06 19:05:04,265 - DEBUG - AbstractEntityPersister.java::3418] - Static SQL for entity: com.book.store.entity.Purchase 
[2017-09-06 19:05:04,265 - DEBUG - AbstractEntityPersister.java::3423] -  Version select: select Purchase_no from Purchase where Purchase_no =? 
[2017-09-06 19:05:04,265 - DEBUG - AbstractEntityPersister.java::3426] -  Snapshot select: select purchase_.Purchase_no, purchase_.Book_id as Book_id2_1_, purchase_.Customer_name as Customer3_1_, purchase_.Customer_mobileno as Customer4_1_, purchase_.Purchase_date as Purchase5_1_, purchase_.Amount as Amount6_1_ from Purchase purchase_ where purchase_.Purchase_no=? 
[2017-09-06 19:05:04,265 - DEBUG - DelegatingBasicLogger.java::394] -  Insert 0: insert into Purchase (Book_id, Customer_name, Customer_mobileno, Purchase_date, Amount, Purchase_no) values (?, ?, ?, ?, ?, ?) 
[2017-09-06 19:05:04,265 - DEBUG - DelegatingBasicLogger.java::394] -  Update 0: update Purchase set Book_id=?, Customer_name=?, Customer_mobileno=?, Purchase_date=?, Amount=? where Purchase_no=? 
[2017-09-06 19:05:04,266 - DEBUG - DelegatingBasicLogger.java::394] -  Delete 0: delete from Purchase where Purchase_no=? 
[2017-09-06 19:05:04,266 - DEBUG - AbstractEntityPersister.java::3434] -  Identity insert: insert into Purchase (Book_id, Customer_name, Customer_mobileno, Purchase_date, Amount) values (?, ?, ?, ?, ?) 
[2017-09-06 19:05:04,266 - DEBUG - QuerySpacesImpl.java::174] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@772485dd] 
[2017-09-06 19:05:04,266 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : bookId 
[2017-09-06 19:05:04,266 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : customerName 
[2017-09-06 19:05:04,266 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : customerMobileNumber 
[2017-09-06 19:05:04,267 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : purchaseDate 
[2017-09-06 19:05:04,267 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : amount 
[2017-09-06 19:05:04,267 - DEBUG - FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java::76] - Building LoadPlan... 
[2017-09-06 19:05:04,267 - DEBUG - LoadQueryJoinAndFetchProcessor.java::95] - processing queryspace <gen:0> 
[2017-09-06 19:05:04,268 - DEBUG - LoadPlanTreePrinter.java::55] - LoadPlan(entity=com.book.store.entity.Purchase)
    - Returns
       - EntityReturnImpl(entity=com.book.store.entity.Purchase, querySpaceUid=<gen:0>, path=com.book.store.entity.Purchase)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.book.store.entity.Purchase)
          - SQL table alias mapping - purchase0_
          - alias suffix - 0_
          - suffixed key columns - {Purchase1_1_0_}
 
[2017-09-06 19:05:04,268 - DEBUG - EntityLoader.java::128] - Static select for entity com.book.store.entity.Purchase [NONE]: select purchase0_.Purchase_no as Purchase1_1_0_, purchase0_.Book_id as Book_id2_1_0_, purchase0_.Customer_name as Customer3_1_0_, purchase0_.Customer_mobileno as Customer4_1_0_, purchase0_.Purchase_date as Purchase5_1_0_, purchase0_.Amount as Amount6_1_0_ from Purchase purchase0_ where purchase0_.Purchase_no=? 
[2017-09-06 19:05:04,268 - DEBUG - QuerySpacesImpl.java::174] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@79ab3a71] 
[2017-09-06 19:05:04,268 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : bookId 
[2017-09-06 19:05:04,268 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : customerName 
[2017-09-06 19:05:04,268 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : customerMobileNumber 
[2017-09-06 19:05:04,269 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : purchaseDate 
[2017-09-06 19:05:04,269 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : amount 
[2017-09-06 19:05:04,269 - DEBUG - FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java::76] - Building LoadPlan... 
[2017-09-06 19:05:04,269 - DEBUG - LoadQueryJoinAndFetchProcessor.java::95] - processing queryspace <gen:0> 
[2017-09-06 19:05:04,269 - DEBUG - LoadPlanTreePrinter.java::55] - LoadPlan(entity=com.book.store.entity.Purchase)
    - Returns
       - EntityReturnImpl(entity=com.book.store.entity.Purchase, querySpaceUid=<gen:0>, path=com.book.store.entity.Purchase)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.book.store.entity.Purchase)
          - SQL table alias mapping - purchase0_
          - alias suffix - 0_
          - suffixed key columns - {Purchase1_1_0_}
 
[2017-09-06 19:05:04,269 - DEBUG - EntityLoader.java::128] - Static select for entity com.book.store.entity.Purchase [READ]: select purchase0_.Purchase_no as Purchase1_1_0_, purchase0_.Book_id as Book_id2_1_0_, purchase0_.Customer_name as Customer3_1_0_, purchase0_.Customer_mobileno as Customer4_1_0_, purchase0_.Purchase_date as Purchase5_1_0_, purchase0_.Amount as Amount6_1_0_ from Purchase purchase0_ where purchase0_.Purchase_no=? 
[2017-09-06 19:05:04,269 - DEBUG - QuerySpacesImpl.java::174] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3d829787] 
[2017-09-06 19:05:04,270 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : bookId 
[2017-09-06 19:05:04,270 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : customerName 
[2017-09-06 19:05:04,270 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : customerMobileNumber 
[2017-09-06 19:05:04,270 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : purchaseDate 
[2017-09-06 19:05:04,270 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : amount 
[2017-09-06 19:05:04,270 - DEBUG - FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java::76] - Building LoadPlan... 
[2017-09-06 19:05:04,270 - DEBUG - LoadQueryJoinAndFetchProcessor.java::95] - processing queryspace <gen:0> 
[2017-09-06 19:05:04,270 - DEBUG - LoadPlanTreePrinter.java::55] - LoadPlan(entity=com.book.store.entity.Purchase)
    - Returns
       - EntityReturnImpl(entity=com.book.store.entity.Purchase, querySpaceUid=<gen:0>, path=com.book.store.entity.Purchase)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.book.store.entity.Purchase)
          - SQL table alias mapping - purchase0_
          - alias suffix - 0_
          - suffixed key columns - {Purchase1_1_0_}
 
[2017-09-06 19:05:04,271 - DEBUG - EntityLoader.java::128] - Static select for entity com.book.store.entity.Purchase [UPGRADE]: select purchase0_.Purchase_no as Purchase1_1_0_, purchase0_.Book_id as Book_id2_1_0_, purchase0_.Customer_name as Customer3_1_0_, purchase0_.Customer_mobileno as Customer4_1_0_, purchase0_.Purchase_date as Purchase5_1_0_, purchase0_.Amount as Amount6_1_0_ from Purchase purchase0_ where purchase0_.Purchase_no=? for update 
[2017-09-06 19:05:04,271 - DEBUG - QuerySpacesImpl.java::174] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@51bde877] 
[2017-09-06 19:05:04,271 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : bookId 
[2017-09-06 19:05:04,271 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : customerName 
[2017-09-06 19:05:04,271 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : customerMobileNumber 
[2017-09-06 19:05:04,271 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : purchaseDate 
[2017-09-06 19:05:04,271 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : amount 
[2017-09-06 19:05:04,271 - DEBUG - FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java::76] - Building LoadPlan... 
[2017-09-06 19:05:04,272 - DEBUG - LoadQueryJoinAndFetchProcessor.java::95] - processing queryspace <gen:0> 
[2017-09-06 19:05:04,272 - DEBUG - LoadPlanTreePrinter.java::55] - LoadPlan(entity=com.book.store.entity.Purchase)
    - Returns
       - EntityReturnImpl(entity=com.book.store.entity.Purchase, querySpaceUid=<gen:0>, path=com.book.store.entity.Purchase)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.book.store.entity.Purchase)
          - SQL table alias mapping - purchase0_
          - alias suffix - 0_
          - suffixed key columns - {Purchase1_1_0_}
 
[2017-09-06 19:05:04,272 - DEBUG - EntityLoader.java::128] - Static select for entity com.book.store.entity.Purchase [UPGRADE_NOWAIT]: select purchase0_.Purchase_no as Purchase1_1_0_, purchase0_.Book_id as Book_id2_1_0_, purchase0_.Customer_name as Customer3_1_0_, purchase0_.Customer_mobileno as Customer4_1_0_, purchase0_.Purchase_date as Purchase5_1_0_, purchase0_.Amount as Amount6_1_0_ from Purchase purchase0_ where purchase0_.Purchase_no=? for update 
[2017-09-06 19:05:04,272 - DEBUG - QuerySpacesImpl.java::174] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@492fc69e] 
[2017-09-06 19:05:04,272 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : bookId 
[2017-09-06 19:05:04,272 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : customerName 
[2017-09-06 19:05:04,272 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : customerMobileNumber 
[2017-09-06 19:05:04,272 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : purchaseDate 
[2017-09-06 19:05:04,273 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : amount 
[2017-09-06 19:05:04,273 - DEBUG - FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java::76] - Building LoadPlan... 
[2017-09-06 19:05:04,273 - DEBUG - LoadQueryJoinAndFetchProcessor.java::95] - processing queryspace <gen:0> 
[2017-09-06 19:05:04,273 - DEBUG - LoadPlanTreePrinter.java::55] - LoadPlan(entity=com.book.store.entity.Purchase)
    - Returns
       - EntityReturnImpl(entity=com.book.store.entity.Purchase, querySpaceUid=<gen:0>, path=com.book.store.entity.Purchase)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.book.store.entity.Purchase)
          - SQL table alias mapping - purchase0_
          - alias suffix - 0_
          - suffixed key columns - {Purchase1_1_0_}
 
[2017-09-06 19:05:04,273 - DEBUG - EntityLoader.java::128] - Static select for entity com.book.store.entity.Purchase [UPGRADE_SKIPLOCKED]: select purchase0_.Purchase_no as Purchase1_1_0_, purchase0_.Book_id as Book_id2_1_0_, purchase0_.Customer_name as Customer3_1_0_, purchase0_.Customer_mobileno as Customer4_1_0_, purchase0_.Purchase_date as Purchase5_1_0_, purchase0_.Amount as Amount6_1_0_ from Purchase purchase0_ where purchase0_.Purchase_no=? for update 
[2017-09-06 19:05:04,274 - DEBUG - QuerySpacesImpl.java::174] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@d71adc2] 
[2017-09-06 19:05:04,274 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : bookId 
[2017-09-06 19:05:04,274 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : customerName 
[2017-09-06 19:05:04,274 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : customerMobileNumber 
[2017-09-06 19:05:04,274 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : purchaseDate 
[2017-09-06 19:05:04,274 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : amount 
[2017-09-06 19:05:04,274 - DEBUG - FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java::76] - Building LoadPlan... 
[2017-09-06 19:05:04,274 - DEBUG - LoadQueryJoinAndFetchProcessor.java::95] - processing queryspace <gen:0> 
[2017-09-06 19:05:04,275 - DEBUG - LoadPlanTreePrinter.java::55] - LoadPlan(entity=com.book.store.entity.Purchase)
    - Returns
       - EntityReturnImpl(entity=com.book.store.entity.Purchase, querySpaceUid=<gen:0>, path=com.book.store.entity.Purchase)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.book.store.entity.Purchase)
          - SQL table alias mapping - purchase0_
          - alias suffix - 0_
          - suffixed key columns - {Purchase1_1_0_}
 
[2017-09-06 19:05:04,275 - DEBUG - EntityLoader.java::128] - Static select for entity com.book.store.entity.Purchase [FORCE]: select purchase0_.Purchase_no as Purchase1_1_0_, purchase0_.Book_id as Book_id2_1_0_, purchase0_.Customer_name as Customer3_1_0_, purchase0_.Customer_mobileno as Customer4_1_0_, purchase0_.Purchase_date as Purchase5_1_0_, purchase0_.Amount as Amount6_1_0_ from Purchase purchase0_ where purchase0_.Purchase_no=? for update 
[2017-09-06 19:05:04,275 - DEBUG - QuerySpacesImpl.java::174] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1a1d3c1a] 
[2017-09-06 19:05:04,275 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : bookId 
[2017-09-06 19:05:04,275 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : customerName 
[2017-09-06 19:05:04,275 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : customerMobileNumber 
[2017-09-06 19:05:04,275 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : purchaseDate 
[2017-09-06 19:05:04,275 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : amount 
[2017-09-06 19:05:04,276 - DEBUG - FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java::76] - Building LoadPlan... 
[2017-09-06 19:05:04,276 - DEBUG - LoadQueryJoinAndFetchProcessor.java::95] - processing queryspace <gen:0> 
[2017-09-06 19:05:04,276 - DEBUG - LoadPlanTreePrinter.java::55] - LoadPlan(entity=com.book.store.entity.Purchase)
    - Returns
       - EntityReturnImpl(entity=com.book.store.entity.Purchase, querySpaceUid=<gen:0>, path=com.book.store.entity.Purchase)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.book.store.entity.Purchase)
          - SQL table alias mapping - purchase0_
          - alias suffix - 0_
          - suffixed key columns - {Purchase1_1_0_}
 
[2017-09-06 19:05:04,276 - DEBUG - EntityLoader.java::128] - Static select for entity com.book.store.entity.Purchase [PESSIMISTIC_READ]: select purchase0_.Purchase_no as Purchase1_1_0_, purchase0_.Book_id as Book_id2_1_0_, purchase0_.Customer_name as Customer3_1_0_, purchase0_.Customer_mobileno as Customer4_1_0_, purchase0_.Purchase_date as Purchase5_1_0_, purchase0_.Amount as Amount6_1_0_ from Purchase purchase0_ where purchase0_.Purchase_no=? lock in share mode 
[2017-09-06 19:05:04,276 - DEBUG - QuerySpacesImpl.java::174] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@159e366] 
[2017-09-06 19:05:04,276 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : bookId 
[2017-09-06 19:05:04,276 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : customerName 
[2017-09-06 19:05:04,277 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : customerMobileNumber 
[2017-09-06 19:05:04,277 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : purchaseDate 
[2017-09-06 19:05:04,277 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : amount 
[2017-09-06 19:05:04,277 - DEBUG - FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java::76] - Building LoadPlan... 
[2017-09-06 19:05:04,277 - DEBUG - LoadQueryJoinAndFetchProcessor.java::95] - processing queryspace <gen:0> 
[2017-09-06 19:05:04,277 - DEBUG - LoadPlanTreePrinter.java::55] - LoadPlan(entity=com.book.store.entity.Purchase)
    - Returns
       - EntityReturnImpl(entity=com.book.store.entity.Purchase, querySpaceUid=<gen:0>, path=com.book.store.entity.Purchase)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.book.store.entity.Purchase)
          - SQL table alias mapping - purchase0_
          - alias suffix - 0_
          - suffixed key columns - {Purchase1_1_0_}
 
[2017-09-06 19:05:04,277 - DEBUG - EntityLoader.java::128] - Static select for entity com.book.store.entity.Purchase [PESSIMISTIC_WRITE]: select purchase0_.Purchase_no as Purchase1_1_0_, purchase0_.Book_id as Book_id2_1_0_, purchase0_.Customer_name as Customer3_1_0_, purchase0_.Customer_mobileno as Customer4_1_0_, purchase0_.Purchase_date as Purchase5_1_0_, purchase0_.Amount as Amount6_1_0_ from Purchase purchase0_ where purchase0_.Purchase_no=? for update 
[2017-09-06 19:05:04,278 - DEBUG - QuerySpacesImpl.java::174] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@24528a25] 
[2017-09-06 19:05:04,278 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : bookId 
[2017-09-06 19:05:04,278 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : customerName 
[2017-09-06 19:05:04,278 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : customerMobileNumber 
[2017-09-06 19:05:04,278 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : purchaseDate 
[2017-09-06 19:05:04,278 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : amount 
[2017-09-06 19:05:04,278 - DEBUG - FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java::76] - Building LoadPlan... 
[2017-09-06 19:05:04,278 - DEBUG - LoadQueryJoinAndFetchProcessor.java::95] - processing queryspace <gen:0> 
[2017-09-06 19:05:04,279 - DEBUG - LoadPlanTreePrinter.java::55] - LoadPlan(entity=com.book.store.entity.Purchase)
    - Returns
       - EntityReturnImpl(entity=com.book.store.entity.Purchase, querySpaceUid=<gen:0>, path=com.book.store.entity.Purchase)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.book.store.entity.Purchase)
          - SQL table alias mapping - purchase0_
          - alias suffix - 0_
          - suffixed key columns - {Purchase1_1_0_}
 
[2017-09-06 19:05:04,279 - DEBUG - EntityLoader.java::128] - Static select for entity com.book.store.entity.Purchase [PESSIMISTIC_FORCE_INCREMENT]: select purchase0_.Purchase_no as Purchase1_1_0_, purchase0_.Book_id as Book_id2_1_0_, purchase0_.Customer_name as Customer3_1_0_, purchase0_.Customer_mobileno as Customer4_1_0_, purchase0_.Purchase_date as Purchase5_1_0_, purchase0_.Amount as Amount6_1_0_ from Purchase purchase0_ where purchase0_.Purchase_no=? for update 
[2017-09-06 19:05:04,279 - DEBUG - QuerySpacesImpl.java::174] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@59221b97] 
[2017-09-06 19:05:04,279 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : bookId 
[2017-09-06 19:05:04,279 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : customerName 
[2017-09-06 19:05:04,279 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : customerMobileNumber 
[2017-09-06 19:05:04,279 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : purchaseDate 
[2017-09-06 19:05:04,279 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : amount 
[2017-09-06 19:05:04,279 - DEBUG - FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java::76] - Building LoadPlan... 
[2017-09-06 19:05:04,280 - DEBUG - LoadQueryJoinAndFetchProcessor.java::95] - processing queryspace <gen:0> 
[2017-09-06 19:05:04,280 - DEBUG - LoadPlanTreePrinter.java::55] - LoadPlan(entity=com.book.store.entity.Purchase)
    - Returns
       - EntityReturnImpl(entity=com.book.store.entity.Purchase, querySpaceUid=<gen:0>, path=com.book.store.entity.Purchase)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.book.store.entity.Purchase)
          - SQL table alias mapping - purchase0_
          - alias suffix - 0_
          - suffixed key columns - {Purchase1_1_0_}
 
[2017-09-06 19:05:04,280 - DEBUG - EntityLoader.java::128] - Static select for entity com.book.store.entity.Purchase [OPTIMISTIC]: select purchase0_.Purchase_no as Purchase1_1_0_, purchase0_.Book_id as Book_id2_1_0_, purchase0_.Customer_name as Customer3_1_0_, purchase0_.Customer_mobileno as Customer4_1_0_, purchase0_.Purchase_date as Purchase5_1_0_, purchase0_.Amount as Amount6_1_0_ from Purchase purchase0_ where purchase0_.Purchase_no=? 
[2017-09-06 19:05:04,280 - DEBUG - QuerySpacesImpl.java::174] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5a772895] 
[2017-09-06 19:05:04,280 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : bookId 
[2017-09-06 19:05:04,280 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : customerName 
[2017-09-06 19:05:04,280 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : customerMobileNumber 
[2017-09-06 19:05:04,281 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : purchaseDate 
[2017-09-06 19:05:04,281 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : amount 
[2017-09-06 19:05:04,281 - DEBUG - FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java::76] - Building LoadPlan... 
[2017-09-06 19:05:04,281 - DEBUG - LoadQueryJoinAndFetchProcessor.java::95] - processing queryspace <gen:0> 
[2017-09-06 19:05:04,281 - DEBUG - LoadPlanTreePrinter.java::55] - LoadPlan(entity=com.book.store.entity.Purchase)
    - Returns
       - EntityReturnImpl(entity=com.book.store.entity.Purchase, querySpaceUid=<gen:0>, path=com.book.store.entity.Purchase)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.book.store.entity.Purchase)
          - SQL table alias mapping - purchase0_
          - alias suffix - 0_
          - suffixed key columns - {Purchase1_1_0_}
 
[2017-09-06 19:05:04,281 - DEBUG - EntityLoader.java::128] - Static select for entity com.book.store.entity.Purchase [OPTIMISTIC_FORCE_INCREMENT]: select purchase0_.Purchase_no as Purchase1_1_0_, purchase0_.Book_id as Book_id2_1_0_, purchase0_.Customer_name as Customer3_1_0_, purchase0_.Customer_mobileno as Customer4_1_0_, purchase0_.Purchase_date as Purchase5_1_0_, purchase0_.Amount as Amount6_1_0_ from Purchase purchase0_ where purchase0_.Purchase_no=? 
[2017-09-06 19:05:04,281 - DEBUG - CascadeEntityLoader.java::38] - Static select for action ACTION_MERGE on entity com.book.store.entity.Purchase: select purchase0_.Purchase_no as Purchase1_1_0_, purchase0_.Book_id as Book_id2_1_0_, purchase0_.Customer_name as Customer3_1_0_, purchase0_.Customer_mobileno as Customer4_1_0_, purchase0_.Purchase_date as Purchase5_1_0_, purchase0_.Amount as Amount6_1_0_ from Purchase purchase0_ where purchase0_.Purchase_no=? 
[2017-09-06 19:05:04,282 - DEBUG - CascadeEntityLoader.java::38] - Static select for action ACTION_REFRESH on entity com.book.store.entity.Purchase: select purchase0_.Purchase_no as Purchase1_1_0_, purchase0_.Book_id as Book_id2_1_0_, purchase0_.Customer_name as Customer3_1_0_, purchase0_.Customer_mobileno as Customer4_1_0_, purchase0_.Purchase_date as Purchase5_1_0_, purchase0_.Amount as Amount6_1_0_ from Purchase purchase0_ where purchase0_.Purchase_no=? 
[2017-09-06 19:05:04,282 - DEBUG - SessionFactoryImpl.java::462] - Instantiated session factory 
[2017-09-06 19:05:04,284 - INFO - SchemaUpdate.java::101] - HHH000228: Running hbm2ddl schema update 
[2017-09-06 19:05:04,314 - DEBUG - Table.java::478] - No alter strings for table : Book 
[2017-09-06 19:05:04,331 - DEBUG - Table.java::478] - No alter strings for table : Purchase 
[2017-09-06 19:05:04,333 - DEBUG - JtaPlatformInitiator.java::42] - No JtaPlatform was specified, checking resolver 
[2017-09-06 19:05:04,334 - DEBUG - JtaPlatformResolverInitiator.java::33] - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver] 
[2017-09-06 19:05:04,336 - DEBUG - StandardJtaPlatformResolver.java::101] - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform] 
[2017-09-06 19:05:04,337 - DEBUG - NamedQueryRepository.java::149] - Checking 0 named HQL queries 
[2017-09-06 19:05:04,337 - DEBUG - NamedQueryRepository.java::165] - Checking 0 named SQL queries 
[2017-09-06 19:05:04,339 - DEBUG - SessionFactoryRegistry.java::52] - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@4c7a078 
[2017-09-06 19:05:04,340 - DEBUG - SessionFactoryRegistry.java::74] - Registering SessionFactory: 5c098089-af9b-4e59-b22f-74c5c73352ec (<unnamed>) 
[2017-09-06 19:05:04,341 - DEBUG - SessionFactoryRegistry.java::81] - Not binding SessionFactory to JNDI, no JNDI name configured 
[2017-09-06 19:05:04,370 - DEBUG - StatisticsInitiator.java::82] - Statistics initialized [enabled=false] 
[2017-09-06 19:05:04,376 - DEBUG - QueryTranslatorFactoryInitiator.java::45] - QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@d2387c8 
[2017-09-06 19:05:04,376 - INFO - QueryTranslatorFactoryInitiator.java::47] - HHH000397: Using ASTQueryTranslatorFactory 
[2017-09-06 19:05:04,397 - DEBUG - QueryTranslatorImpl.java::278] - parse() - HQL: from com.book.store.entity.Book where Category = :category 
[2017-09-06 19:05:04,404 - DEBUG - QueryTranslatorImpl.java::296] - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[DOT] Node: '.'
    |           |  |  |  +-[IDENT] Node: 'com'
    |           |  |  |  \-[IDENT] Node: 'book'
    |           |  |  \-[IDENT] Node: 'store'
    |           |  \-[IDENT] Node: 'entity'
    |           \-[IDENT] Node: 'Book'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'Category'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'category'
 
[2017-09-06 19:05:04,404 - DEBUG - ErrorCounter.java::95] - throwQueryException() : no errors 
[2017-09-06 19:05:04,418 - DEBUG - HqlSqlBaseWalker.java::121] - select << begin [level=1, statement=select] 
[2017-09-06 19:05:04,428 - DEBUG - FromElement.java::145] - FromClause{level=1} : com.book.store.entity.Book (<no alias>) -> book0_ 
[2017-09-06 19:05:04,432 - DEBUG - HqlSqlBaseWalker.java::125] - select : finishing up [level=1, statement=select] 
[2017-09-06 19:05:04,432 - DEBUG - HqlSqlWalker.java::654] - processQuery() :  ( SELECT ( FromClause{level=1} Book book0_ ) ( where ( = Category ? ) ) ) 
[2017-09-06 19:05:04,434 - DEBUG - HqlSqlWalker.java::930] - Derived SELECT clause created. 
[2017-09-06 19:05:04,437 - DEBUG - JoinProcessor.java::169] - Using FROM fragment [Book book0_] 
[2017-09-06 19:05:04,438 - DEBUG - HqlSqlBaseWalker.java::129] - select >> end [level=1, statement=select] 
[2017-09-06 19:05:04,438 - DEBUG - QueryTranslatorImpl.java::265] - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Book)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'book0_.Book_id as Book_id1_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Book,tableAlias=book0_,origin=null,columns={,className=com.book.store.entity.Book}}}
    |  \-[SQL_TOKEN] SqlFragment: 'book0_.Book_name as Book_nam2_0_, book0_.Author_name as Author_n3_0_, book0_.Publisher as Publishe4_0_, book0_.Category as Category5_0_, book0_.price as price6_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[book0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Book book0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Book,tableAlias=book0_,origin=null,columns={,className=com.book.store.entity.Book}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[IDENT] IdentNode: 'Category' {originalText=Category}
          \-[NAMED_PARAM] ParameterNode: '?' {name=category, expectedType=null}
 
[2017-09-06 19:05:04,438 - DEBUG - ErrorCounter.java::95] - throwQueryException() : no errors 
[2017-09-06 19:05:04,443 - DEBUG - QueryTranslatorImpl.java::247] - HQL: from com.book.store.entity.Book where Category = :category 
[2017-09-06 19:05:04,443 - DEBUG - QueryTranslatorImpl.java::248] - SQL: select book0_.Book_id as Book_id1_0_, book0_.Book_name as Book_nam2_0_, book0_.Author_name as Author_n3_0_, book0_.Publisher as Publishe4_0_, book0_.Category as Category5_0_, book0_.price as price6_0_ from Book book0_ where Category=? 
[2017-09-06 19:05:04,443 - DEBUG - ErrorCounter.java::95] - throwQueryException() : no errors 
[2017-09-06 19:05:04,453 - DEBUG - SqlStatementLogger.java::92] - select book0_.Book_id as Book_id1_0_, book0_.Book_name as Book_nam2_0_, book0_.Author_name as Author_n3_0_, book0_.Publisher as Publishe4_0_, book0_.Category as Category5_0_, book0_.price as price6_0_ from Book book0_ where Category=? 
[2017-09-06 19:05:04,466 - DEBUG - DelegatingBasicLogger.java::384] - Result set row: 0 
[2017-09-06 19:05:04,468 - DEBUG - Loader.java::1514] - Result row: EntityKey[com.book.store.entity.Book#1001] 
[2017-09-06 19:05:04,473 - DEBUG - DelegatingBasicLogger.java::384] - Result set row: 1 
[2017-09-06 19:05:04,473 - DEBUG - Loader.java::1514] - Result row: EntityKey[com.book.store.entity.Book#1002] 
[2017-09-06 19:05:04,474 - DEBUG - TwoPhaseLoad.java::144] - Resolving associations for [com.book.store.entity.Book#1001] 
[2017-09-06 19:05:04,476 - DEBUG - TwoPhaseLoad.java::274] - Done materializing entity [com.book.store.entity.Book#1001] 
[2017-09-06 19:05:04,476 - DEBUG - TwoPhaseLoad.java::144] - Resolving associations for [com.book.store.entity.Book#1002] 
[2017-09-06 19:05:04,476 - DEBUG - TwoPhaseLoad.java::274] - Done materializing entity [com.book.store.entity.Book#1002] 
[2017-09-06 19:05:04,481 - DEBUG - IntegratorServiceImpl.java::46] - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator]. 
[2017-09-06 19:05:04,481 - DEBUG - IntegratorServiceImpl.java::46] - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator]. 
[2017-09-06 19:05:04,481 - DEBUG - IntegratorServiceImpl.java::46] - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator]. 
[2017-09-06 19:05:04,485 - DEBUG - LocalXmlResourceResolver.java::57] - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd createDatabaseIfNotExist=true] 
[2017-09-06 19:05:04,485 - WARN - LocalXmlResourceResolver.java::91] - HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-configuration. Use namespace http://www.hibernate.org/dtd/hibernate-configuration instead.  Support for obsolete DTD/XSD namespaces may be removed at any time. 
[2017-09-06 19:05:04,485 - DEBUG - LocalXmlResourceResolver.java::95] - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/ 
[2017-09-06 19:05:04,486 - DEBUG - JaxbCfgProcessor.java::116] - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information 
[2017-09-06 19:05:04,518 - DEBUG - Configuration.java::722] - Building session factory using internal StandardServiceRegistryBuilder 
[2017-09-06 19:05:04,519 - DEBUG - ServiceBinding.java::68] - Overriding existing service binding [org.hibernate.secure.spi.JaccService] 
[2017-09-06 19:05:04,519 - DEBUG - Configuration.java::653] - Building session factory using provided StandardServiceRegistry 
[2017-09-06 19:05:04,520 - DEBUG - RegionFactoryInitiator.java::88] - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory 
[2017-09-06 19:05:04,521 - DEBUG - LocalXmlResourceResolver.java::57] - Interpreting public/system identifier : [-//Hibernate/Hibernate Mapping DTD 5.0//EN] - [http://hibernate.sourceforge.net/hibernate-mapping-5.0.dtd] 
[2017-09-06 19:05:04,521 - WARN - LocalXmlResourceResolver.java::75] - HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-mapping. Use namespace http://www.hibernate.org/dtd/hibernate-mapping instead.  Support for obsolete DTD/XSD namespaces may be removed at any time. 
[2017-09-06 19:05:04,521 - DEBUG - LocalXmlResourceResolver.java::79] - Recognized legacy hibernate-mapping identifier; attempting to resolve on classpath under org/hibernate/ 
[2017-09-06 19:05:04,526 - DEBUG - MappingBinder.java::54] - Performing JAXB binding of hbm.xml document : Origin(name=bookstore.hbm.xml,type=RESOURCE) 
[2017-09-06 19:05:04,767 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration boolean -> org.hibernate.type.BooleanType@f0c8a99 
[2017-09-06 19:05:04,767 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration boolean -> org.hibernate.type.BooleanType@f0c8a99 
[2017-09-06 19:05:04,767 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@f0c8a99 
[2017-09-06 19:05:04,768 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@7526515b 
[2017-09-06 19:05:04,768 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration true_false -> org.hibernate.type.TrueFalseType@6e6f2380 
[2017-09-06 19:05:04,768 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration yes_no -> org.hibernate.type.YesNoType@53fe15ff 
[2017-09-06 19:05:04,768 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration byte -> org.hibernate.type.ByteType@15bb5034 
[2017-09-06 19:05:04,768 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration byte -> org.hibernate.type.ByteType@15bb5034 
[2017-09-06 19:05:04,768 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@15bb5034 
[2017-09-06 19:05:04,768 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration character -> org.hibernate.type.CharacterType@2cf3d63b 
[2017-09-06 19:05:04,768 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration char -> org.hibernate.type.CharacterType@2cf3d63b 
[2017-09-06 19:05:04,768 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2cf3d63b 
[2017-09-06 19:05:04,768 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration short -> org.hibernate.type.ShortType@76b1e9b8 
[2017-09-06 19:05:04,769 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration short -> org.hibernate.type.ShortType@76b1e9b8 
[2017-09-06 19:05:04,769 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@76b1e9b8 
[2017-09-06 19:05:04,769 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration integer -> org.hibernate.type.IntegerType@793f29ff 
[2017-09-06 19:05:04,769 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration int -> org.hibernate.type.IntegerType@793f29ff 
[2017-09-06 19:05:04,769 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@793f29ff 
[2017-09-06 19:05:04,769 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration long -> org.hibernate.type.LongType@7ef82753 
[2017-09-06 19:05:04,769 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration long -> org.hibernate.type.LongType@7ef82753 
[2017-09-06 19:05:04,769 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.lang.Long -> org.hibernate.type.LongType@7ef82753 
[2017-09-06 19:05:04,769 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration float -> org.hibernate.type.FloatType@7161d8d1 
[2017-09-06 19:05:04,769 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration float -> org.hibernate.type.FloatType@7161d8d1 
[2017-09-06 19:05:04,769 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7161d8d1 
[2017-09-06 19:05:04,770 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration double -> org.hibernate.type.DoubleType@5149d738 
[2017-09-06 19:05:04,770 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration double -> org.hibernate.type.DoubleType@5149d738 
[2017-09-06 19:05:04,770 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@5149d738 
[2017-09-06 19:05:04,770 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@712625fd 
[2017-09-06 19:05:04,770 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@712625fd 
[2017-09-06 19:05:04,770 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1c5920df 
[2017-09-06 19:05:04,770 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1c5920df 
[2017-09-06 19:05:04,770 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration string -> org.hibernate.type.StringType@15043a2f 
[2017-09-06 19:05:04,770 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.lang.String -> org.hibernate.type.StringType@15043a2f 
[2017-09-06 19:05:04,770 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@28261e8e 
[2017-09-06 19:05:04,770 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@3ba987b8 
[2017-09-06 19:05:04,771 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration url -> org.hibernate.type.UrlType@72035809 
[2017-09-06 19:05:04,771 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.net.URL -> org.hibernate.type.UrlType@72035809 
[2017-09-06 19:05:04,771 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration date -> org.hibernate.type.DateType@2cb4893b 
[2017-09-06 19:05:04,771 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.sql.Date -> org.hibernate.type.DateType@2cb4893b 
[2017-09-06 19:05:04,771 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration time -> org.hibernate.type.TimeType@273444fe 
[2017-09-06 19:05:04,771 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@273444fe 
[2017-09-06 19:05:04,771 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration timestamp -> org.hibernate.type.TimestampType@4681c175 
[2017-09-06 19:05:04,771 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@4681c175 
[2017-09-06 19:05:04,771 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@4681c175 
[2017-09-06 19:05:04,771 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@6fa51cd4 
[2017-09-06 19:05:04,771 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration calendar -> org.hibernate.type.CalendarType@cecf639 
[2017-09-06 19:05:04,771 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@cecf639 
[2017-09-06 19:05:04,772 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@cecf639 
[2017-09-06 19:05:04,772 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7ce69770 
[2017-09-06 19:05:04,772 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration locale -> org.hibernate.type.LocaleType@6c284af 
[2017-09-06 19:05:04,772 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@6c284af 
[2017-09-06 19:05:04,772 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration currency -> org.hibernate.type.CurrencyType@183ec003 
[2017-09-06 19:05:04,772 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@183ec003 
[2017-09-06 19:05:04,772 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration timezone -> org.hibernate.type.TimeZoneType@4d1c005e 
[2017-09-06 19:05:04,772 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@4d1c005e 
[2017-09-06 19:05:04,772 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration class -> org.hibernate.type.ClassType@496bc455 
[2017-09-06 19:05:04,772 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@496bc455 
[2017-09-06 19:05:04,772 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@4a003cbe 
[2017-09-06 19:05:04,773 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@4a003cbe 
[2017-09-06 19:05:04,773 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2b30a42c 
[2017-09-06 19:05:04,773 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration binary -> org.hibernate.type.BinaryType@792b749c 
[2017-09-06 19:05:04,773 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration byte[] -> org.hibernate.type.BinaryType@792b749c 
[2017-09-06 19:05:04,773 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration [B -> org.hibernate.type.BinaryType@792b749c 
[2017-09-06 19:05:04,773 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@302c971f 
[2017-09-06 19:05:04,773 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@302c971f 
[2017-09-06 19:05:04,773 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@302c971f 
[2017-09-06 19:05:04,773 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration image -> org.hibernate.type.ImageType@6f10d5b6 
[2017-09-06 19:05:04,773 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration characters -> org.hibernate.type.CharArrayType@7fd50002 
[2017-09-06 19:05:04,773 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration char[] -> org.hibernate.type.CharArrayType@7fd50002 
[2017-09-06 19:05:04,773 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration [C -> org.hibernate.type.CharArrayType@7fd50002 
[2017-09-06 19:05:04,774 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@45d84a20 
[2017-09-06 19:05:04,774 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@45d84a20 
[2017-09-06 19:05:04,774 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@45d84a20 
[2017-09-06 19:05:04,774 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration text -> org.hibernate.type.TextType@c430e6c 
[2017-09-06 19:05:04,774 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration ntext -> org.hibernate.type.NTextType@70cf32e3 
[2017-09-06 19:05:04,774 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration blob -> org.hibernate.type.BlobType@43f02ef2 
[2017-09-06 19:05:04,774 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@43f02ef2 
[2017-09-06 19:05:04,774 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@6f204a1a 
[2017-09-06 19:05:04,774 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration clob -> org.hibernate.type.ClobType@57bc27f5 
[2017-09-06 19:05:04,774 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@57bc27f5 
[2017-09-06 19:05:04,774 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration nclob -> org.hibernate.type.NClobType@25df00a0 
[2017-09-06 19:05:04,775 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@25df00a0 
[2017-09-06 19:05:04,775 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@5884a914 
[2017-09-06 19:05:04,775 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@79207381 
[2017-09-06 19:05:04,775 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration serializable -> org.hibernate.type.SerializableType@97e93f1 
[2017-09-06 19:05:04,775 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration object -> org.hibernate.type.ObjectType@20b2475a 
[2017-09-06 19:05:04,775 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@20b2475a 
[2017-09-06 19:05:04,775 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@2257fadf 
[2017-09-06 19:05:04,775 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@7144655b 
[2017-09-06 19:05:04,775 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@5c82cd4f 
[2017-09-06 19:05:04,775 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@35835e65 
[2017-09-06 19:05:04,775 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@289fdb08 
[2017-09-06 19:05:04,776 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@7a231dfd 
[2017-09-06 19:05:04,776 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@30814f43 
[2017-09-06 19:05:04,776 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@1fde4f40 
[2017-09-06 19:05:04,776 - WARN - DriverManagerConnectionProviderImpl.java::76] - HHH000402: Using Hibernate built-in connection pool (not for production use!) 
[2017-09-06 19:05:04,776 - INFO - DriverManagerConnectionProviderImpl.java::149] - HHH000401: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/bookstore?createDatabaseIfNotExist=true&useSSL=false] 
[2017-09-06 19:05:04,776 - INFO - DriverManagerConnectionProviderImpl.java::155] - HHH000046: Connection properties: {user=neelakanta, password=Welcome@123, autocommit=true} 
[2017-09-06 19:05:04,777 - INFO - DriverManagerConnectionProviderImpl.java::163] - HHH000006: Autocommit mode: true 
[2017-09-06 19:05:04,777 - INFO - DriverManagerConnectionProviderImpl.java::85] - HHH000115: Hibernate connection pool size: 20 (min=1) 
[2017-09-06 19:05:04,777 - DEBUG - DelegatingBasicLogger.java::384] - Initializing Connection pool with 1 Connections 
[2017-09-06 19:05:04,788 - DEBUG - JdbcEnvironmentInitiator.java::72] - Database ->
       name : MySQL
    version : 5.5.55-0ubuntu0.14.04.1
      major : 5
      minor : 5 
[2017-09-06 19:05:04,788 - DEBUG - JdbcEnvironmentInitiator.java::83] - Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-6.0.5 ( Revision: 6e477e32dff18fb4dc102e53f5a68037a9f8762e )
      major : 6
      minor : 0 
[2017-09-06 19:05:04,788 - DEBUG - DelegatingBasicLogger.java::389] - JDBC version : 4.1 
[2017-09-06 19:05:04,788 - INFO - Dialect.java::154] - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect 
[2017-09-06 19:05:04,789 - DEBUG - StandardRefCursorSupport.java::170] - Unexpected error trying to gauge level of JDBC REF_CURSOR support : null 
[2017-09-06 19:05:04,792 - DEBUG - IdentifierHelperBuilder.java::116] - JDBC driver metadata reported database stores quoted identifiers in more than one case 
[2017-09-06 19:05:04,792 - DEBUG - IdentifierHelperBuilder.java::182] - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers 
[2017-09-06 19:05:04,795 - DEBUG - DefaultIdentifierGeneratorFactory.java::78] - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator] 
[2017-09-06 19:05:04,795 - DEBUG - DefaultIdentifierGeneratorFactory.java::78] - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator] 
[2017-09-06 19:05:04,795 - DEBUG - DefaultIdentifierGeneratorFactory.java::78] - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator] 
[2017-09-06 19:05:04,795 - DEBUG - DefaultIdentifierGeneratorFactory.java::78] - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator] 
[2017-09-06 19:05:04,796 - DEBUG - DefaultIdentifierGeneratorFactory.java::78] - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned] 
[2017-09-06 19:05:04,796 - DEBUG - DefaultIdentifierGeneratorFactory.java::78] - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator] 
[2017-09-06 19:05:04,796 - DEBUG - DefaultIdentifierGeneratorFactory.java::78] - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator] 
[2017-09-06 19:05:04,797 - DEBUG - DefaultIdentifierGeneratorFactory.java::78] - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator] 
[2017-09-06 19:05:04,797 - DEBUG - DefaultIdentifierGeneratorFactory.java::78] - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator] 
[2017-09-06 19:05:04,797 - DEBUG - DefaultIdentifierGeneratorFactory.java::78] - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator] 
[2017-09-06 19:05:04,797 - DEBUG - DefaultIdentifierGeneratorFactory.java::78] - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator] 
[2017-09-06 19:05:04,797 - DEBUG - DefaultIdentifierGeneratorFactory.java::78] - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator] 
[2017-09-06 19:05:04,797 - DEBUG - DefaultIdentifierGeneratorFactory.java::78] - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator] 
[2017-09-06 19:05:04,797 - DEBUG - DefaultIdentifierGeneratorFactory.java::78] - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator] 
[2017-09-06 19:05:04,798 - DEBUG - Namespace.java::47] - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}] 
[2017-09-06 19:05:04,798 - DEBUG - ModelBinder.java::230] - Mapping class: com.book.store.entity.Book -> Book 
[2017-09-06 19:05:04,798 - WARN - ModelBinder.java::2441] - HHH90000003: Use of DOM4J entity-mode is considered deprecated 
[2017-09-06 19:05:04,798 - DEBUG - ModelBinder.java::2538] - Mapped property: bookId -> [Book_id] 
[2017-09-06 19:05:04,798 - WARN - ModelBinder.java::2441] - HHH90000003: Use of DOM4J entity-mode is considered deprecated 
[2017-09-06 19:05:04,798 - DEBUG - ModelBinder.java::2538] - Mapped property: bookName -> [Book_name] 
[2017-09-06 19:05:04,799 - WARN - ModelBinder.java::2441] - HHH90000003: Use of DOM4J entity-mode is considered deprecated 
[2017-09-06 19:05:04,799 - DEBUG - ModelBinder.java::2538] - Mapped property: authorName -> [Author_name] 
[2017-09-06 19:05:04,799 - WARN - ModelBinder.java::2441] - HHH90000003: Use of DOM4J entity-mode is considered deprecated 
[2017-09-06 19:05:04,799 - DEBUG - ModelBinder.java::2538] - Mapped property: publisherName -> [Publisher] 
[2017-09-06 19:05:04,799 - WARN - ModelBinder.java::2441] - HHH90000003: Use of DOM4J entity-mode is considered deprecated 
[2017-09-06 19:05:04,799 - DEBUG - ModelBinder.java::2538] - Mapped property: categoryName -> [Category] 
[2017-09-06 19:05:04,799 - WARN - ModelBinder.java::2441] - HHH90000003: Use of DOM4J entity-mode is considered deprecated 
[2017-09-06 19:05:04,799 - DEBUG - ModelBinder.java::2538] - Mapped property: price -> [price] 
[2017-09-06 19:05:04,800 - DEBUG - ModelBinder.java::230] - Mapping class: com.book.store.entity.Purchase -> Purchase 
[2017-09-06 19:05:04,800 - WARN - ModelBinder.java::2441] - HHH90000003: Use of DOM4J entity-mode is considered deprecated 
[2017-09-06 19:05:04,800 - DEBUG - ModelBinder.java::2538] - Mapped property: purchaseNumber -> [Purchase_no] 
[2017-09-06 19:05:04,800 - WARN - ModelBinder.java::2441] - HHH90000003: Use of DOM4J entity-mode is considered deprecated 
[2017-09-06 19:05:04,800 - DEBUG - ModelBinder.java::2538] - Mapped property: bookId -> [Book_id] 
[2017-09-06 19:05:04,800 - WARN - ModelBinder.java::2441] - HHH90000003: Use of DOM4J entity-mode is considered deprecated 
[2017-09-06 19:05:04,800 - DEBUG - ModelBinder.java::2538] - Mapped property: customerName -> [Customer_name] 
[2017-09-06 19:05:04,800 - WARN - ModelBinder.java::2441] - HHH90000003: Use of DOM4J entity-mode is considered deprecated 
[2017-09-06 19:05:04,800 - DEBUG - ModelBinder.java::2538] - Mapped property: customerMobileNumber -> [Customer_mobileno] 
[2017-09-06 19:05:04,801 - WARN - ModelBinder.java::2441] - HHH90000003: Use of DOM4J entity-mode is considered deprecated 
[2017-09-06 19:05:04,801 - DEBUG - ModelBinder.java::2538] - Mapped property: purchaseDate -> [Purchase_date] 
[2017-09-06 19:05:04,801 - WARN - ModelBinder.java::2441] - HHH90000003: Use of DOM4J entity-mode is considered deprecated 
[2017-09-06 19:05:04,801 - DEBUG - ModelBinder.java::2538] - Mapped property: amount -> [Amount] 
[2017-09-06 19:05:04,802 - DEBUG - SessionFactoryImpl.java::210] - Building session factory 
[2017-09-06 19:05:04,802 - DEBUG - Settings.java::69] - SessionFactory name : null 
[2017-09-06 19:05:04,802 - DEBUG - Settings.java::70] - Automatic flush during beforeCompletion(): disabled 
[2017-09-06 19:05:04,802 - DEBUG - Settings.java::71] - Automatic session close at end of transaction: disabled 
[2017-09-06 19:05:04,802 - DEBUG - Settings.java::73] - Statistics: disabled 
[2017-09-06 19:05:04,802 - DEBUG - Settings.java::75] - Deleted entity synthetic identifier rollback: disabled 
[2017-09-06 19:05:04,802 - DEBUG - Settings.java::76] - Default entity-mode: pojo 
[2017-09-06 19:05:04,802 - DEBUG - Settings.java::77] - Check Nullability in Core (should be disabled when Bean Validation is on): enabled 
[2017-09-06 19:05:04,802 - DEBUG - Settings.java::78] - Allow initialization of lazy state outside session : disabled 
[2017-09-06 19:05:04,803 - DEBUG - Settings.java::80] - Using BatchFetchStyle : LEGACY 
[2017-09-06 19:05:04,803 - DEBUG - Settings.java::81] - Default batch fetch size: -1 
[2017-09-06 19:05:04,803 - DEBUG - Settings.java::82] - Maximum outer join fetch depth: 2 
[2017-09-06 19:05:04,803 - DEBUG - Settings.java::83] - Default null ordering: NONE 
[2017-09-06 19:05:04,803 - DEBUG - Settings.java::84] - Order SQL updates by primary key: disabled 
[2017-09-06 19:05:04,803 - DEBUG - Settings.java::85] - Order SQL inserts for batching: disabled 
[2017-09-06 19:05:04,803 - DEBUG - Settings.java::87] - multi-tenancy strategy : NONE 
[2017-09-06 19:05:04,803 - DEBUG - Settings.java::89] - JTA Track by Thread: enabled 
[2017-09-06 19:05:04,803 - DEBUG - Settings.java::91] - Query language substitutions: {} 
[2017-09-06 19:05:04,803 - DEBUG - Settings.java::92] - JPA query language strict compliance: disabled 
[2017-09-06 19:05:04,803 - DEBUG - Settings.java::93] - Named query checking : enabled 
[2017-09-06 19:05:04,803 - DEBUG - Settings.java::95] - Second-level cache: enabled 
[2017-09-06 19:05:04,804 - DEBUG - Settings.java::96] - Second-level query cache: disabled 
[2017-09-06 19:05:04,804 - DEBUG - Settings.java::97] - Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@74a6a609 
[2017-09-06 19:05:04,804 - DEBUG - Settings.java::98] - Second-level cache region prefix: null 
[2017-09-06 19:05:04,804 - DEBUG - Settings.java::99] - Optimize second-level cache for minimal puts: disabled 
[2017-09-06 19:05:04,804 - DEBUG - Settings.java::100] - Structured second-level cache entries: disabled 
[2017-09-06 19:05:04,804 - DEBUG - Settings.java::101] - Second-level cache direct-reference entries: disabled 
[2017-09-06 19:05:04,804 - DEBUG - Settings.java::102] - Automatic eviction of collection cache: disabled 
[2017-09-06 19:05:04,804 - DEBUG - Settings.java::104] - JDBC batch size: 15 
[2017-09-06 19:05:04,804 - DEBUG - Settings.java::105] - JDBC batch updates for versioned data: enabled 
[2017-09-06 19:05:04,804 - DEBUG - Settings.java::106] - Scrollable result sets: enabled 
[2017-09-06 19:05:04,804 - DEBUG - Settings.java::107] - Wrap result sets: disabled 
[2017-09-06 19:05:04,804 - DEBUG - Settings.java::108] - JDBC3 getGeneratedKeys(): enabled 
[2017-09-06 19:05:04,804 - DEBUG - Settings.java::109] - JDBC result set fetch size: null 
[2017-09-06 19:05:04,805 - DEBUG - Settings.java::110] - Connection release mode: ON_CLOSE 
[2017-09-06 19:05:04,805 - DEBUG - Settings.java::111] - Generate SQL with comments: disabled 
[2017-09-06 19:05:04,805 - DEBUG - SessionFactoryImpl.java::255] - Session factory constructed with filter configurations : {} 
[2017-09-06 19:05:04,806 - DEBUG - SessionFactoryImpl.java::256] - Instantiating session factory with properties: {hibernate.connection.password=Welcome@123, java.runtime.name=Java(TM) SE Runtime Environment, java.vm.version=25.45-b02, sun.boot.library.path=/usr/java/jdk1.8.0_45/jre/lib/amd64, hibernate.connection.username=neelakanta, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@56d93692, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=:, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, sun.os.patch.level=unknown, user.country=US, sun.java.launcher=SUN_STANDARD, java.vm.specification.name=Java Virtual Machine Specification, user.dir=/home/neelakanta/Documents/Eclipse Documents/Mars Documents/BookStore, java.runtime.version=1.8.0_45-b14, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, basedir=/home/neelakanta/Documents/Eclipse Documents/Mars Documents/BookStore, os.arch=amd64, java.endorsed.dirs=/usr/java/jdk1.8.0_45/jre/lib/endorsed, surefire.real.class.path=/home/neelakanta/Documents/Eclipse Documents/Mars Documents/BookStore/target/surefire/surefirebooter5232880889481838645.jar, hibernate.connection.autocommit=true, java.io.tmpdir=/tmp, line.separator=
, java.vm.specification.vendor=Oracle Corporation, os.name=Linux, sun.jnu.encoding=UTF-8, java.library.path=/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib, surefire.test.class.path=/home/neelakanta/Documents/Eclipse Documents/Mars Documents/BookStore/target/test-classes:/home/neelakanta/Documents/Eclipse Documents/Mars Documents/BookStore/target/classes:/home/neelakanta/.m2/repository/junit/junit/4.12/junit-4.12.jar:/home/neelakanta/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/neelakanta/.m2/repository/org/hibernate/hibernate-core/5.0.1.Final/hibernate-core-5.0.1.Final.jar:/home/neelakanta/.m2/repository/org/jboss/logging/jboss-logging/3.3.0.Final/jboss-logging-3.3.0.Final.jar:/home/neelakanta/.m2/repository/org/apache/geronimo/specs/geronimo-jta_1.1_spec/1.1.1/geronimo-jta_1.1_spec-1.1.1.jar:/home/neelakanta/.m2/repository/org/hibernate/javax/persistence/hibernate-jpa-2.1-api/1.0.0.Final/hibernate-jpa-2.1-api-1.0.0.Final.jar:/home/neelakanta/.m2/repository/org/javassist/javassist/3.18.1-GA/javassist-3.18.1-GA.jar:/home/neelakanta/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/home/neelakanta/.m2/repository/org/jboss/jandex/1.2.2.Final/jandex-1.2.2.Final.jar:/home/neelakanta/.m2/repository/dom4j/dom4j/1.6.1/dom4j-1.6.1.jar:/home/neelakanta/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.0.0.Final/hibernate-commons-annotations-5.0.0.Final.jar:/home/neelakanta/.m2/repository/org/hibernate/hibernate-validator/5.0.1.Final/hibernate-validator-5.0.1.Final.jar:/home/neelakanta/.m2/repository/javax/validation/validation-api/1.1.0.Final/validation-api-1.1.0.Final.jar:/home/neelakanta/.m2/repository/com/fasterxml/classmate/0.8.0/classmate-0.8.0.jar:/home/neelakanta/.m2/repository/org/hibernate/hibernate-annotations/3.3.0.ga/hibernate-annotations-3.3.0.ga.jar:/home/neelakanta/.m2/repository/org/hibernate/hibernate/3.2.1.ga/hibernate-3.2.1.ga.jar:/home/neelakanta/.m2/repository/net/sf/ehcache/ehcache/1.2.3/ehcache-1.2.3.jar:/home/neelakanta/.m2/repository/commons-logging/commons-logging/1.0.4/commons-logging-1.0.4.jar:/home/neelakanta/.m2/repository/asm/asm-attrs/1.5.3/asm-attrs-1.5.3.jar:/home/neelakanta/.m2/repository/cglib/cglib/2.1_3/cglib-2.1_3.jar:/home/neelakanta/.m2/repository/asm/asm/1.5.3/asm-1.5.3.jar:/home/neelakanta/.m2/repository/commons-collections/commons-collections/2.1.1/commons-collections-2.1.1.jar:/home/neelakanta/.m2/repository/javax/persistence/persistence-api/1.0/persistence-api-1.0.jar:/home/neelakanta/.m2/repository/org/hibernate/hibernate-commons-annotations/3.3.0.ga/hibernate-commons-annotations-3.3.0.ga.jar:/home/neelakanta/.m2/repository/javax/transaction/jta/1.1/jta-1.1.jar:/home/neelakanta/.m2/repository/mysql/mysql-connector-java/6.0.5/mysql-connector-java-6.0.5.jar:/home/neelakanta/.m2/repository/c3p0/c3p0/0.9.0.4/c3p0-0.9.0.4.jar:/home/neelakanta/.m2/repository/org/hibernate/hibernate-entitymanager/4.3.1.Final/hibernate-entitymanager-4.3.1.Final.jar:/home/neelakanta/.m2/repository/org/jboss/logging/jboss-logging-annotations/1.2.0.Beta1/jboss-logging-annotations-1.2.0.Beta1.jar:/home/neelakanta/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.0.0.Final/jboss-transaction-api_1.2_spec-1.0.0.Final.jar:/home/neelakanta/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar:, java.class.version=52.0, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=3.13.0-119-generic, user.home=/home/neelakanta, user.timezone=Asia/Kolkata, java.awt.printerjob=sun.print.PSPrinterJob, file.encoding=UTF-8, java.specification.version=1.8, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, user.name=neelakanta, java.class.path=/home/neelakanta/Documents/Eclipse Documents/Mars Documents/BookStore/target/test-classes:/home/neelakanta/Documents/Eclipse Documents/Mars Documents/BookStore/target/classes:/home/neelakanta/.m2/repository/junit/junit/4.12/junit-4.12.jar:/home/neelakanta/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/neelakanta/.m2/repository/org/hibernate/hibernate-core/5.0.1.Final/hibernate-core-5.0.1.Final.jar:/home/neelakanta/.m2/repository/org/jboss/logging/jboss-logging/3.3.0.Final/jboss-logging-3.3.0.Final.jar:/home/neelakanta/.m2/repository/org/apache/geronimo/specs/geronimo-jta_1.1_spec/1.1.1/geronimo-jta_1.1_spec-1.1.1.jar:/home/neelakanta/.m2/repository/org/hibernate/javax/persistence/hibernate-jpa-2.1-api/1.0.0.Final/hibernate-jpa-2.1-api-1.0.0.Final.jar:/home/neelakanta/.m2/repository/org/javassist/javassist/3.18.1-GA/javassist-3.18.1-GA.jar:/home/neelakanta/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/home/neelakanta/.m2/repository/org/jboss/jandex/1.2.2.Final/jandex-1.2.2.Final.jar:/home/neelakanta/.m2/repository/dom4j/dom4j/1.6.1/dom4j-1.6.1.jar:/home/neelakanta/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.0.0.Final/hibernate-commons-annotations-5.0.0.Final.jar:/home/neelakanta/.m2/repository/org/hibernate/hibernate-validator/5.0.1.Final/hibernate-validator-5.0.1.Final.jar:/home/neelakanta/.m2/repository/javax/validation/validation-api/1.1.0.Final/validation-api-1.1.0.Final.jar:/home/neelakanta/.m2/repository/com/fasterxml/classmate/0.8.0/classmate-0.8.0.jar:/home/neelakanta/.m2/repository/org/hibernate/hibernate-annotations/3.3.0.ga/hibernate-annotations-3.3.0.ga.jar:/home/neelakanta/.m2/repository/org/hibernate/hibernate/3.2.1.ga/hibernate-3.2.1.ga.jar:/home/neelakanta/.m2/repository/net/sf/ehcache/ehcache/1.2.3/ehcache-1.2.3.jar:/home/neelakanta/.m2/repository/commons-logging/commons-logging/1.0.4/commons-logging-1.0.4.jar:/home/neelakanta/.m2/repository/asm/asm-attrs/1.5.3/asm-attrs-1.5.3.jar:/home/neelakanta/.m2/repository/cglib/cglib/2.1_3/cglib-2.1_3.jar:/home/neelakanta/.m2/repository/asm/asm/1.5.3/asm-1.5.3.jar:/home/neelakanta/.m2/repository/commons-collections/commons-collections/2.1.1/commons-collections-2.1.1.jar:/home/neelakanta/.m2/repository/javax/persistence/persistence-api/1.0/persistence-api-1.0.jar:/home/neelakanta/.m2/repository/org/hibernate/hibernate-commons-annotations/3.3.0.ga/hibernate-commons-annotations-3.3.0.ga.jar:/home/neelakanta/.m2/repository/javax/transaction/jta/1.1/jta-1.1.jar:/home/neelakanta/.m2/repository/mysql/mysql-connector-java/6.0.5/mysql-connector-java-6.0.5.jar:/home/neelakanta/.m2/repository/c3p0/c3p0/0.9.0.4/c3p0-0.9.0.4.jar:/home/neelakanta/.m2/repository/org/hibernate/hibernate-entitymanager/4.3.1.Final/hibernate-entitymanager-4.3.1.Final.jar:/home/neelakanta/.m2/repository/org/jboss/logging/jboss-logging-annotations/1.2.0.Beta1/jboss-logging-annotations-1.2.0.Beta1.jar:/home/neelakanta/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.0.0.Final/jboss-transaction-api_1.2_spec-1.0.0.Final.jar:/home/neelakanta/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar:, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=false, java.vm.specification.version=1.8, sun.arch.data.model=64, sun.java.command=/home/neelakanta/Documents/Eclipse Documents/Mars Documents/BookStore/target/surefire/surefirebooter5232880889481838645.jar /home/neelakanta/Documents/Eclipse Documents/Mars Documents/BookStore/target/surefire/surefire7552053918813552354tmp /home/neelakanta/Documents/Eclipse Documents/Mars Documents/BookStore/target/surefire/surefire_03604179774586556801tmp, java.home=/usr/java/jdk1.8.0_45/jre, hibernate.connection.url=jdbc:mysql://localhost:3306/bookstore?createDatabaseIfNotExist=true&useSSL=false, hibernate.dialect=org.hibernate.dialect.MySQLDialect, user.language=en, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.X11.XToolkit, java.vm.info=mixed mode, java.version=1.8.0_45, java.ext.dirs=/usr/java/jdk1.8.0_45/jre/lib/ext:/usr/java/packages/lib/ext, sun.boot.class.path=/usr/java/jdk1.8.0_45/jre/lib/resources.jar:/usr/java/jdk1.8.0_45/jre/lib/rt.jar:/usr/java/jdk1.8.0_45/jre/lib/sunrsasign.jar:/usr/java/jdk1.8.0_45/jre/lib/jsse.jar:/usr/java/jdk1.8.0_45/jre/lib/jce.jar:/usr/java/jdk1.8.0_45/jre/lib/charsets.jar:/usr/java/jdk1.8.0_45/jre/lib/jfr.jar:/usr/java/jdk1.8.0_45/jre/classes, java.vendor=Oracle Corporation, localRepository=/home/neelakanta/.m2/repository, file.separator=/, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, sun.desktop=gnome, sun.cpu.isalist=} 
[2017-09-06 19:05:04,806 - DEBUG - DefaultTraversableResolver.java::106] - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver 
[2017-09-06 19:05:04,806 - DEBUG - DefaultTraversableResolver.java::117] - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. 
[2017-09-06 19:05:04,806 - DEBUG - ValidationXmlParser.java::88] - Trying to load META-INF/validation.xml for XML based Validator configuration. 
[2017-09-06 19:05:04,807 - DEBUG - ValidationXmlParser.java::95] - No META-INF/validation.xml found. Using annotation based configuration only. 
[2017-09-06 19:05:04,808 - DEBUG - ClassLoaderAccessImpl.java::55] - Not known whether passed class name [com.book.store.entity.Book] is safe 
[2017-09-06 19:05:04,808 - DEBUG - ClassLoaderAccessImpl.java::57] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.book.store.entity.Book 
[2017-09-06 19:05:04,811 - DEBUG - ClassLoaderAccessImpl.java::55] - Not known whether passed class name [com.book.store.entity.Purchase] is safe 
[2017-09-06 19:05:04,811 - DEBUG - ClassLoaderAccessImpl.java::57] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.book.store.entity.Purchase 
[2017-09-06 19:05:04,813 - DEBUG - JaccIntegrator.java::80] - Skipping JACC integration as it was not enabled 
[2017-09-06 19:05:04,814 - DEBUG - ClassLoaderAccessImpl.java::55] - Not known whether passed class name [com.book.store.entity.Book] is safe 
[2017-09-06 19:05:04,814 - DEBUG - ClassLoaderAccessImpl.java::57] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.book.store.entity.Book 
[2017-09-06 19:05:04,814 - DEBUG - ClassLoaderAccessImpl.java::55] - Not known whether passed class name [com.book.store.entity.Book] is safe 
[2017-09-06 19:05:04,814 - DEBUG - ClassLoaderAccessImpl.java::57] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.book.store.entity.Book 
[2017-09-06 19:05:04,816 - DEBUG - ClassLoaderAccessImpl.java::55] - Not known whether passed class name [com.book.store.entity.Purchase] is safe 
[2017-09-06 19:05:04,816 - DEBUG - ClassLoaderAccessImpl.java::57] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.book.store.entity.Purchase 
[2017-09-06 19:05:04,816 - DEBUG - ClassLoaderAccessImpl.java::55] - Not known whether passed class name [com.book.store.entity.Purchase] is safe 
[2017-09-06 19:05:04,816 - DEBUG - ClassLoaderAccessImpl.java::57] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.book.store.entity.Purchase 
[2017-09-06 19:05:04,817 - DEBUG - AbstractEntityPersister.java::3418] - Static SQL for entity: com.book.store.entity.Book 
[2017-09-06 19:05:04,817 - DEBUG - AbstractEntityPersister.java::3423] -  Version select: select Book_id from Book where Book_id =? 
[2017-09-06 19:05:04,817 - DEBUG - AbstractEntityPersister.java::3426] -  Snapshot select: select book_.Book_id, book_.Book_name as Book_nam2_0_, book_.Author_name as Author_n3_0_, book_.Publisher as Publishe4_0_, book_.Category as Category5_0_, book_.price as price6_0_ from Book book_ where book_.Book_id=? 
[2017-09-06 19:05:04,817 - DEBUG - DelegatingBasicLogger.java::394] -  Insert 0: insert into Book (Book_name, Author_name, Publisher, Category, price, Book_id) values (?, ?, ?, ?, ?, ?) 
[2017-09-06 19:05:04,818 - DEBUG - DelegatingBasicLogger.java::394] -  Update 0: update Book set Book_name=?, Author_name=?, Publisher=?, Category=?, price=? where Book_id=? 
[2017-09-06 19:05:04,818 - DEBUG - DelegatingBasicLogger.java::394] -  Delete 0: delete from Book where Book_id=? 
[2017-09-06 19:05:04,818 - DEBUG - QuerySpacesImpl.java::174] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3701e6e4] 
[2017-09-06 19:05:04,818 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : bookName 
[2017-09-06 19:05:04,818 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : authorName 
[2017-09-06 19:05:04,818 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : publisherName 
[2017-09-06 19:05:04,818 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : categoryName 
[2017-09-06 19:05:04,818 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : price 
[2017-09-06 19:05:04,818 - DEBUG - FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java::76] - Building LoadPlan... 
[2017-09-06 19:05:04,819 - DEBUG - LoadQueryJoinAndFetchProcessor.java::95] - processing queryspace <gen:0> 
[2017-09-06 19:05:04,819 - DEBUG - LoadPlanTreePrinter.java::55] - LoadPlan(entity=com.book.store.entity.Book)
    - Returns
       - EntityReturnImpl(entity=com.book.store.entity.Book, querySpaceUid=<gen:0>, path=com.book.store.entity.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.book.store.entity.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {Book_id1_0_0_}
 
[2017-09-06 19:05:04,819 - DEBUG - EntityLoader.java::128] - Static select for entity com.book.store.entity.Book [NONE]: select book0_.Book_id as Book_id1_0_0_, book0_.Book_name as Book_nam2_0_0_, book0_.Author_name as Author_n3_0_0_, book0_.Publisher as Publishe4_0_0_, book0_.Category as Category5_0_0_, book0_.price as price6_0_0_ from Book book0_ where book0_.Book_id=? 
[2017-09-06 19:05:04,819 - DEBUG - QuerySpacesImpl.java::174] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@65f58c6e] 
[2017-09-06 19:05:04,819 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : bookName 
[2017-09-06 19:05:04,819 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : authorName 
[2017-09-06 19:05:04,819 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : publisherName 
[2017-09-06 19:05:04,820 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : categoryName 
[2017-09-06 19:05:04,820 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : price 
[2017-09-06 19:05:04,820 - DEBUG - FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java::76] - Building LoadPlan... 
[2017-09-06 19:05:04,820 - DEBUG - LoadQueryJoinAndFetchProcessor.java::95] - processing queryspace <gen:0> 
[2017-09-06 19:05:04,820 - DEBUG - LoadPlanTreePrinter.java::55] - LoadPlan(entity=com.book.store.entity.Book)
    - Returns
       - EntityReturnImpl(entity=com.book.store.entity.Book, querySpaceUid=<gen:0>, path=com.book.store.entity.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.book.store.entity.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {Book_id1_0_0_}
 
[2017-09-06 19:05:04,820 - DEBUG - EntityLoader.java::128] - Static select for entity com.book.store.entity.Book [READ]: select book0_.Book_id as Book_id1_0_0_, book0_.Book_name as Book_nam2_0_0_, book0_.Author_name as Author_n3_0_0_, book0_.Publisher as Publishe4_0_0_, book0_.Category as Category5_0_0_, book0_.price as price6_0_0_ from Book book0_ where book0_.Book_id=? 
[2017-09-06 19:05:04,820 - DEBUG - QuerySpacesImpl.java::174] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4ba380c7] 
[2017-09-06 19:05:04,821 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : bookName 
[2017-09-06 19:05:04,821 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : authorName 
[2017-09-06 19:05:04,821 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : publisherName 
[2017-09-06 19:05:04,821 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : categoryName 
[2017-09-06 19:05:04,821 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : price 
[2017-09-06 19:05:04,821 - DEBUG - FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java::76] - Building LoadPlan... 
[2017-09-06 19:05:04,821 - DEBUG - LoadQueryJoinAndFetchProcessor.java::95] - processing queryspace <gen:0> 
[2017-09-06 19:05:04,821 - DEBUG - LoadPlanTreePrinter.java::55] - LoadPlan(entity=com.book.store.entity.Book)
    - Returns
       - EntityReturnImpl(entity=com.book.store.entity.Book, querySpaceUid=<gen:0>, path=com.book.store.entity.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.book.store.entity.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {Book_id1_0_0_}
 
[2017-09-06 19:05:04,822 - DEBUG - EntityLoader.java::128] - Static select for entity com.book.store.entity.Book [UPGRADE]: select book0_.Book_id as Book_id1_0_0_, book0_.Book_name as Book_nam2_0_0_, book0_.Author_name as Author_n3_0_0_, book0_.Publisher as Publishe4_0_0_, book0_.Category as Category5_0_0_, book0_.price as price6_0_0_ from Book book0_ where book0_.Book_id=? for update 
[2017-09-06 19:05:04,822 - DEBUG - QuerySpacesImpl.java::174] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@31133b6e] 
[2017-09-06 19:05:04,822 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : bookName 
[2017-09-06 19:05:04,822 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : authorName 
[2017-09-06 19:05:04,822 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : publisherName 
[2017-09-06 19:05:04,822 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : categoryName 
[2017-09-06 19:05:04,822 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : price 
[2017-09-06 19:05:04,822 - DEBUG - FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java::76] - Building LoadPlan... 
[2017-09-06 19:05:04,823 - DEBUG - LoadQueryJoinAndFetchProcessor.java::95] - processing queryspace <gen:0> 
[2017-09-06 19:05:04,823 - DEBUG - LoadPlanTreePrinter.java::55] - LoadPlan(entity=com.book.store.entity.Book)
    - Returns
       - EntityReturnImpl(entity=com.book.store.entity.Book, querySpaceUid=<gen:0>, path=com.book.store.entity.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.book.store.entity.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {Book_id1_0_0_}
 
[2017-09-06 19:05:04,823 - DEBUG - EntityLoader.java::128] - Static select for entity com.book.store.entity.Book [UPGRADE_NOWAIT]: select book0_.Book_id as Book_id1_0_0_, book0_.Book_name as Book_nam2_0_0_, book0_.Author_name as Author_n3_0_0_, book0_.Publisher as Publishe4_0_0_, book0_.Category as Category5_0_0_, book0_.price as price6_0_0_ from Book book0_ where book0_.Book_id=? for update 
[2017-09-06 19:05:04,823 - DEBUG - QuerySpacesImpl.java::174] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7ea08277] 
[2017-09-06 19:05:04,823 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : bookName 
[2017-09-06 19:05:04,823 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : authorName 
[2017-09-06 19:05:04,824 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : publisherName 
[2017-09-06 19:05:04,824 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : categoryName 
[2017-09-06 19:05:04,824 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : price 
[2017-09-06 19:05:04,824 - DEBUG - FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java::76] - Building LoadPlan... 
[2017-09-06 19:05:04,824 - DEBUG - LoadQueryJoinAndFetchProcessor.java::95] - processing queryspace <gen:0> 
[2017-09-06 19:05:04,824 - DEBUG - LoadPlanTreePrinter.java::55] - LoadPlan(entity=com.book.store.entity.Book)
    - Returns
       - EntityReturnImpl(entity=com.book.store.entity.Book, querySpaceUid=<gen:0>, path=com.book.store.entity.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.book.store.entity.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {Book_id1_0_0_}
 
[2017-09-06 19:05:04,824 - DEBUG - EntityLoader.java::128] - Static select for entity com.book.store.entity.Book [UPGRADE_SKIPLOCKED]: select book0_.Book_id as Book_id1_0_0_, book0_.Book_name as Book_nam2_0_0_, book0_.Author_name as Author_n3_0_0_, book0_.Publisher as Publishe4_0_0_, book0_.Category as Category5_0_0_, book0_.price as price6_0_0_ from Book book0_ where book0_.Book_id=? for update 
[2017-09-06 19:05:04,824 - DEBUG - QuerySpacesImpl.java::174] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4ce14f05] 
[2017-09-06 19:05:04,825 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : bookName 
[2017-09-06 19:05:04,825 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : authorName 
[2017-09-06 19:05:04,825 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : publisherName 
[2017-09-06 19:05:04,825 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : categoryName 
[2017-09-06 19:05:04,825 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : price 
[2017-09-06 19:05:04,825 - DEBUG - FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java::76] - Building LoadPlan... 
[2017-09-06 19:05:04,825 - DEBUG - LoadQueryJoinAndFetchProcessor.java::95] - processing queryspace <gen:0> 
[2017-09-06 19:05:04,826 - DEBUG - LoadPlanTreePrinter.java::55] - LoadPlan(entity=com.book.store.entity.Book)
    - Returns
       - EntityReturnImpl(entity=com.book.store.entity.Book, querySpaceUid=<gen:0>, path=com.book.store.entity.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.book.store.entity.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {Book_id1_0_0_}
 
[2017-09-06 19:05:04,826 - DEBUG - EntityLoader.java::128] - Static select for entity com.book.store.entity.Book [FORCE]: select book0_.Book_id as Book_id1_0_0_, book0_.Book_name as Book_nam2_0_0_, book0_.Author_name as Author_n3_0_0_, book0_.Publisher as Publishe4_0_0_, book0_.Category as Category5_0_0_, book0_.price as price6_0_0_ from Book book0_ where book0_.Book_id=? for update 
[2017-09-06 19:05:04,826 - DEBUG - QuerySpacesImpl.java::174] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@b965857] 
[2017-09-06 19:05:04,826 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : bookName 
[2017-09-06 19:05:04,826 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : authorName 
[2017-09-06 19:05:04,826 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : publisherName 
[2017-09-06 19:05:04,826 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : categoryName 
[2017-09-06 19:05:04,826 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : price 
[2017-09-06 19:05:04,826 - DEBUG - FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java::76] - Building LoadPlan... 
[2017-09-06 19:05:04,827 - DEBUG - LoadQueryJoinAndFetchProcessor.java::95] - processing queryspace <gen:0> 
[2017-09-06 19:05:04,827 - DEBUG - LoadPlanTreePrinter.java::55] - LoadPlan(entity=com.book.store.entity.Book)
    - Returns
       - EntityReturnImpl(entity=com.book.store.entity.Book, querySpaceUid=<gen:0>, path=com.book.store.entity.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.book.store.entity.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {Book_id1_0_0_}
 
[2017-09-06 19:05:04,827 - DEBUG - EntityLoader.java::128] - Static select for entity com.book.store.entity.Book [PESSIMISTIC_READ]: select book0_.Book_id as Book_id1_0_0_, book0_.Book_name as Book_nam2_0_0_, book0_.Author_name as Author_n3_0_0_, book0_.Publisher as Publishe4_0_0_, book0_.Category as Category5_0_0_, book0_.price as price6_0_0_ from Book book0_ where book0_.Book_id=? lock in share mode 
[2017-09-06 19:05:04,827 - DEBUG - QuerySpacesImpl.java::174] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@27a7ef08] 
[2017-09-06 19:05:04,827 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : bookName 
[2017-09-06 19:05:04,827 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : authorName 
[2017-09-06 19:05:04,827 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : publisherName 
[2017-09-06 19:05:04,828 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : categoryName 
[2017-09-06 19:05:04,828 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : price 
[2017-09-06 19:05:04,828 - DEBUG - FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java::76] - Building LoadPlan... 
[2017-09-06 19:05:04,828 - DEBUG - LoadQueryJoinAndFetchProcessor.java::95] - processing queryspace <gen:0> 
[2017-09-06 19:05:04,828 - DEBUG - LoadPlanTreePrinter.java::55] - LoadPlan(entity=com.book.store.entity.Book)
    - Returns
       - EntityReturnImpl(entity=com.book.store.entity.Book, querySpaceUid=<gen:0>, path=com.book.store.entity.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.book.store.entity.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {Book_id1_0_0_}
 
[2017-09-06 19:05:04,828 - DEBUG - EntityLoader.java::128] - Static select for entity com.book.store.entity.Book [PESSIMISTIC_WRITE]: select book0_.Book_id as Book_id1_0_0_, book0_.Book_name as Book_nam2_0_0_, book0_.Author_name as Author_n3_0_0_, book0_.Publisher as Publishe4_0_0_, book0_.Category as Category5_0_0_, book0_.price as price6_0_0_ from Book book0_ where book0_.Book_id=? for update 
[2017-09-06 19:05:04,828 - DEBUG - QuerySpacesImpl.java::174] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@11e33bac] 
[2017-09-06 19:05:04,828 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : bookName 
[2017-09-06 19:05:04,829 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : authorName 
[2017-09-06 19:05:04,829 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : publisherName 
[2017-09-06 19:05:04,829 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : categoryName 
[2017-09-06 19:05:04,829 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : price 
[2017-09-06 19:05:04,829 - DEBUG - FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java::76] - Building LoadPlan... 
[2017-09-06 19:05:04,829 - DEBUG - LoadQueryJoinAndFetchProcessor.java::95] - processing queryspace <gen:0> 
[2017-09-06 19:05:04,829 - DEBUG - LoadPlanTreePrinter.java::55] - LoadPlan(entity=com.book.store.entity.Book)
    - Returns
       - EntityReturnImpl(entity=com.book.store.entity.Book, querySpaceUid=<gen:0>, path=com.book.store.entity.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.book.store.entity.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {Book_id1_0_0_}
 
[2017-09-06 19:05:04,829 - DEBUG - EntityLoader.java::128] - Static select for entity com.book.store.entity.Book [PESSIMISTIC_FORCE_INCREMENT]: select book0_.Book_id as Book_id1_0_0_, book0_.Book_name as Book_nam2_0_0_, book0_.Author_name as Author_n3_0_0_, book0_.Publisher as Publishe4_0_0_, book0_.Category as Category5_0_0_, book0_.price as price6_0_0_ from Book book0_ where book0_.Book_id=? for update 
[2017-09-06 19:05:04,830 - DEBUG - QuerySpacesImpl.java::174] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@289778cd] 
[2017-09-06 19:05:04,830 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : bookName 
[2017-09-06 19:05:04,830 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : authorName 
[2017-09-06 19:05:04,830 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : publisherName 
[2017-09-06 19:05:04,830 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : categoryName 
[2017-09-06 19:05:04,830 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : price 
[2017-09-06 19:05:04,830 - DEBUG - FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java::76] - Building LoadPlan... 
[2017-09-06 19:05:04,830 - DEBUG - LoadQueryJoinAndFetchProcessor.java::95] - processing queryspace <gen:0> 
[2017-09-06 19:05:04,831 - DEBUG - LoadPlanTreePrinter.java::55] - LoadPlan(entity=com.book.store.entity.Book)
    - Returns
       - EntityReturnImpl(entity=com.book.store.entity.Book, querySpaceUid=<gen:0>, path=com.book.store.entity.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.book.store.entity.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {Book_id1_0_0_}
 
[2017-09-06 19:05:04,831 - DEBUG - EntityLoader.java::128] - Static select for entity com.book.store.entity.Book [OPTIMISTIC]: select book0_.Book_id as Book_id1_0_0_, book0_.Book_name as Book_nam2_0_0_, book0_.Author_name as Author_n3_0_0_, book0_.Publisher as Publishe4_0_0_, book0_.Category as Category5_0_0_, book0_.price as price6_0_0_ from Book book0_ where book0_.Book_id=? 
[2017-09-06 19:05:04,831 - DEBUG - QuerySpacesImpl.java::174] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7c2312fa] 
[2017-09-06 19:05:04,831 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : bookName 
[2017-09-06 19:05:04,831 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : authorName 
[2017-09-06 19:05:04,831 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : publisherName 
[2017-09-06 19:05:04,831 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : categoryName 
[2017-09-06 19:05:04,831 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : price 
[2017-09-06 19:05:04,831 - DEBUG - FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java::76] - Building LoadPlan... 
[2017-09-06 19:05:04,832 - DEBUG - LoadQueryJoinAndFetchProcessor.java::95] - processing queryspace <gen:0> 
[2017-09-06 19:05:04,832 - DEBUG - LoadPlanTreePrinter.java::55] - LoadPlan(entity=com.book.store.entity.Book)
    - Returns
       - EntityReturnImpl(entity=com.book.store.entity.Book, querySpaceUid=<gen:0>, path=com.book.store.entity.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.book.store.entity.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {Book_id1_0_0_}
 
[2017-09-06 19:05:04,832 - DEBUG - EntityLoader.java::128] - Static select for entity com.book.store.entity.Book [OPTIMISTIC_FORCE_INCREMENT]: select book0_.Book_id as Book_id1_0_0_, book0_.Book_name as Book_nam2_0_0_, book0_.Author_name as Author_n3_0_0_, book0_.Publisher as Publishe4_0_0_, book0_.Category as Category5_0_0_, book0_.price as price6_0_0_ from Book book0_ where book0_.Book_id=? 
[2017-09-06 19:05:04,832 - DEBUG - CascadeEntityLoader.java::38] - Static select for action ACTION_MERGE on entity com.book.store.entity.Book: select book0_.Book_id as Book_id1_0_0_, book0_.Book_name as Book_nam2_0_0_, book0_.Author_name as Author_n3_0_0_, book0_.Publisher as Publishe4_0_0_, book0_.Category as Category5_0_0_, book0_.price as price6_0_0_ from Book book0_ where book0_.Book_id=? 
[2017-09-06 19:05:04,832 - DEBUG - CascadeEntityLoader.java::38] - Static select for action ACTION_REFRESH on entity com.book.store.entity.Book: select book0_.Book_id as Book_id1_0_0_, book0_.Book_name as Book_nam2_0_0_, book0_.Author_name as Author_n3_0_0_, book0_.Publisher as Publishe4_0_0_, book0_.Category as Category5_0_0_, book0_.price as price6_0_0_ from Book book0_ where book0_.Book_id=? 
[2017-09-06 19:05:04,833 - DEBUG - AbstractEntityPersister.java::3418] - Static SQL for entity: com.book.store.entity.Purchase 
[2017-09-06 19:05:04,833 - DEBUG - AbstractEntityPersister.java::3423] -  Version select: select Purchase_no from Purchase where Purchase_no =? 
[2017-09-06 19:05:04,833 - DEBUG - AbstractEntityPersister.java::3426] -  Snapshot select: select purchase_.Purchase_no, purchase_.Book_id as Book_id2_1_, purchase_.Customer_name as Customer3_1_, purchase_.Customer_mobileno as Customer4_1_, purchase_.Purchase_date as Purchase5_1_, purchase_.Amount as Amount6_1_ from Purchase purchase_ where purchase_.Purchase_no=? 
[2017-09-06 19:05:04,833 - DEBUG - DelegatingBasicLogger.java::394] -  Insert 0: insert into Purchase (Book_id, Customer_name, Customer_mobileno, Purchase_date, Amount, Purchase_no) values (?, ?, ?, ?, ?, ?) 
[2017-09-06 19:05:04,833 - DEBUG - DelegatingBasicLogger.java::394] -  Update 0: update Purchase set Book_id=?, Customer_name=?, Customer_mobileno=?, Purchase_date=?, Amount=? where Purchase_no=? 
[2017-09-06 19:05:04,833 - DEBUG - DelegatingBasicLogger.java::394] -  Delete 0: delete from Purchase where Purchase_no=? 
[2017-09-06 19:05:04,833 - DEBUG - AbstractEntityPersister.java::3434] -  Identity insert: insert into Purchase (Book_id, Customer_name, Customer_mobileno, Purchase_date, Amount) values (?, ?, ?, ?, ?) 
[2017-09-06 19:05:04,833 - DEBUG - QuerySpacesImpl.java::174] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5ff2e84b] 
[2017-09-06 19:05:04,833 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : bookId 
[2017-09-06 19:05:04,833 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : customerName 
[2017-09-06 19:05:04,833 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : customerMobileNumber 
[2017-09-06 19:05:04,834 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : purchaseDate 
[2017-09-06 19:05:04,834 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : amount 
[2017-09-06 19:05:04,834 - DEBUG - FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java::76] - Building LoadPlan... 
[2017-09-06 19:05:04,834 - DEBUG - LoadQueryJoinAndFetchProcessor.java::95] - processing queryspace <gen:0> 
[2017-09-06 19:05:04,834 - DEBUG - LoadPlanTreePrinter.java::55] - LoadPlan(entity=com.book.store.entity.Purchase)
    - Returns
       - EntityReturnImpl(entity=com.book.store.entity.Purchase, querySpaceUid=<gen:0>, path=com.book.store.entity.Purchase)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.book.store.entity.Purchase)
          - SQL table alias mapping - purchase0_
          - alias suffix - 0_
          - suffixed key columns - {Purchase1_1_0_}
 
[2017-09-06 19:05:04,834 - DEBUG - EntityLoader.java::128] - Static select for entity com.book.store.entity.Purchase [NONE]: select purchase0_.Purchase_no as Purchase1_1_0_, purchase0_.Book_id as Book_id2_1_0_, purchase0_.Customer_name as Customer3_1_0_, purchase0_.Customer_mobileno as Customer4_1_0_, purchase0_.Purchase_date as Purchase5_1_0_, purchase0_.Amount as Amount6_1_0_ from Purchase purchase0_ where purchase0_.Purchase_no=? 
[2017-09-06 19:05:04,834 - DEBUG - QuerySpacesImpl.java::174] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@64a4dd8d] 
[2017-09-06 19:05:04,834 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : bookId 
[2017-09-06 19:05:04,835 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : customerName 
[2017-09-06 19:05:04,835 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : customerMobileNumber 
[2017-09-06 19:05:04,835 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : purchaseDate 
[2017-09-06 19:05:04,835 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : amount 
[2017-09-06 19:05:04,835 - DEBUG - FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java::76] - Building LoadPlan... 
[2017-09-06 19:05:04,835 - DEBUG - LoadQueryJoinAndFetchProcessor.java::95] - processing queryspace <gen:0> 
[2017-09-06 19:05:04,835 - DEBUG - LoadPlanTreePrinter.java::55] - LoadPlan(entity=com.book.store.entity.Purchase)
    - Returns
       - EntityReturnImpl(entity=com.book.store.entity.Purchase, querySpaceUid=<gen:0>, path=com.book.store.entity.Purchase)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.book.store.entity.Purchase)
          - SQL table alias mapping - purchase0_
          - alias suffix - 0_
          - suffixed key columns - {Purchase1_1_0_}
 
[2017-09-06 19:05:04,835 - DEBUG - EntityLoader.java::128] - Static select for entity com.book.store.entity.Purchase [READ]: select purchase0_.Purchase_no as Purchase1_1_0_, purchase0_.Book_id as Book_id2_1_0_, purchase0_.Customer_name as Customer3_1_0_, purchase0_.Customer_mobileno as Customer4_1_0_, purchase0_.Purchase_date as Purchase5_1_0_, purchase0_.Amount as Amount6_1_0_ from Purchase purchase0_ where purchase0_.Purchase_no=? 
[2017-09-06 19:05:04,836 - DEBUG - QuerySpacesImpl.java::174] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@65a5d4f9] 
[2017-09-06 19:05:04,836 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : bookId 
[2017-09-06 19:05:04,836 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : customerName 
[2017-09-06 19:05:04,836 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : customerMobileNumber 
[2017-09-06 19:05:04,836 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : purchaseDate 
[2017-09-06 19:05:04,836 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : amount 
[2017-09-06 19:05:04,836 - DEBUG - FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java::76] - Building LoadPlan... 
[2017-09-06 19:05:04,836 - DEBUG - LoadQueryJoinAndFetchProcessor.java::95] - processing queryspace <gen:0> 
[2017-09-06 19:05:04,837 - DEBUG - LoadPlanTreePrinter.java::55] - LoadPlan(entity=com.book.store.entity.Purchase)
    - Returns
       - EntityReturnImpl(entity=com.book.store.entity.Purchase, querySpaceUid=<gen:0>, path=com.book.store.entity.Purchase)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.book.store.entity.Purchase)
          - SQL table alias mapping - purchase0_
          - alias suffix - 0_
          - suffixed key columns - {Purchase1_1_0_}
 
[2017-09-06 19:05:04,837 - DEBUG - EntityLoader.java::128] - Static select for entity com.book.store.entity.Purchase [UPGRADE]: select purchase0_.Purchase_no as Purchase1_1_0_, purchase0_.Book_id as Book_id2_1_0_, purchase0_.Customer_name as Customer3_1_0_, purchase0_.Customer_mobileno as Customer4_1_0_, purchase0_.Purchase_date as Purchase5_1_0_, purchase0_.Amount as Amount6_1_0_ from Purchase purchase0_ where purchase0_.Purchase_no=? for update 
[2017-09-06 19:05:04,837 - DEBUG - QuerySpacesImpl.java::174] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@22367b8] 
[2017-09-06 19:05:04,837 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : bookId 
[2017-09-06 19:05:04,837 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : customerName 
[2017-09-06 19:05:04,837 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : customerMobileNumber 
[2017-09-06 19:05:04,837 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : purchaseDate 
[2017-09-06 19:05:04,837 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : amount 
[2017-09-06 19:05:04,837 - DEBUG - FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java::76] - Building LoadPlan... 
[2017-09-06 19:05:04,838 - DEBUG - LoadQueryJoinAndFetchProcessor.java::95] - processing queryspace <gen:0> 
[2017-09-06 19:05:04,838 - DEBUG - LoadPlanTreePrinter.java::55] - LoadPlan(entity=com.book.store.entity.Purchase)
    - Returns
       - EntityReturnImpl(entity=com.book.store.entity.Purchase, querySpaceUid=<gen:0>, path=com.book.store.entity.Purchase)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.book.store.entity.Purchase)
          - SQL table alias mapping - purchase0_
          - alias suffix - 0_
          - suffixed key columns - {Purchase1_1_0_}
 
[2017-09-06 19:05:04,838 - DEBUG - EntityLoader.java::128] - Static select for entity com.book.store.entity.Purchase [UPGRADE_NOWAIT]: select purchase0_.Purchase_no as Purchase1_1_0_, purchase0_.Book_id as Book_id2_1_0_, purchase0_.Customer_name as Customer3_1_0_, purchase0_.Customer_mobileno as Customer4_1_0_, purchase0_.Purchase_date as Purchase5_1_0_, purchase0_.Amount as Amount6_1_0_ from Purchase purchase0_ where purchase0_.Purchase_no=? for update 
[2017-09-06 19:05:04,838 - DEBUG - QuerySpacesImpl.java::174] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@af9a89f] 
[2017-09-06 19:05:04,838 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : bookId 
[2017-09-06 19:05:04,838 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : customerName 
[2017-09-06 19:05:04,838 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : customerMobileNumber 
[2017-09-06 19:05:04,838 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : purchaseDate 
[2017-09-06 19:05:04,839 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : amount 
[2017-09-06 19:05:04,839 - DEBUG - FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java::76] - Building LoadPlan... 
[2017-09-06 19:05:04,839 - DEBUG - LoadQueryJoinAndFetchProcessor.java::95] - processing queryspace <gen:0> 
[2017-09-06 19:05:04,839 - DEBUG - LoadPlanTreePrinter.java::55] - LoadPlan(entity=com.book.store.entity.Purchase)
    - Returns
       - EntityReturnImpl(entity=com.book.store.entity.Purchase, querySpaceUid=<gen:0>, path=com.book.store.entity.Purchase)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.book.store.entity.Purchase)
          - SQL table alias mapping - purchase0_
          - alias suffix - 0_
          - suffixed key columns - {Purchase1_1_0_}
 
[2017-09-06 19:05:04,839 - DEBUG - EntityLoader.java::128] - Static select for entity com.book.store.entity.Purchase [UPGRADE_SKIPLOCKED]: select purchase0_.Purchase_no as Purchase1_1_0_, purchase0_.Book_id as Book_id2_1_0_, purchase0_.Customer_name as Customer3_1_0_, purchase0_.Customer_mobileno as Customer4_1_0_, purchase0_.Purchase_date as Purchase5_1_0_, purchase0_.Amount as Amount6_1_0_ from Purchase purchase0_ where purchase0_.Purchase_no=? for update 
[2017-09-06 19:05:04,839 - DEBUG - QuerySpacesImpl.java::174] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1fcf9739] 
[2017-09-06 19:05:04,839 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : bookId 
[2017-09-06 19:05:04,839 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : customerName 
[2017-09-06 19:05:04,840 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : customerMobileNumber 
[2017-09-06 19:05:04,840 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : purchaseDate 
[2017-09-06 19:05:04,840 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : amount 
[2017-09-06 19:05:04,840 - DEBUG - FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java::76] - Building LoadPlan... 
[2017-09-06 19:05:04,840 - DEBUG - LoadQueryJoinAndFetchProcessor.java::95] - processing queryspace <gen:0> 
[2017-09-06 19:05:04,840 - DEBUG - LoadPlanTreePrinter.java::55] - LoadPlan(entity=com.book.store.entity.Purchase)
    - Returns
       - EntityReturnImpl(entity=com.book.store.entity.Purchase, querySpaceUid=<gen:0>, path=com.book.store.entity.Purchase)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.book.store.entity.Purchase)
          - SQL table alias mapping - purchase0_
          - alias suffix - 0_
          - suffixed key columns - {Purchase1_1_0_}
 
[2017-09-06 19:05:04,840 - DEBUG - EntityLoader.java::128] - Static select for entity com.book.store.entity.Purchase [FORCE]: select purchase0_.Purchase_no as Purchase1_1_0_, purchase0_.Book_id as Book_id2_1_0_, purchase0_.Customer_name as Customer3_1_0_, purchase0_.Customer_mobileno as Customer4_1_0_, purchase0_.Purchase_date as Purchase5_1_0_, purchase0_.Amount as Amount6_1_0_ from Purchase purchase0_ where purchase0_.Purchase_no=? for update 
[2017-09-06 19:05:04,840 - DEBUG - QuerySpacesImpl.java::174] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1cb37ee4] 
[2017-09-06 19:05:04,841 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : bookId 
[2017-09-06 19:05:04,841 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : customerName 
[2017-09-06 19:05:04,841 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : customerMobileNumber 
[2017-09-06 19:05:04,841 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : purchaseDate 
[2017-09-06 19:05:04,841 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : amount 
[2017-09-06 19:05:04,841 - DEBUG - FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java::76] - Building LoadPlan... 
[2017-09-06 19:05:04,841 - DEBUG - LoadQueryJoinAndFetchProcessor.java::95] - processing queryspace <gen:0> 
[2017-09-06 19:05:04,841 - DEBUG - LoadPlanTreePrinter.java::55] - LoadPlan(entity=com.book.store.entity.Purchase)
    - Returns
       - EntityReturnImpl(entity=com.book.store.entity.Purchase, querySpaceUid=<gen:0>, path=com.book.store.entity.Purchase)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.book.store.entity.Purchase)
          - SQL table alias mapping - purchase0_
          - alias suffix - 0_
          - suffixed key columns - {Purchase1_1_0_}
 
[2017-09-06 19:05:04,841 - DEBUG - EntityLoader.java::128] - Static select for entity com.book.store.entity.Purchase [PESSIMISTIC_READ]: select purchase0_.Purchase_no as Purchase1_1_0_, purchase0_.Book_id as Book_id2_1_0_, purchase0_.Customer_name as Customer3_1_0_, purchase0_.Customer_mobileno as Customer4_1_0_, purchase0_.Purchase_date as Purchase5_1_0_, purchase0_.Amount as Amount6_1_0_ from Purchase purchase0_ where purchase0_.Purchase_no=? lock in share mode 
[2017-09-06 19:05:04,842 - DEBUG - QuerySpacesImpl.java::174] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@385e36d4] 
[2017-09-06 19:05:04,842 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : bookId 
[2017-09-06 19:05:04,842 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : customerName 
[2017-09-06 19:05:04,842 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : customerMobileNumber 
[2017-09-06 19:05:04,842 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : purchaseDate 
[2017-09-06 19:05:04,842 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : amount 
[2017-09-06 19:05:04,842 - DEBUG - FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java::76] - Building LoadPlan... 
[2017-09-06 19:05:04,842 - DEBUG - LoadQueryJoinAndFetchProcessor.java::95] - processing queryspace <gen:0> 
[2017-09-06 19:05:04,843 - DEBUG - LoadPlanTreePrinter.java::55] - LoadPlan(entity=com.book.store.entity.Purchase)
    - Returns
       - EntityReturnImpl(entity=com.book.store.entity.Purchase, querySpaceUid=<gen:0>, path=com.book.store.entity.Purchase)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.book.store.entity.Purchase)
          - SQL table alias mapping - purchase0_
          - alias suffix - 0_
          - suffixed key columns - {Purchase1_1_0_}
 
[2017-09-06 19:05:04,843 - DEBUG - EntityLoader.java::128] - Static select for entity com.book.store.entity.Purchase [PESSIMISTIC_WRITE]: select purchase0_.Purchase_no as Purchase1_1_0_, purchase0_.Book_id as Book_id2_1_0_, purchase0_.Customer_name as Customer3_1_0_, purchase0_.Customer_mobileno as Customer4_1_0_, purchase0_.Purchase_date as Purchase5_1_0_, purchase0_.Amount as Amount6_1_0_ from Purchase purchase0_ where purchase0_.Purchase_no=? for update 
[2017-09-06 19:05:04,843 - DEBUG - QuerySpacesImpl.java::174] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2881ad47] 
[2017-09-06 19:05:04,843 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : bookId 
[2017-09-06 19:05:04,843 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : customerName 
[2017-09-06 19:05:04,843 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : customerMobileNumber 
[2017-09-06 19:05:04,843 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : purchaseDate 
[2017-09-06 19:05:04,843 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : amount 
[2017-09-06 19:05:04,844 - DEBUG - FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java::76] - Building LoadPlan... 
[2017-09-06 19:05:04,844 - DEBUG - LoadQueryJoinAndFetchProcessor.java::95] - processing queryspace <gen:0> 
[2017-09-06 19:05:04,844 - DEBUG - LoadPlanTreePrinter.java::55] - LoadPlan(entity=com.book.store.entity.Purchase)
    - Returns
       - EntityReturnImpl(entity=com.book.store.entity.Purchase, querySpaceUid=<gen:0>, path=com.book.store.entity.Purchase)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.book.store.entity.Purchase)
          - SQL table alias mapping - purchase0_
          - alias suffix - 0_
          - suffixed key columns - {Purchase1_1_0_}
 
[2017-09-06 19:05:04,844 - DEBUG - EntityLoader.java::128] - Static select for entity com.book.store.entity.Purchase [PESSIMISTIC_FORCE_INCREMENT]: select purchase0_.Purchase_no as Purchase1_1_0_, purchase0_.Book_id as Book_id2_1_0_, purchase0_.Customer_name as Customer3_1_0_, purchase0_.Customer_mobileno as Customer4_1_0_, purchase0_.Purchase_date as Purchase5_1_0_, purchase0_.Amount as Amount6_1_0_ from Purchase purchase0_ where purchase0_.Purchase_no=? for update 
[2017-09-06 19:05:04,844 - DEBUG - QuerySpacesImpl.java::174] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@62ce72ff] 
[2017-09-06 19:05:04,844 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : bookId 
[2017-09-06 19:05:04,845 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : customerName 
[2017-09-06 19:05:04,845 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : customerMobileNumber 
[2017-09-06 19:05:04,845 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : purchaseDate 
[2017-09-06 19:05:04,845 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : amount 
[2017-09-06 19:05:04,845 - DEBUG - FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java::76] - Building LoadPlan... 
[2017-09-06 19:05:04,845 - DEBUG - LoadQueryJoinAndFetchProcessor.java::95] - processing queryspace <gen:0> 
[2017-09-06 19:05:04,845 - DEBUG - LoadPlanTreePrinter.java::55] - LoadPlan(entity=com.book.store.entity.Purchase)
    - Returns
       - EntityReturnImpl(entity=com.book.store.entity.Purchase, querySpaceUid=<gen:0>, path=com.book.store.entity.Purchase)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.book.store.entity.Purchase)
          - SQL table alias mapping - purchase0_
          - alias suffix - 0_
          - suffixed key columns - {Purchase1_1_0_}
 
[2017-09-06 19:05:04,845 - DEBUG - EntityLoader.java::128] - Static select for entity com.book.store.entity.Purchase [OPTIMISTIC]: select purchase0_.Purchase_no as Purchase1_1_0_, purchase0_.Book_id as Book_id2_1_0_, purchase0_.Customer_name as Customer3_1_0_, purchase0_.Customer_mobileno as Customer4_1_0_, purchase0_.Purchase_date as Purchase5_1_0_, purchase0_.Amount as Amount6_1_0_ from Purchase purchase0_ where purchase0_.Purchase_no=? 
[2017-09-06 19:05:04,846 - DEBUG - QuerySpacesImpl.java::174] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7de843ef] 
[2017-09-06 19:05:04,846 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : bookId 
[2017-09-06 19:05:04,846 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : customerName 
[2017-09-06 19:05:04,846 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : customerMobileNumber 
[2017-09-06 19:05:04,846 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : purchaseDate 
[2017-09-06 19:05:04,846 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : amount 
[2017-09-06 19:05:04,846 - DEBUG - FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java::76] - Building LoadPlan... 
[2017-09-06 19:05:04,846 - DEBUG - LoadQueryJoinAndFetchProcessor.java::95] - processing queryspace <gen:0> 
[2017-09-06 19:05:04,847 - DEBUG - LoadPlanTreePrinter.java::55] - LoadPlan(entity=com.book.store.entity.Purchase)
    - Returns
       - EntityReturnImpl(entity=com.book.store.entity.Purchase, querySpaceUid=<gen:0>, path=com.book.store.entity.Purchase)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.book.store.entity.Purchase)
          - SQL table alias mapping - purchase0_
          - alias suffix - 0_
          - suffixed key columns - {Purchase1_1_0_}
 
[2017-09-06 19:05:04,847 - DEBUG - EntityLoader.java::128] - Static select for entity com.book.store.entity.Purchase [OPTIMISTIC_FORCE_INCREMENT]: select purchase0_.Purchase_no as Purchase1_1_0_, purchase0_.Book_id as Book_id2_1_0_, purchase0_.Customer_name as Customer3_1_0_, purchase0_.Customer_mobileno as Customer4_1_0_, purchase0_.Purchase_date as Purchase5_1_0_, purchase0_.Amount as Amount6_1_0_ from Purchase purchase0_ where purchase0_.Purchase_no=? 
[2017-09-06 19:05:04,847 - DEBUG - CascadeEntityLoader.java::38] - Static select for action ACTION_MERGE on entity com.book.store.entity.Purchase: select purchase0_.Purchase_no as Purchase1_1_0_, purchase0_.Book_id as Book_id2_1_0_, purchase0_.Customer_name as Customer3_1_0_, purchase0_.Customer_mobileno as Customer4_1_0_, purchase0_.Purchase_date as Purchase5_1_0_, purchase0_.Amount as Amount6_1_0_ from Purchase purchase0_ where purchase0_.Purchase_no=? 
[2017-09-06 19:05:04,847 - DEBUG - CascadeEntityLoader.java::38] - Static select for action ACTION_REFRESH on entity com.book.store.entity.Purchase: select purchase0_.Purchase_no as Purchase1_1_0_, purchase0_.Book_id as Book_id2_1_0_, purchase0_.Customer_name as Customer3_1_0_, purchase0_.Customer_mobileno as Customer4_1_0_, purchase0_.Purchase_date as Purchase5_1_0_, purchase0_.Amount as Amount6_1_0_ from Purchase purchase0_ where purchase0_.Purchase_no=? 
[2017-09-06 19:05:04,847 - DEBUG - SessionFactoryImpl.java::462] - Instantiated session factory 
[2017-09-06 19:05:04,848 - INFO - SchemaUpdate.java::101] - HHH000228: Running hbm2ddl schema update 
[2017-09-06 19:05:04,862 - DEBUG - Table.java::478] - No alter strings for table : Book 
[2017-09-06 19:05:04,876 - DEBUG - Table.java::478] - No alter strings for table : Purchase 
[2017-09-06 19:05:04,877 - DEBUG - JtaPlatformInitiator.java::42] - No JtaPlatform was specified, checking resolver 
[2017-09-06 19:05:04,877 - DEBUG - JtaPlatformResolverInitiator.java::33] - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver] 
[2017-09-06 19:05:04,878 - DEBUG - StandardJtaPlatformResolver.java::101] - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform] 
[2017-09-06 19:05:04,879 - DEBUG - NamedQueryRepository.java::149] - Checking 0 named HQL queries 
[2017-09-06 19:05:04,879 - DEBUG - NamedQueryRepository.java::165] - Checking 0 named SQL queries 
[2017-09-06 19:05:04,879 - DEBUG - SessionFactoryRegistry.java::74] - Registering SessionFactory: 8e7ed49e-560c-4d8b-864e-3b2f601f5145 (<unnamed>) 
[2017-09-06 19:05:04,879 - DEBUG - SessionFactoryRegistry.java::81] - Not binding SessionFactory to JNDI, no JNDI name configured 
[2017-09-06 19:05:04,879 - DEBUG - StatisticsInitiator.java::82] - Statistics initialized [enabled=false] 
[2017-09-06 19:05:04,880 - DEBUG - QueryTranslatorFactoryInitiator.java::45] - QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@d2387c8 
[2017-09-06 19:05:04,880 - INFO - QueryTranslatorFactoryInitiator.java::47] - HHH000397: Using ASTQueryTranslatorFactory 
[2017-09-06 19:05:04,880 - DEBUG - QueryTranslatorImpl.java::278] - parse() - HQL: select bookId from com.book.store.entity.Book 
[2017-09-06 19:05:04,881 - DEBUG - QueryTranslatorImpl.java::296] - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     \-[DOT] Node: '.'
       |        +-[DOT] Node: '.'
       |        |  +-[DOT] Node: '.'
       |        |  |  +-[DOT] Node: '.'
       |        |  |  |  +-[IDENT] Node: 'com'
       |        |  |  |  \-[IDENT] Node: 'book'
       |        |  |  \-[IDENT] Node: 'store'
       |        |  \-[IDENT] Node: 'entity'
       |        \-[IDENT] Node: 'Book'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'bookId'
 
[2017-09-06 19:05:04,881 - DEBUG - ErrorCounter.java::95] - throwQueryException() : no errors 
[2017-09-06 19:05:04,881 - DEBUG - HqlSqlBaseWalker.java::121] - select << begin [level=1, statement=select] 
[2017-09-06 19:05:04,881 - DEBUG - FromElement.java::145] - FromClause{level=1} : com.book.store.entity.Book (<no alias>) -> book0_ 
[2017-09-06 19:05:04,882 - DEBUG - FromReferenceNode.java::60] - Resolved : {synthetic-alias} -> {synthetic-alias} 
[2017-09-06 19:05:04,882 - DEBUG - DotNode.java::654] - getDataType() : bookId -> org.hibernate.type.IntegerType@793f29ff 
[2017-09-06 19:05:04,883 - DEBUG - FromReferenceNode.java::60] - Resolved : {synthetic-alias}.bookId -> book0_.Book_id 
[2017-09-06 19:05:04,883 - DEBUG - HqlSqlBaseWalker.java::125] - select : finishing up [level=1, statement=select] 
[2017-09-06 19:05:04,883 - DEBUG - HqlSqlWalker.java::654] - processQuery() :  ( SELECT ( {select clause} ( book0_.Book_id {synthetic-alias} bookId ) ) ( FromClause{level=1} Book book0_ ) ) 
[2017-09-06 19:05:04,884 - DEBUG - JoinProcessor.java::169] - Using FROM fragment [Book book0_] 
[2017-09-06 19:05:04,884 - DEBUG - HqlSqlBaseWalker.java::129] - select >> end [level=1, statement=select] 
[2017-09-06 19:05:04,884 - DEBUG - QueryTranslatorImpl.java::265] - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Book)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'book0_.Book_id' {propertyName=bookId,dereferenceType=PRIMITIVE,getPropertyPath=bookId,path={synthetic-alias}.bookId,tableAlias=book0_,className=com.book.store.entity.Book,classAlias=null}
    |  |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
    |  |  \-[IDENT] IdentNode: 'bookId' {originalText=bookId}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[book0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Book book0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Book,tableAlias=book0_,origin=null,columns={,className=com.book.store.entity.Book}}
 
[2017-09-06 19:05:04,884 - DEBUG - ErrorCounter.java::95] - throwQueryException() : no errors 
[2017-09-06 19:05:04,885 - DEBUG - QueryTranslatorImpl.java::247] - HQL: select bookId from com.book.store.entity.Book 
[2017-09-06 19:05:04,885 - DEBUG - QueryTranslatorImpl.java::248] - SQL: select book0_.Book_id as col_0_0_ from Book book0_ 
[2017-09-06 19:05:04,885 - DEBUG - ErrorCounter.java::95] - throwQueryException() : no errors 
[2017-09-06 19:05:04,885 - DEBUG - SqlStatementLogger.java::92] - select book0_.Book_id as col_0_0_ from Book book0_ 
[2017-09-06 19:05:04,886 - DEBUG - DelegatingBasicLogger.java::384] - Result set row: 0 
[2017-09-06 19:05:04,886 - DEBUG - Loader.java::1514] - Result row:  
[2017-09-06 19:05:04,886 - DEBUG - DelegatingBasicLogger.java::384] - Result set row: 1 
[2017-09-06 19:05:04,886 - DEBUG - Loader.java::1514] - Result row:  
[2017-09-06 19:05:04,887 - DEBUG - DelegatingBasicLogger.java::384] - Result set row: 2 
[2017-09-06 19:05:04,887 - DEBUG - Loader.java::1514] - Result row:  
[2017-09-06 19:05:04,887 - DEBUG - DelegatingBasicLogger.java::384] - Result set row: 3 
[2017-09-06 19:05:04,887 - DEBUG - Loader.java::1514] - Result row:  
[2017-09-06 19:05:04,887 - DEBUG - DelegatingBasicLogger.java::384] - Result set row: 4 
[2017-09-06 19:05:04,887 - DEBUG - Loader.java::1514] - Result row:  
[2017-09-06 19:05:04,887 - DEBUG - DelegatingBasicLogger.java::384] - Result set row: 5 
[2017-09-06 19:05:04,887 - DEBUG - Loader.java::1514] - Result row:  
[2017-09-06 19:05:04,888 - DEBUG - IntegratorServiceImpl.java::46] - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator]. 
[2017-09-06 19:05:04,888 - DEBUG - IntegratorServiceImpl.java::46] - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator]. 
[2017-09-06 19:05:04,888 - DEBUG - IntegratorServiceImpl.java::46] - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator]. 
[2017-09-06 19:05:04,890 - DEBUG - LocalXmlResourceResolver.java::57] - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd createDatabaseIfNotExist=true] 
[2017-09-06 19:05:04,890 - WARN - LocalXmlResourceResolver.java::91] - HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-configuration. Use namespace http://www.hibernate.org/dtd/hibernate-configuration instead.  Support for obsolete DTD/XSD namespaces may be removed at any time. 
[2017-09-06 19:05:04,890 - DEBUG - LocalXmlResourceResolver.java::95] - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/ 
[2017-09-06 19:05:04,891 - DEBUG - JaxbCfgProcessor.java::116] - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information 
[2017-09-06 19:05:04,905 - DEBUG - Configuration.java::722] - Building session factory using internal StandardServiceRegistryBuilder 
[2017-09-06 19:05:04,906 - DEBUG - ServiceBinding.java::68] - Overriding existing service binding [org.hibernate.secure.spi.JaccService] 
[2017-09-06 19:05:04,907 - DEBUG - Configuration.java::653] - Building session factory using provided StandardServiceRegistry 
[2017-09-06 19:05:04,907 - DEBUG - RegionFactoryInitiator.java::88] - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory 
[2017-09-06 19:05:04,908 - DEBUG - LocalXmlResourceResolver.java::57] - Interpreting public/system identifier : [-//Hibernate/Hibernate Mapping DTD 5.0//EN] - [http://hibernate.sourceforge.net/hibernate-mapping-5.0.dtd] 
[2017-09-06 19:05:04,908 - WARN - LocalXmlResourceResolver.java::75] - HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-mapping. Use namespace http://www.hibernate.org/dtd/hibernate-mapping instead.  Support for obsolete DTD/XSD namespaces may be removed at any time. 
[2017-09-06 19:05:04,908 - DEBUG - LocalXmlResourceResolver.java::79] - Recognized legacy hibernate-mapping identifier; attempting to resolve on classpath under org/hibernate/ 
[2017-09-06 19:05:04,912 - DEBUG - MappingBinder.java::54] - Performing JAXB binding of hbm.xml document : Origin(name=bookstore.hbm.xml,type=RESOURCE) 
[2017-09-06 19:05:05,119 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration boolean -> org.hibernate.type.BooleanType@f0c8a99 
[2017-09-06 19:05:05,120 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration boolean -> org.hibernate.type.BooleanType@f0c8a99 
[2017-09-06 19:05:05,120 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@f0c8a99 
[2017-09-06 19:05:05,120 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@7526515b 
[2017-09-06 19:05:05,120 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration true_false -> org.hibernate.type.TrueFalseType@6e6f2380 
[2017-09-06 19:05:05,120 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration yes_no -> org.hibernate.type.YesNoType@53fe15ff 
[2017-09-06 19:05:05,120 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration byte -> org.hibernate.type.ByteType@15bb5034 
[2017-09-06 19:05:05,121 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration byte -> org.hibernate.type.ByteType@15bb5034 
[2017-09-06 19:05:05,121 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@15bb5034 
[2017-09-06 19:05:05,121 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration character -> org.hibernate.type.CharacterType@2cf3d63b 
[2017-09-06 19:05:05,121 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration char -> org.hibernate.type.CharacterType@2cf3d63b 
[2017-09-06 19:05:05,121 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2cf3d63b 
[2017-09-06 19:05:05,121 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration short -> org.hibernate.type.ShortType@76b1e9b8 
[2017-09-06 19:05:05,121 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration short -> org.hibernate.type.ShortType@76b1e9b8 
[2017-09-06 19:05:05,121 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@76b1e9b8 
[2017-09-06 19:05:05,121 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration integer -> org.hibernate.type.IntegerType@793f29ff 
[2017-09-06 19:05:05,121 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration int -> org.hibernate.type.IntegerType@793f29ff 
[2017-09-06 19:05:05,121 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@793f29ff 
[2017-09-06 19:05:05,122 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration long -> org.hibernate.type.LongType@7ef82753 
[2017-09-06 19:05:05,122 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration long -> org.hibernate.type.LongType@7ef82753 
[2017-09-06 19:05:05,122 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.lang.Long -> org.hibernate.type.LongType@7ef82753 
[2017-09-06 19:05:05,122 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration float -> org.hibernate.type.FloatType@7161d8d1 
[2017-09-06 19:05:05,122 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration float -> org.hibernate.type.FloatType@7161d8d1 
[2017-09-06 19:05:05,122 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7161d8d1 
[2017-09-06 19:05:05,122 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration double -> org.hibernate.type.DoubleType@5149d738 
[2017-09-06 19:05:05,122 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration double -> org.hibernate.type.DoubleType@5149d738 
[2017-09-06 19:05:05,122 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@5149d738 
[2017-09-06 19:05:05,123 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@712625fd 
[2017-09-06 19:05:05,123 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@712625fd 
[2017-09-06 19:05:05,123 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1c5920df 
[2017-09-06 19:05:05,123 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1c5920df 
[2017-09-06 19:05:05,124 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration string -> org.hibernate.type.StringType@15043a2f 
[2017-09-06 19:05:05,124 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.lang.String -> org.hibernate.type.StringType@15043a2f 
[2017-09-06 19:05:05,124 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@28261e8e 
[2017-09-06 19:05:05,124 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@3ba987b8 
[2017-09-06 19:05:05,124 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration url -> org.hibernate.type.UrlType@72035809 
[2017-09-06 19:05:05,124 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.net.URL -> org.hibernate.type.UrlType@72035809 
[2017-09-06 19:05:05,124 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration date -> org.hibernate.type.DateType@2cb4893b 
[2017-09-06 19:05:05,124 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.sql.Date -> org.hibernate.type.DateType@2cb4893b 
[2017-09-06 19:05:05,124 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration time -> org.hibernate.type.TimeType@273444fe 
[2017-09-06 19:05:05,124 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@273444fe 
[2017-09-06 19:05:05,124 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration timestamp -> org.hibernate.type.TimestampType@4681c175 
[2017-09-06 19:05:05,125 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@4681c175 
[2017-09-06 19:05:05,125 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@4681c175 
[2017-09-06 19:05:05,125 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@6fa51cd4 
[2017-09-06 19:05:05,125 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration calendar -> org.hibernate.type.CalendarType@cecf639 
[2017-09-06 19:05:05,125 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@cecf639 
[2017-09-06 19:05:05,125 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@cecf639 
[2017-09-06 19:05:05,125 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7ce69770 
[2017-09-06 19:05:05,125 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration locale -> org.hibernate.type.LocaleType@6c284af 
[2017-09-06 19:05:05,125 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@6c284af 
[2017-09-06 19:05:05,125 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration currency -> org.hibernate.type.CurrencyType@183ec003 
[2017-09-06 19:05:05,125 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@183ec003 
[2017-09-06 19:05:05,126 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration timezone -> org.hibernate.type.TimeZoneType@4d1c005e 
[2017-09-06 19:05:05,126 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@4d1c005e 
[2017-09-06 19:05:05,126 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration class -> org.hibernate.type.ClassType@496bc455 
[2017-09-06 19:05:05,126 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@496bc455 
[2017-09-06 19:05:05,126 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@4a003cbe 
[2017-09-06 19:05:05,126 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@4a003cbe 
[2017-09-06 19:05:05,126 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2b30a42c 
[2017-09-06 19:05:05,126 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration binary -> org.hibernate.type.BinaryType@792b749c 
[2017-09-06 19:05:05,126 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration byte[] -> org.hibernate.type.BinaryType@792b749c 
[2017-09-06 19:05:05,126 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration [B -> org.hibernate.type.BinaryType@792b749c 
[2017-09-06 19:05:05,126 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@302c971f 
[2017-09-06 19:05:05,126 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@302c971f 
[2017-09-06 19:05:05,127 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@302c971f 
[2017-09-06 19:05:05,127 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration image -> org.hibernate.type.ImageType@6f10d5b6 
[2017-09-06 19:05:05,127 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration characters -> org.hibernate.type.CharArrayType@7fd50002 
[2017-09-06 19:05:05,127 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration char[] -> org.hibernate.type.CharArrayType@7fd50002 
[2017-09-06 19:05:05,127 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration [C -> org.hibernate.type.CharArrayType@7fd50002 
[2017-09-06 19:05:05,127 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@45d84a20 
[2017-09-06 19:05:05,128 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@45d84a20 
[2017-09-06 19:05:05,128 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@45d84a20 
[2017-09-06 19:05:05,128 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration text -> org.hibernate.type.TextType@c430e6c 
[2017-09-06 19:05:05,128 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration ntext -> org.hibernate.type.NTextType@70cf32e3 
[2017-09-06 19:05:05,128 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration blob -> org.hibernate.type.BlobType@43f02ef2 
[2017-09-06 19:05:05,128 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@43f02ef2 
[2017-09-06 19:05:05,128 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@6f204a1a 
[2017-09-06 19:05:05,128 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration clob -> org.hibernate.type.ClobType@57bc27f5 
[2017-09-06 19:05:05,128 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@57bc27f5 
[2017-09-06 19:05:05,128 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration nclob -> org.hibernate.type.NClobType@25df00a0 
[2017-09-06 19:05:05,128 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@25df00a0 
[2017-09-06 19:05:05,129 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@5884a914 
[2017-09-06 19:05:05,129 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@79207381 
[2017-09-06 19:05:05,129 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration serializable -> org.hibernate.type.SerializableType@97e93f1 
[2017-09-06 19:05:05,129 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration object -> org.hibernate.type.ObjectType@20b2475a 
[2017-09-06 19:05:05,129 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@20b2475a 
[2017-09-06 19:05:05,130 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@468dda3e 
[2017-09-06 19:05:05,130 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@5527b211 
[2017-09-06 19:05:05,130 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@54cf7c6a 
[2017-09-06 19:05:05,130 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@78010562 
[2017-09-06 19:05:05,130 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@50756c76 
[2017-09-06 19:05:05,130 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@38aafb53 
[2017-09-06 19:05:05,130 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1729ec00 
[2017-09-06 19:05:05,130 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@67f3d192 
[2017-09-06 19:05:05,131 - WARN - DriverManagerConnectionProviderImpl.java::76] - HHH000402: Using Hibernate built-in connection pool (not for production use!) 
[2017-09-06 19:05:05,131 - INFO - DriverManagerConnectionProviderImpl.java::149] - HHH000401: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/bookstore?createDatabaseIfNotExist=true&useSSL=false] 
[2017-09-06 19:05:05,131 - INFO - DriverManagerConnectionProviderImpl.java::155] - HHH000046: Connection properties: {user=neelakanta, password=Welcome@123, autocommit=true} 
[2017-09-06 19:05:05,131 - INFO - DriverManagerConnectionProviderImpl.java::163] - HHH000006: Autocommit mode: true 
[2017-09-06 19:05:05,132 - INFO - DriverManagerConnectionProviderImpl.java::85] - HHH000115: Hibernate connection pool size: 20 (min=1) 
[2017-09-06 19:05:05,132 - DEBUG - DelegatingBasicLogger.java::384] - Initializing Connection pool with 1 Connections 
[2017-09-06 19:05:05,143 - DEBUG - JdbcEnvironmentInitiator.java::72] - Database ->
       name : MySQL
    version : 5.5.55-0ubuntu0.14.04.1
      major : 5
      minor : 5 
[2017-09-06 19:05:05,143 - DEBUG - JdbcEnvironmentInitiator.java::83] - Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-6.0.5 ( Revision: 6e477e32dff18fb4dc102e53f5a68037a9f8762e )
      major : 6
      minor : 0 
[2017-09-06 19:05:05,144 - DEBUG - DelegatingBasicLogger.java::389] - JDBC version : 4.1 
[2017-09-06 19:05:05,144 - INFO - Dialect.java::154] - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect 
[2017-09-06 19:05:05,145 - DEBUG - StandardRefCursorSupport.java::170] - Unexpected error trying to gauge level of JDBC REF_CURSOR support : null 
[2017-09-06 19:05:05,154 - DEBUG - IdentifierHelperBuilder.java::116] - JDBC driver metadata reported database stores quoted identifiers in more than one case 
[2017-09-06 19:05:05,154 - DEBUG - IdentifierHelperBuilder.java::182] - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers 
[2017-09-06 19:05:05,161 - DEBUG - DefaultIdentifierGeneratorFactory.java::78] - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator] 
[2017-09-06 19:05:05,161 - DEBUG - DefaultIdentifierGeneratorFactory.java::78] - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator] 
[2017-09-06 19:05:05,161 - DEBUG - DefaultIdentifierGeneratorFactory.java::78] - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator] 
[2017-09-06 19:05:05,161 - DEBUG - DefaultIdentifierGeneratorFactory.java::78] - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator] 
[2017-09-06 19:05:05,162 - DEBUG - DefaultIdentifierGeneratorFactory.java::78] - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned] 
[2017-09-06 19:05:05,162 - DEBUG - DefaultIdentifierGeneratorFactory.java::78] - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator] 
[2017-09-06 19:05:05,162 - DEBUG - DefaultIdentifierGeneratorFactory.java::78] - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator] 
[2017-09-06 19:05:05,162 - DEBUG - DefaultIdentifierGeneratorFactory.java::78] - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator] 
[2017-09-06 19:05:05,162 - DEBUG - DefaultIdentifierGeneratorFactory.java::78] - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator] 
[2017-09-06 19:05:05,162 - DEBUG - DefaultIdentifierGeneratorFactory.java::78] - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator] 
[2017-09-06 19:05:05,162 - DEBUG - DefaultIdentifierGeneratorFactory.java::78] - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator] 
[2017-09-06 19:05:05,162 - DEBUG - DefaultIdentifierGeneratorFactory.java::78] - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator] 
[2017-09-06 19:05:05,162 - DEBUG - DefaultIdentifierGeneratorFactory.java::78] - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator] 
[2017-09-06 19:05:05,162 - DEBUG - DefaultIdentifierGeneratorFactory.java::78] - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator] 
[2017-09-06 19:05:05,163 - DEBUG - Namespace.java::47] - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}] 
[2017-09-06 19:05:05,163 - DEBUG - ModelBinder.java::230] - Mapping class: com.book.store.entity.Book -> Book 
[2017-09-06 19:05:05,163 - WARN - ModelBinder.java::2441] - HHH90000003: Use of DOM4J entity-mode is considered deprecated 
[2017-09-06 19:05:05,163 - DEBUG - ModelBinder.java::2538] - Mapped property: bookId -> [Book_id] 
[2017-09-06 19:05:05,164 - WARN - ModelBinder.java::2441] - HHH90000003: Use of DOM4J entity-mode is considered deprecated 
[2017-09-06 19:05:05,164 - DEBUG - ModelBinder.java::2538] - Mapped property: bookName -> [Book_name] 
[2017-09-06 19:05:05,164 - WARN - ModelBinder.java::2441] - HHH90000003: Use of DOM4J entity-mode is considered deprecated 
[2017-09-06 19:05:05,164 - DEBUG - ModelBinder.java::2538] - Mapped property: authorName -> [Author_name] 
[2017-09-06 19:05:05,164 - WARN - ModelBinder.java::2441] - HHH90000003: Use of DOM4J entity-mode is considered deprecated 
[2017-09-06 19:05:05,164 - DEBUG - ModelBinder.java::2538] - Mapped property: publisherName -> [Publisher] 
[2017-09-06 19:05:05,164 - WARN - ModelBinder.java::2441] - HHH90000003: Use of DOM4J entity-mode is considered deprecated 
[2017-09-06 19:05:05,164 - DEBUG - ModelBinder.java::2538] - Mapped property: categoryName -> [Category] 
[2017-09-06 19:05:05,165 - WARN - ModelBinder.java::2441] - HHH90000003: Use of DOM4J entity-mode is considered deprecated 
[2017-09-06 19:05:05,165 - DEBUG - ModelBinder.java::2538] - Mapped property: price -> [price] 
[2017-09-06 19:05:05,165 - DEBUG - ModelBinder.java::230] - Mapping class: com.book.store.entity.Purchase -> Purchase 
[2017-09-06 19:05:05,165 - WARN - ModelBinder.java::2441] - HHH90000003: Use of DOM4J entity-mode is considered deprecated 
[2017-09-06 19:05:05,165 - DEBUG - ModelBinder.java::2538] - Mapped property: purchaseNumber -> [Purchase_no] 
[2017-09-06 19:05:05,165 - WARN - ModelBinder.java::2441] - HHH90000003: Use of DOM4J entity-mode is considered deprecated 
[2017-09-06 19:05:05,165 - DEBUG - ModelBinder.java::2538] - Mapped property: bookId -> [Book_id] 
[2017-09-06 19:05:05,166 - WARN - ModelBinder.java::2441] - HHH90000003: Use of DOM4J entity-mode is considered deprecated 
[2017-09-06 19:05:05,166 - DEBUG - ModelBinder.java::2538] - Mapped property: customerName -> [Customer_name] 
[2017-09-06 19:05:05,166 - WARN - ModelBinder.java::2441] - HHH90000003: Use of DOM4J entity-mode is considered deprecated 
[2017-09-06 19:05:05,166 - DEBUG - ModelBinder.java::2538] - Mapped property: customerMobileNumber -> [Customer_mobileno] 
[2017-09-06 19:05:05,166 - WARN - ModelBinder.java::2441] - HHH90000003: Use of DOM4J entity-mode is considered deprecated 
[2017-09-06 19:05:05,166 - DEBUG - ModelBinder.java::2538] - Mapped property: purchaseDate -> [Purchase_date] 
[2017-09-06 19:05:05,167 - WARN - ModelBinder.java::2441] - HHH90000003: Use of DOM4J entity-mode is considered deprecated 
[2017-09-06 19:05:05,167 - DEBUG - ModelBinder.java::2538] - Mapped property: amount -> [Amount] 
[2017-09-06 19:05:05,167 - DEBUG - SessionFactoryImpl.java::210] - Building session factory 
[2017-09-06 19:05:05,168 - DEBUG - Settings.java::69] - SessionFactory name : null 
[2017-09-06 19:05:05,168 - DEBUG - Settings.java::70] - Automatic flush during beforeCompletion(): disabled 
[2017-09-06 19:05:05,168 - DEBUG - Settings.java::71] - Automatic session close at end of transaction: disabled 
[2017-09-06 19:05:05,168 - DEBUG - Settings.java::73] - Statistics: disabled 
[2017-09-06 19:05:05,168 - DEBUG - Settings.java::75] - Deleted entity synthetic identifier rollback: disabled 
[2017-09-06 19:05:05,168 - DEBUG - Settings.java::76] - Default entity-mode: pojo 
[2017-09-06 19:05:05,168 - DEBUG - Settings.java::77] - Check Nullability in Core (should be disabled when Bean Validation is on): enabled 
[2017-09-06 19:05:05,168 - DEBUG - Settings.java::78] - Allow initialization of lazy state outside session : disabled 
[2017-09-06 19:05:05,168 - DEBUG - Settings.java::80] - Using BatchFetchStyle : LEGACY 
[2017-09-06 19:05:05,168 - DEBUG - Settings.java::81] - Default batch fetch size: -1 
[2017-09-06 19:05:05,168 - DEBUG - Settings.java::82] - Maximum outer join fetch depth: 2 
[2017-09-06 19:05:05,168 - DEBUG - Settings.java::83] - Default null ordering: NONE 
[2017-09-06 19:05:05,168 - DEBUG - Settings.java::84] - Order SQL updates by primary key: disabled 
[2017-09-06 19:05:05,169 - DEBUG - Settings.java::85] - Order SQL inserts for batching: disabled 
[2017-09-06 19:05:05,169 - DEBUG - Settings.java::87] - multi-tenancy strategy : NONE 
[2017-09-06 19:05:05,169 - DEBUG - Settings.java::89] - JTA Track by Thread: enabled 
[2017-09-06 19:05:05,169 - DEBUG - Settings.java::91] - Query language substitutions: {} 
[2017-09-06 19:05:05,169 - DEBUG - Settings.java::92] - JPA query language strict compliance: disabled 
[2017-09-06 19:05:05,169 - DEBUG - Settings.java::93] - Named query checking : enabled 
[2017-09-06 19:05:05,169 - DEBUG - Settings.java::95] - Second-level cache: enabled 
[2017-09-06 19:05:05,169 - DEBUG - Settings.java::96] - Second-level query cache: disabled 
[2017-09-06 19:05:05,169 - DEBUG - Settings.java::97] - Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@74a6a609 
[2017-09-06 19:05:05,169 - DEBUG - Settings.java::98] - Second-level cache region prefix: null 
[2017-09-06 19:05:05,169 - DEBUG - Settings.java::99] - Optimize second-level cache for minimal puts: disabled 
[2017-09-06 19:05:05,169 - DEBUG - Settings.java::100] - Structured second-level cache entries: disabled 
[2017-09-06 19:05:05,169 - DEBUG - Settings.java::101] - Second-level cache direct-reference entries: disabled 
[2017-09-06 19:05:05,170 - DEBUG - Settings.java::102] - Automatic eviction of collection cache: disabled 
[2017-09-06 19:05:05,170 - DEBUG - Settings.java::104] - JDBC batch size: 15 
[2017-09-06 19:05:05,170 - DEBUG - Settings.java::105] - JDBC batch updates for versioned data: enabled 
[2017-09-06 19:05:05,170 - DEBUG - Settings.java::106] - Scrollable result sets: enabled 
[2017-09-06 19:05:05,170 - DEBUG - Settings.java::107] - Wrap result sets: disabled 
[2017-09-06 19:05:05,170 - DEBUG - Settings.java::108] - JDBC3 getGeneratedKeys(): enabled 
[2017-09-06 19:05:05,170 - DEBUG - Settings.java::109] - JDBC result set fetch size: null 
[2017-09-06 19:05:05,170 - DEBUG - Settings.java::110] - Connection release mode: ON_CLOSE 
[2017-09-06 19:05:05,170 - DEBUG - Settings.java::111] - Generate SQL with comments: disabled 
[2017-09-06 19:05:05,171 - DEBUG - SessionFactoryImpl.java::255] - Session factory constructed with filter configurations : {} 
[2017-09-06 19:05:05,171 - DEBUG - SessionFactoryImpl.java::256] - Instantiating session factory with properties: {hibernate.connection.password=Welcome@123, java.runtime.name=Java(TM) SE Runtime Environment, java.vm.version=25.45-b02, sun.boot.library.path=/usr/java/jdk1.8.0_45/jre/lib/amd64, hibernate.connection.username=neelakanta, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@3b4d50b, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=:, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, sun.os.patch.level=unknown, user.country=US, sun.java.launcher=SUN_STANDARD, java.vm.specification.name=Java Virtual Machine Specification, user.dir=/home/neelakanta/Documents/Eclipse Documents/Mars Documents/BookStore, java.runtime.version=1.8.0_45-b14, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, basedir=/home/neelakanta/Documents/Eclipse Documents/Mars Documents/BookStore, os.arch=amd64, java.endorsed.dirs=/usr/java/jdk1.8.0_45/jre/lib/endorsed, surefire.real.class.path=/home/neelakanta/Documents/Eclipse Documents/Mars Documents/BookStore/target/surefire/surefirebooter5232880889481838645.jar, hibernate.connection.autocommit=true, java.io.tmpdir=/tmp, line.separator=
, java.vm.specification.vendor=Oracle Corporation, os.name=Linux, sun.jnu.encoding=UTF-8, java.library.path=/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib, surefire.test.class.path=/home/neelakanta/Documents/Eclipse Documents/Mars Documents/BookStore/target/test-classes:/home/neelakanta/Documents/Eclipse Documents/Mars Documents/BookStore/target/classes:/home/neelakanta/.m2/repository/junit/junit/4.12/junit-4.12.jar:/home/neelakanta/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/neelakanta/.m2/repository/org/hibernate/hibernate-core/5.0.1.Final/hibernate-core-5.0.1.Final.jar:/home/neelakanta/.m2/repository/org/jboss/logging/jboss-logging/3.3.0.Final/jboss-logging-3.3.0.Final.jar:/home/neelakanta/.m2/repository/org/apache/geronimo/specs/geronimo-jta_1.1_spec/1.1.1/geronimo-jta_1.1_spec-1.1.1.jar:/home/neelakanta/.m2/repository/org/hibernate/javax/persistence/hibernate-jpa-2.1-api/1.0.0.Final/hibernate-jpa-2.1-api-1.0.0.Final.jar:/home/neelakanta/.m2/repository/org/javassist/javassist/3.18.1-GA/javassist-3.18.1-GA.jar:/home/neelakanta/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/home/neelakanta/.m2/repository/org/jboss/jandex/1.2.2.Final/jandex-1.2.2.Final.jar:/home/neelakanta/.m2/repository/dom4j/dom4j/1.6.1/dom4j-1.6.1.jar:/home/neelakanta/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.0.0.Final/hibernate-commons-annotations-5.0.0.Final.jar:/home/neelakanta/.m2/repository/org/hibernate/hibernate-validator/5.0.1.Final/hibernate-validator-5.0.1.Final.jar:/home/neelakanta/.m2/repository/javax/validation/validation-api/1.1.0.Final/validation-api-1.1.0.Final.jar:/home/neelakanta/.m2/repository/com/fasterxml/classmate/0.8.0/classmate-0.8.0.jar:/home/neelakanta/.m2/repository/org/hibernate/hibernate-annotations/3.3.0.ga/hibernate-annotations-3.3.0.ga.jar:/home/neelakanta/.m2/repository/org/hibernate/hibernate/3.2.1.ga/hibernate-3.2.1.ga.jar:/home/neelakanta/.m2/repository/net/sf/ehcache/ehcache/1.2.3/ehcache-1.2.3.jar:/home/neelakanta/.m2/repository/commons-logging/commons-logging/1.0.4/commons-logging-1.0.4.jar:/home/neelakanta/.m2/repository/asm/asm-attrs/1.5.3/asm-attrs-1.5.3.jar:/home/neelakanta/.m2/repository/cglib/cglib/2.1_3/cglib-2.1_3.jar:/home/neelakanta/.m2/repository/asm/asm/1.5.3/asm-1.5.3.jar:/home/neelakanta/.m2/repository/commons-collections/commons-collections/2.1.1/commons-collections-2.1.1.jar:/home/neelakanta/.m2/repository/javax/persistence/persistence-api/1.0/persistence-api-1.0.jar:/home/neelakanta/.m2/repository/org/hibernate/hibernate-commons-annotations/3.3.0.ga/hibernate-commons-annotations-3.3.0.ga.jar:/home/neelakanta/.m2/repository/javax/transaction/jta/1.1/jta-1.1.jar:/home/neelakanta/.m2/repository/mysql/mysql-connector-java/6.0.5/mysql-connector-java-6.0.5.jar:/home/neelakanta/.m2/repository/c3p0/c3p0/0.9.0.4/c3p0-0.9.0.4.jar:/home/neelakanta/.m2/repository/org/hibernate/hibernate-entitymanager/4.3.1.Final/hibernate-entitymanager-4.3.1.Final.jar:/home/neelakanta/.m2/repository/org/jboss/logging/jboss-logging-annotations/1.2.0.Beta1/jboss-logging-annotations-1.2.0.Beta1.jar:/home/neelakanta/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.0.0.Final/jboss-transaction-api_1.2_spec-1.0.0.Final.jar:/home/neelakanta/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar:, java.class.version=52.0, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=3.13.0-119-generic, user.home=/home/neelakanta, user.timezone=Asia/Kolkata, java.awt.printerjob=sun.print.PSPrinterJob, file.encoding=UTF-8, java.specification.version=1.8, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, user.name=neelakanta, java.class.path=/home/neelakanta/Documents/Eclipse Documents/Mars Documents/BookStore/target/test-classes:/home/neelakanta/Documents/Eclipse Documents/Mars Documents/BookStore/target/classes:/home/neelakanta/.m2/repository/junit/junit/4.12/junit-4.12.jar:/home/neelakanta/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/neelakanta/.m2/repository/org/hibernate/hibernate-core/5.0.1.Final/hibernate-core-5.0.1.Final.jar:/home/neelakanta/.m2/repository/org/jboss/logging/jboss-logging/3.3.0.Final/jboss-logging-3.3.0.Final.jar:/home/neelakanta/.m2/repository/org/apache/geronimo/specs/geronimo-jta_1.1_spec/1.1.1/geronimo-jta_1.1_spec-1.1.1.jar:/home/neelakanta/.m2/repository/org/hibernate/javax/persistence/hibernate-jpa-2.1-api/1.0.0.Final/hibernate-jpa-2.1-api-1.0.0.Final.jar:/home/neelakanta/.m2/repository/org/javassist/javassist/3.18.1-GA/javassist-3.18.1-GA.jar:/home/neelakanta/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/home/neelakanta/.m2/repository/org/jboss/jandex/1.2.2.Final/jandex-1.2.2.Final.jar:/home/neelakanta/.m2/repository/dom4j/dom4j/1.6.1/dom4j-1.6.1.jar:/home/neelakanta/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.0.0.Final/hibernate-commons-annotations-5.0.0.Final.jar:/home/neelakanta/.m2/repository/org/hibernate/hibernate-validator/5.0.1.Final/hibernate-validator-5.0.1.Final.jar:/home/neelakanta/.m2/repository/javax/validation/validation-api/1.1.0.Final/validation-api-1.1.0.Final.jar:/home/neelakanta/.m2/repository/com/fasterxml/classmate/0.8.0/classmate-0.8.0.jar:/home/neelakanta/.m2/repository/org/hibernate/hibernate-annotations/3.3.0.ga/hibernate-annotations-3.3.0.ga.jar:/home/neelakanta/.m2/repository/org/hibernate/hibernate/3.2.1.ga/hibernate-3.2.1.ga.jar:/home/neelakanta/.m2/repository/net/sf/ehcache/ehcache/1.2.3/ehcache-1.2.3.jar:/home/neelakanta/.m2/repository/commons-logging/commons-logging/1.0.4/commons-logging-1.0.4.jar:/home/neelakanta/.m2/repository/asm/asm-attrs/1.5.3/asm-attrs-1.5.3.jar:/home/neelakanta/.m2/repository/cglib/cglib/2.1_3/cglib-2.1_3.jar:/home/neelakanta/.m2/repository/asm/asm/1.5.3/asm-1.5.3.jar:/home/neelakanta/.m2/repository/commons-collections/commons-collections/2.1.1/commons-collections-2.1.1.jar:/home/neelakanta/.m2/repository/javax/persistence/persistence-api/1.0/persistence-api-1.0.jar:/home/neelakanta/.m2/repository/org/hibernate/hibernate-commons-annotations/3.3.0.ga/hibernate-commons-annotations-3.3.0.ga.jar:/home/neelakanta/.m2/repository/javax/transaction/jta/1.1/jta-1.1.jar:/home/neelakanta/.m2/repository/mysql/mysql-connector-java/6.0.5/mysql-connector-java-6.0.5.jar:/home/neelakanta/.m2/repository/c3p0/c3p0/0.9.0.4/c3p0-0.9.0.4.jar:/home/neelakanta/.m2/repository/org/hibernate/hibernate-entitymanager/4.3.1.Final/hibernate-entitymanager-4.3.1.Final.jar:/home/neelakanta/.m2/repository/org/jboss/logging/jboss-logging-annotations/1.2.0.Beta1/jboss-logging-annotations-1.2.0.Beta1.jar:/home/neelakanta/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.0.0.Final/jboss-transaction-api_1.2_spec-1.0.0.Final.jar:/home/neelakanta/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar:, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=false, java.vm.specification.version=1.8, sun.arch.data.model=64, sun.java.command=/home/neelakanta/Documents/Eclipse Documents/Mars Documents/BookStore/target/surefire/surefirebooter5232880889481838645.jar /home/neelakanta/Documents/Eclipse Documents/Mars Documents/BookStore/target/surefire/surefire7552053918813552354tmp /home/neelakanta/Documents/Eclipse Documents/Mars Documents/BookStore/target/surefire/surefire_03604179774586556801tmp, java.home=/usr/java/jdk1.8.0_45/jre, hibernate.connection.url=jdbc:mysql://localhost:3306/bookstore?createDatabaseIfNotExist=true&useSSL=false, hibernate.dialect=org.hibernate.dialect.MySQLDialect, user.language=en, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.X11.XToolkit, java.vm.info=mixed mode, java.version=1.8.0_45, java.ext.dirs=/usr/java/jdk1.8.0_45/jre/lib/ext:/usr/java/packages/lib/ext, sun.boot.class.path=/usr/java/jdk1.8.0_45/jre/lib/resources.jar:/usr/java/jdk1.8.0_45/jre/lib/rt.jar:/usr/java/jdk1.8.0_45/jre/lib/sunrsasign.jar:/usr/java/jdk1.8.0_45/jre/lib/jsse.jar:/usr/java/jdk1.8.0_45/jre/lib/jce.jar:/usr/java/jdk1.8.0_45/jre/lib/charsets.jar:/usr/java/jdk1.8.0_45/jre/lib/jfr.jar:/usr/java/jdk1.8.0_45/jre/classes, java.vendor=Oracle Corporation, localRepository=/home/neelakanta/.m2/repository, file.separator=/, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, sun.desktop=gnome, sun.cpu.isalist=} 
[2017-09-06 19:05:05,172 - DEBUG - DefaultTraversableResolver.java::106] - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver 
[2017-09-06 19:05:05,172 - DEBUG - DefaultTraversableResolver.java::117] - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. 
[2017-09-06 19:05:05,172 - DEBUG - ValidationXmlParser.java::88] - Trying to load META-INF/validation.xml for XML based Validator configuration. 
[2017-09-06 19:05:05,172 - DEBUG - ValidationXmlParser.java::95] - No META-INF/validation.xml found. Using annotation based configuration only. 
[2017-09-06 19:05:05,173 - DEBUG - ClassLoaderAccessImpl.java::55] - Not known whether passed class name [com.book.store.entity.Book] is safe 
[2017-09-06 19:05:05,173 - DEBUG - ClassLoaderAccessImpl.java::57] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.book.store.entity.Book 
[2017-09-06 19:05:05,175 - DEBUG - ClassLoaderAccessImpl.java::55] - Not known whether passed class name [com.book.store.entity.Purchase] is safe 
[2017-09-06 19:05:05,176 - DEBUG - ClassLoaderAccessImpl.java::57] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.book.store.entity.Purchase 
[2017-09-06 19:05:05,177 - DEBUG - JaccIntegrator.java::80] - Skipping JACC integration as it was not enabled 
[2017-09-06 19:05:05,177 - DEBUG - ClassLoaderAccessImpl.java::55] - Not known whether passed class name [com.book.store.entity.Book] is safe 
[2017-09-06 19:05:05,178 - DEBUG - ClassLoaderAccessImpl.java::57] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.book.store.entity.Book 
[2017-09-06 19:05:05,178 - DEBUG - ClassLoaderAccessImpl.java::55] - Not known whether passed class name [com.book.store.entity.Book] is safe 
[2017-09-06 19:05:05,178 - DEBUG - ClassLoaderAccessImpl.java::57] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.book.store.entity.Book 
[2017-09-06 19:05:05,179 - DEBUG - ClassLoaderAccessImpl.java::55] - Not known whether passed class name [com.book.store.entity.Purchase] is safe 
[2017-09-06 19:05:05,179 - DEBUG - ClassLoaderAccessImpl.java::57] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.book.store.entity.Purchase 
[2017-09-06 19:05:05,179 - DEBUG - ClassLoaderAccessImpl.java::55] - Not known whether passed class name [com.book.store.entity.Purchase] is safe 
[2017-09-06 19:05:05,180 - DEBUG - ClassLoaderAccessImpl.java::57] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.book.store.entity.Purchase 
[2017-09-06 19:05:05,181 - DEBUG - AbstractEntityPersister.java::3418] - Static SQL for entity: com.book.store.entity.Book 
[2017-09-06 19:05:05,181 - DEBUG - AbstractEntityPersister.java::3423] -  Version select: select Book_id from Book where Book_id =? 
[2017-09-06 19:05:05,181 - DEBUG - AbstractEntityPersister.java::3426] -  Snapshot select: select book_.Book_id, book_.Book_name as Book_nam2_0_, book_.Author_name as Author_n3_0_, book_.Publisher as Publishe4_0_, book_.Category as Category5_0_, book_.price as price6_0_ from Book book_ where book_.Book_id=? 
[2017-09-06 19:05:05,181 - DEBUG - DelegatingBasicLogger.java::394] -  Insert 0: insert into Book (Book_name, Author_name, Publisher, Category, price, Book_id) values (?, ?, ?, ?, ?, ?) 
[2017-09-06 19:05:05,181 - DEBUG - DelegatingBasicLogger.java::394] -  Update 0: update Book set Book_name=?, Author_name=?, Publisher=?, Category=?, price=? where Book_id=? 
[2017-09-06 19:05:05,181 - DEBUG - DelegatingBasicLogger.java::394] -  Delete 0: delete from Book where Book_id=? 
[2017-09-06 19:05:05,181 - DEBUG - QuerySpacesImpl.java::174] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4f66ffc8] 
[2017-09-06 19:05:05,181 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : bookName 
[2017-09-06 19:05:05,181 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : authorName 
[2017-09-06 19:05:05,182 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : publisherName 
[2017-09-06 19:05:05,182 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : categoryName 
[2017-09-06 19:05:05,182 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : price 
[2017-09-06 19:05:05,182 - DEBUG - FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java::76] - Building LoadPlan... 
[2017-09-06 19:05:05,182 - DEBUG - LoadQueryJoinAndFetchProcessor.java::95] - processing queryspace <gen:0> 
[2017-09-06 19:05:05,182 - DEBUG - LoadPlanTreePrinter.java::55] - LoadPlan(entity=com.book.store.entity.Book)
    - Returns
       - EntityReturnImpl(entity=com.book.store.entity.Book, querySpaceUid=<gen:0>, path=com.book.store.entity.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.book.store.entity.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {Book_id1_0_0_}
 
[2017-09-06 19:05:05,183 - DEBUG - EntityLoader.java::128] - Static select for entity com.book.store.entity.Book [NONE]: select book0_.Book_id as Book_id1_0_0_, book0_.Book_name as Book_nam2_0_0_, book0_.Author_name as Author_n3_0_0_, book0_.Publisher as Publishe4_0_0_, book0_.Category as Category5_0_0_, book0_.price as price6_0_0_ from Book book0_ where book0_.Book_id=? 
[2017-09-06 19:05:05,183 - DEBUG - QuerySpacesImpl.java::174] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2def7a7a] 
[2017-09-06 19:05:05,183 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : bookName 
[2017-09-06 19:05:05,183 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : authorName 
[2017-09-06 19:05:05,183 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : publisherName 
[2017-09-06 19:05:05,183 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : categoryName 
[2017-09-06 19:05:05,183 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : price 
[2017-09-06 19:05:05,183 - DEBUG - FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java::76] - Building LoadPlan... 
[2017-09-06 19:05:05,184 - DEBUG - LoadQueryJoinAndFetchProcessor.java::95] - processing queryspace <gen:0> 
[2017-09-06 19:05:05,184 - DEBUG - LoadPlanTreePrinter.java::55] - LoadPlan(entity=com.book.store.entity.Book)
    - Returns
       - EntityReturnImpl(entity=com.book.store.entity.Book, querySpaceUid=<gen:0>, path=com.book.store.entity.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.book.store.entity.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {Book_id1_0_0_}
 
[2017-09-06 19:05:05,184 - DEBUG - EntityLoader.java::128] - Static select for entity com.book.store.entity.Book [READ]: select book0_.Book_id as Book_id1_0_0_, book0_.Book_name as Book_nam2_0_0_, book0_.Author_name as Author_n3_0_0_, book0_.Publisher as Publishe4_0_0_, book0_.Category as Category5_0_0_, book0_.price as price6_0_0_ from Book book0_ where book0_.Book_id=? 
[2017-09-06 19:05:05,184 - DEBUG - QuerySpacesImpl.java::174] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5c080ef3] 
[2017-09-06 19:05:05,184 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : bookName 
[2017-09-06 19:05:05,184 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : authorName 
[2017-09-06 19:05:05,184 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : publisherName 
[2017-09-06 19:05:05,184 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : categoryName 
[2017-09-06 19:05:05,184 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : price 
[2017-09-06 19:05:05,185 - DEBUG - FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java::76] - Building LoadPlan... 
[2017-09-06 19:05:05,185 - DEBUG - LoadQueryJoinAndFetchProcessor.java::95] - processing queryspace <gen:0> 
[2017-09-06 19:05:05,185 - DEBUG - LoadPlanTreePrinter.java::55] - LoadPlan(entity=com.book.store.entity.Book)
    - Returns
       - EntityReturnImpl(entity=com.book.store.entity.Book, querySpaceUid=<gen:0>, path=com.book.store.entity.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.book.store.entity.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {Book_id1_0_0_}
 
[2017-09-06 19:05:05,185 - DEBUG - EntityLoader.java::128] - Static select for entity com.book.store.entity.Book [UPGRADE]: select book0_.Book_id as Book_id1_0_0_, book0_.Book_name as Book_nam2_0_0_, book0_.Author_name as Author_n3_0_0_, book0_.Publisher as Publishe4_0_0_, book0_.Category as Category5_0_0_, book0_.price as price6_0_0_ from Book book0_ where book0_.Book_id=? for update 
[2017-09-06 19:05:05,185 - DEBUG - QuerySpacesImpl.java::174] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4ee6291f] 
[2017-09-06 19:05:05,185 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : bookName 
[2017-09-06 19:05:05,185 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : authorName 
[2017-09-06 19:05:05,186 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : publisherName 
[2017-09-06 19:05:05,186 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : categoryName 
[2017-09-06 19:05:05,186 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : price 
[2017-09-06 19:05:05,186 - DEBUG - FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java::76] - Building LoadPlan... 
[2017-09-06 19:05:05,186 - DEBUG - LoadQueryJoinAndFetchProcessor.java::95] - processing queryspace <gen:0> 
[2017-09-06 19:05:05,186 - DEBUG - LoadPlanTreePrinter.java::55] - LoadPlan(entity=com.book.store.entity.Book)
    - Returns
       - EntityReturnImpl(entity=com.book.store.entity.Book, querySpaceUid=<gen:0>, path=com.book.store.entity.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.book.store.entity.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {Book_id1_0_0_}
 
[2017-09-06 19:05:05,186 - DEBUG - EntityLoader.java::128] - Static select for entity com.book.store.entity.Book [UPGRADE_NOWAIT]: select book0_.Book_id as Book_id1_0_0_, book0_.Book_name as Book_nam2_0_0_, book0_.Author_name as Author_n3_0_0_, book0_.Publisher as Publishe4_0_0_, book0_.Category as Category5_0_0_, book0_.price as price6_0_0_ from Book book0_ where book0_.Book_id=? for update 
[2017-09-06 19:05:05,186 - DEBUG - QuerySpacesImpl.java::174] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@37e0292a] 
[2017-09-06 19:05:05,187 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : bookName 
[2017-09-06 19:05:05,187 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : authorName 
[2017-09-06 19:05:05,187 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : publisherName 
[2017-09-06 19:05:05,187 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : categoryName 
[2017-09-06 19:05:05,187 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : price 
[2017-09-06 19:05:05,187 - DEBUG - FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java::76] - Building LoadPlan... 
[2017-09-06 19:05:05,187 - DEBUG - LoadQueryJoinAndFetchProcessor.java::95] - processing queryspace <gen:0> 
[2017-09-06 19:05:05,187 - DEBUG - LoadPlanTreePrinter.java::55] - LoadPlan(entity=com.book.store.entity.Book)
    - Returns
       - EntityReturnImpl(entity=com.book.store.entity.Book, querySpaceUid=<gen:0>, path=com.book.store.entity.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.book.store.entity.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {Book_id1_0_0_}
 
[2017-09-06 19:05:05,188 - DEBUG - EntityLoader.java::128] - Static select for entity com.book.store.entity.Book [UPGRADE_SKIPLOCKED]: select book0_.Book_id as Book_id1_0_0_, book0_.Book_name as Book_nam2_0_0_, book0_.Author_name as Author_n3_0_0_, book0_.Publisher as Publishe4_0_0_, book0_.Category as Category5_0_0_, book0_.price as price6_0_0_ from Book book0_ where book0_.Book_id=? for update 
[2017-09-06 19:05:05,188 - DEBUG - QuerySpacesImpl.java::174] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@35267fd4] 
[2017-09-06 19:05:05,188 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : bookName 
[2017-09-06 19:05:05,188 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : authorName 
[2017-09-06 19:05:05,188 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : publisherName 
[2017-09-06 19:05:05,188 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : categoryName 
[2017-09-06 19:05:05,188 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : price 
[2017-09-06 19:05:05,188 - DEBUG - FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java::76] - Building LoadPlan... 
[2017-09-06 19:05:05,188 - DEBUG - LoadQueryJoinAndFetchProcessor.java::95] - processing queryspace <gen:0> 
[2017-09-06 19:05:05,189 - DEBUG - LoadPlanTreePrinter.java::55] - LoadPlan(entity=com.book.store.entity.Book)
    - Returns
       - EntityReturnImpl(entity=com.book.store.entity.Book, querySpaceUid=<gen:0>, path=com.book.store.entity.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.book.store.entity.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {Book_id1_0_0_}
 
[2017-09-06 19:05:05,189 - DEBUG - EntityLoader.java::128] - Static select for entity com.book.store.entity.Book [FORCE]: select book0_.Book_id as Book_id1_0_0_, book0_.Book_name as Book_nam2_0_0_, book0_.Author_name as Author_n3_0_0_, book0_.Publisher as Publishe4_0_0_, book0_.Category as Category5_0_0_, book0_.price as price6_0_0_ from Book book0_ where book0_.Book_id=? for update 
[2017-09-06 19:05:05,189 - DEBUG - QuerySpacesImpl.java::174] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@36a6bea6] 
[2017-09-06 19:05:05,189 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : bookName 
[2017-09-06 19:05:05,189 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : authorName 
[2017-09-06 19:05:05,189 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : publisherName 
[2017-09-06 19:05:05,189 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : categoryName 
[2017-09-06 19:05:05,189 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : price 
[2017-09-06 19:05:05,189 - DEBUG - FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java::76] - Building LoadPlan... 
[2017-09-06 19:05:05,190 - DEBUG - LoadQueryJoinAndFetchProcessor.java::95] - processing queryspace <gen:0> 
[2017-09-06 19:05:05,190 - DEBUG - LoadPlanTreePrinter.java::55] - LoadPlan(entity=com.book.store.entity.Book)
    - Returns
       - EntityReturnImpl(entity=com.book.store.entity.Book, querySpaceUid=<gen:0>, path=com.book.store.entity.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.book.store.entity.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {Book_id1_0_0_}
 
[2017-09-06 19:05:05,190 - DEBUG - EntityLoader.java::128] - Static select for entity com.book.store.entity.Book [PESSIMISTIC_READ]: select book0_.Book_id as Book_id1_0_0_, book0_.Book_name as Book_nam2_0_0_, book0_.Author_name as Author_n3_0_0_, book0_.Publisher as Publishe4_0_0_, book0_.Category as Category5_0_0_, book0_.price as price6_0_0_ from Book book0_ where book0_.Book_id=? lock in share mode 
[2017-09-06 19:05:05,190 - DEBUG - QuerySpacesImpl.java::174] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@42373389] 
[2017-09-06 19:05:05,190 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : bookName 
[2017-09-06 19:05:05,190 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : authorName 
[2017-09-06 19:05:05,190 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : publisherName 
[2017-09-06 19:05:05,190 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : categoryName 
[2017-09-06 19:05:05,191 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : price 
[2017-09-06 19:05:05,191 - DEBUG - FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java::76] - Building LoadPlan... 
[2017-09-06 19:05:05,191 - DEBUG - LoadQueryJoinAndFetchProcessor.java::95] - processing queryspace <gen:0> 
[2017-09-06 19:05:05,191 - DEBUG - LoadPlanTreePrinter.java::55] - LoadPlan(entity=com.book.store.entity.Book)
    - Returns
       - EntityReturnImpl(entity=com.book.store.entity.Book, querySpaceUid=<gen:0>, path=com.book.store.entity.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.book.store.entity.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {Book_id1_0_0_}
 
[2017-09-06 19:05:05,191 - DEBUG - EntityLoader.java::128] - Static select for entity com.book.store.entity.Book [PESSIMISTIC_WRITE]: select book0_.Book_id as Book_id1_0_0_, book0_.Book_name as Book_nam2_0_0_, book0_.Author_name as Author_n3_0_0_, book0_.Publisher as Publishe4_0_0_, book0_.Category as Category5_0_0_, book0_.price as price6_0_0_ from Book book0_ where book0_.Book_id=? for update 
[2017-09-06 19:05:05,191 - DEBUG - QuerySpacesImpl.java::174] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a62c7cd] 
[2017-09-06 19:05:05,191 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : bookName 
[2017-09-06 19:05:05,192 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : authorName 
[2017-09-06 19:05:05,192 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : publisherName 
[2017-09-06 19:05:05,192 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : categoryName 
[2017-09-06 19:05:05,192 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : price 
[2017-09-06 19:05:05,192 - DEBUG - FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java::76] - Building LoadPlan... 
[2017-09-06 19:05:05,192 - DEBUG - LoadQueryJoinAndFetchProcessor.java::95] - processing queryspace <gen:0> 
[2017-09-06 19:05:05,192 - DEBUG - LoadPlanTreePrinter.java::55] - LoadPlan(entity=com.book.store.entity.Book)
    - Returns
       - EntityReturnImpl(entity=com.book.store.entity.Book, querySpaceUid=<gen:0>, path=com.book.store.entity.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.book.store.entity.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {Book_id1_0_0_}
 
[2017-09-06 19:05:05,192 - DEBUG - EntityLoader.java::128] - Static select for entity com.book.store.entity.Book [PESSIMISTIC_FORCE_INCREMENT]: select book0_.Book_id as Book_id1_0_0_, book0_.Book_name as Book_nam2_0_0_, book0_.Author_name as Author_n3_0_0_, book0_.Publisher as Publishe4_0_0_, book0_.Category as Category5_0_0_, book0_.price as price6_0_0_ from Book book0_ where book0_.Book_id=? for update 
[2017-09-06 19:05:05,193 - DEBUG - QuerySpacesImpl.java::174] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7c36db44] 
[2017-09-06 19:05:05,193 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : bookName 
[2017-09-06 19:05:05,193 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : authorName 
[2017-09-06 19:05:05,193 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : publisherName 
[2017-09-06 19:05:05,193 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : categoryName 
[2017-09-06 19:05:05,193 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : price 
[2017-09-06 19:05:05,193 - DEBUG - FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java::76] - Building LoadPlan... 
[2017-09-06 19:05:05,193 - DEBUG - LoadQueryJoinAndFetchProcessor.java::95] - processing queryspace <gen:0> 
[2017-09-06 19:05:05,193 - DEBUG - LoadPlanTreePrinter.java::55] - LoadPlan(entity=com.book.store.entity.Book)
    - Returns
       - EntityReturnImpl(entity=com.book.store.entity.Book, querySpaceUid=<gen:0>, path=com.book.store.entity.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.book.store.entity.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {Book_id1_0_0_}
 
[2017-09-06 19:05:05,194 - DEBUG - EntityLoader.java::128] - Static select for entity com.book.store.entity.Book [OPTIMISTIC]: select book0_.Book_id as Book_id1_0_0_, book0_.Book_name as Book_nam2_0_0_, book0_.Author_name as Author_n3_0_0_, book0_.Publisher as Publishe4_0_0_, book0_.Category as Category5_0_0_, book0_.price as price6_0_0_ from Book book0_ where book0_.Book_id=? 
[2017-09-06 19:05:05,194 - DEBUG - QuerySpacesImpl.java::174] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7903d448] 
[2017-09-06 19:05:05,194 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : bookName 
[2017-09-06 19:05:05,194 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : authorName 
[2017-09-06 19:05:05,194 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : publisherName 
[2017-09-06 19:05:05,194 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : categoryName 
[2017-09-06 19:05:05,194 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : price 
[2017-09-06 19:05:05,194 - DEBUG - FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java::76] - Building LoadPlan... 
[2017-09-06 19:05:05,195 - DEBUG - LoadQueryJoinAndFetchProcessor.java::95] - processing queryspace <gen:0> 
[2017-09-06 19:05:05,195 - DEBUG - LoadPlanTreePrinter.java::55] - LoadPlan(entity=com.book.store.entity.Book)
    - Returns
       - EntityReturnImpl(entity=com.book.store.entity.Book, querySpaceUid=<gen:0>, path=com.book.store.entity.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.book.store.entity.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {Book_id1_0_0_}
 
[2017-09-06 19:05:05,195 - DEBUG - EntityLoader.java::128] - Static select for entity com.book.store.entity.Book [OPTIMISTIC_FORCE_INCREMENT]: select book0_.Book_id as Book_id1_0_0_, book0_.Book_name as Book_nam2_0_0_, book0_.Author_name as Author_n3_0_0_, book0_.Publisher as Publishe4_0_0_, book0_.Category as Category5_0_0_, book0_.price as price6_0_0_ from Book book0_ where book0_.Book_id=? 
[2017-09-06 19:05:05,195 - DEBUG - CascadeEntityLoader.java::38] - Static select for action ACTION_MERGE on entity com.book.store.entity.Book: select book0_.Book_id as Book_id1_0_0_, book0_.Book_name as Book_nam2_0_0_, book0_.Author_name as Author_n3_0_0_, book0_.Publisher as Publishe4_0_0_, book0_.Category as Category5_0_0_, book0_.price as price6_0_0_ from Book book0_ where book0_.Book_id=? 
[2017-09-06 19:05:05,195 - DEBUG - CascadeEntityLoader.java::38] - Static select for action ACTION_REFRESH on entity com.book.store.entity.Book: select book0_.Book_id as Book_id1_0_0_, book0_.Book_name as Book_nam2_0_0_, book0_.Author_name as Author_n3_0_0_, book0_.Publisher as Publishe4_0_0_, book0_.Category as Category5_0_0_, book0_.price as price6_0_0_ from Book book0_ where book0_.Book_id=? 
[2017-09-06 19:05:05,196 - DEBUG - AbstractEntityPersister.java::3418] - Static SQL for entity: com.book.store.entity.Purchase 
[2017-09-06 19:05:05,196 - DEBUG - AbstractEntityPersister.java::3423] -  Version select: select Purchase_no from Purchase where Purchase_no =? 
[2017-09-06 19:05:05,196 - DEBUG - AbstractEntityPersister.java::3426] -  Snapshot select: select purchase_.Purchase_no, purchase_.Book_id as Book_id2_1_, purchase_.Customer_name as Customer3_1_, purchase_.Customer_mobileno as Customer4_1_, purchase_.Purchase_date as Purchase5_1_, purchase_.Amount as Amount6_1_ from Purchase purchase_ where purchase_.Purchase_no=? 
[2017-09-06 19:05:05,196 - DEBUG - DelegatingBasicLogger.java::394] -  Insert 0: insert into Purchase (Book_id, Customer_name, Customer_mobileno, Purchase_date, Amount, Purchase_no) values (?, ?, ?, ?, ?, ?) 
[2017-09-06 19:05:05,196 - DEBUG - DelegatingBasicLogger.java::394] -  Update 0: update Purchase set Book_id=?, Customer_name=?, Customer_mobileno=?, Purchase_date=?, Amount=? where Purchase_no=? 
[2017-09-06 19:05:05,196 - DEBUG - DelegatingBasicLogger.java::394] -  Delete 0: delete from Purchase where Purchase_no=? 
[2017-09-06 19:05:05,196 - DEBUG - AbstractEntityPersister.java::3434] -  Identity insert: insert into Purchase (Book_id, Customer_name, Customer_mobileno, Purchase_date, Amount) values (?, ?, ?, ?, ?) 
[2017-09-06 19:05:05,196 - DEBUG - QuerySpacesImpl.java::174] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@42ea287] 
[2017-09-06 19:05:05,197 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : bookId 
[2017-09-06 19:05:05,197 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : customerName 
[2017-09-06 19:05:05,197 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : customerMobileNumber 
[2017-09-06 19:05:05,197 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : purchaseDate 
[2017-09-06 19:05:05,197 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : amount 
[2017-09-06 19:05:05,197 - DEBUG - FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java::76] - Building LoadPlan... 
[2017-09-06 19:05:05,197 - DEBUG - LoadQueryJoinAndFetchProcessor.java::95] - processing queryspace <gen:0> 
[2017-09-06 19:05:05,197 - DEBUG - LoadPlanTreePrinter.java::55] - LoadPlan(entity=com.book.store.entity.Purchase)
    - Returns
       - EntityReturnImpl(entity=com.book.store.entity.Purchase, querySpaceUid=<gen:0>, path=com.book.store.entity.Purchase)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.book.store.entity.Purchase)
          - SQL table alias mapping - purchase0_
          - alias suffix - 0_
          - suffixed key columns - {Purchase1_1_0_}
 
[2017-09-06 19:05:05,197 - DEBUG - EntityLoader.java::128] - Static select for entity com.book.store.entity.Purchase [NONE]: select purchase0_.Purchase_no as Purchase1_1_0_, purchase0_.Book_id as Book_id2_1_0_, purchase0_.Customer_name as Customer3_1_0_, purchase0_.Customer_mobileno as Customer4_1_0_, purchase0_.Purchase_date as Purchase5_1_0_, purchase0_.Amount as Amount6_1_0_ from Purchase purchase0_ where purchase0_.Purchase_no=? 
[2017-09-06 19:05:05,198 - DEBUG - QuerySpacesImpl.java::174] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1f0b3cfe] 
[2017-09-06 19:05:05,198 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : bookId 
[2017-09-06 19:05:05,198 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : customerName 
[2017-09-06 19:05:05,198 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : customerMobileNumber 
[2017-09-06 19:05:05,198 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : purchaseDate 
[2017-09-06 19:05:05,198 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : amount 
[2017-09-06 19:05:05,198 - DEBUG - FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java::76] - Building LoadPlan... 
[2017-09-06 19:05:05,198 - DEBUG - LoadQueryJoinAndFetchProcessor.java::95] - processing queryspace <gen:0> 
[2017-09-06 19:05:05,199 - DEBUG - LoadPlanTreePrinter.java::55] - LoadPlan(entity=com.book.store.entity.Purchase)
    - Returns
       - EntityReturnImpl(entity=com.book.store.entity.Purchase, querySpaceUid=<gen:0>, path=com.book.store.entity.Purchase)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.book.store.entity.Purchase)
          - SQL table alias mapping - purchase0_
          - alias suffix - 0_
          - suffixed key columns - {Purchase1_1_0_}
 
[2017-09-06 19:05:05,199 - DEBUG - EntityLoader.java::128] - Static select for entity com.book.store.entity.Purchase [READ]: select purchase0_.Purchase_no as Purchase1_1_0_, purchase0_.Book_id as Book_id2_1_0_, purchase0_.Customer_name as Customer3_1_0_, purchase0_.Customer_mobileno as Customer4_1_0_, purchase0_.Purchase_date as Purchase5_1_0_, purchase0_.Amount as Amount6_1_0_ from Purchase purchase0_ where purchase0_.Purchase_no=? 
[2017-09-06 19:05:05,199 - DEBUG - QuerySpacesImpl.java::174] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@65a48602] 
[2017-09-06 19:05:05,199 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : bookId 
[2017-09-06 19:05:05,199 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : customerName 
[2017-09-06 19:05:05,199 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : customerMobileNumber 
[2017-09-06 19:05:05,199 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : purchaseDate 
[2017-09-06 19:05:05,199 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : amount 
[2017-09-06 19:05:05,199 - DEBUG - FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java::76] - Building LoadPlan... 
[2017-09-06 19:05:05,200 - DEBUG - LoadQueryJoinAndFetchProcessor.java::95] - processing queryspace <gen:0> 
[2017-09-06 19:05:05,200 - DEBUG - LoadPlanTreePrinter.java::55] - LoadPlan(entity=com.book.store.entity.Purchase)
    - Returns
       - EntityReturnImpl(entity=com.book.store.entity.Purchase, querySpaceUid=<gen:0>, path=com.book.store.entity.Purchase)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.book.store.entity.Purchase)
          - SQL table alias mapping - purchase0_
          - alias suffix - 0_
          - suffixed key columns - {Purchase1_1_0_}
 
[2017-09-06 19:05:05,200 - DEBUG - EntityLoader.java::128] - Static select for entity com.book.store.entity.Purchase [UPGRADE]: select purchase0_.Purchase_no as Purchase1_1_0_, purchase0_.Book_id as Book_id2_1_0_, purchase0_.Customer_name as Customer3_1_0_, purchase0_.Customer_mobileno as Customer4_1_0_, purchase0_.Purchase_date as Purchase5_1_0_, purchase0_.Amount as Amount6_1_0_ from Purchase purchase0_ where purchase0_.Purchase_no=? for update 
[2017-09-06 19:05:05,200 - DEBUG - QuerySpacesImpl.java::174] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@336206d8] 
[2017-09-06 19:05:05,200 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : bookId 
[2017-09-06 19:05:05,200 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : customerName 
[2017-09-06 19:05:05,200 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : customerMobileNumber 
[2017-09-06 19:05:05,200 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : purchaseDate 
[2017-09-06 19:05:05,200 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : amount 
[2017-09-06 19:05:05,201 - DEBUG - FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java::76] - Building LoadPlan... 
[2017-09-06 19:05:05,201 - DEBUG - LoadQueryJoinAndFetchProcessor.java::95] - processing queryspace <gen:0> 
[2017-09-06 19:05:05,201 - DEBUG - LoadPlanTreePrinter.java::55] - LoadPlan(entity=com.book.store.entity.Purchase)
    - Returns
       - EntityReturnImpl(entity=com.book.store.entity.Purchase, querySpaceUid=<gen:0>, path=com.book.store.entity.Purchase)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.book.store.entity.Purchase)
          - SQL table alias mapping - purchase0_
          - alias suffix - 0_
          - suffixed key columns - {Purchase1_1_0_}
 
[2017-09-06 19:05:05,201 - DEBUG - EntityLoader.java::128] - Static select for entity com.book.store.entity.Purchase [UPGRADE_NOWAIT]: select purchase0_.Purchase_no as Purchase1_1_0_, purchase0_.Book_id as Book_id2_1_0_, purchase0_.Customer_name as Customer3_1_0_, purchase0_.Customer_mobileno as Customer4_1_0_, purchase0_.Purchase_date as Purchase5_1_0_, purchase0_.Amount as Amount6_1_0_ from Purchase purchase0_ where purchase0_.Purchase_no=? for update 
[2017-09-06 19:05:05,201 - DEBUG - QuerySpacesImpl.java::174] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1f11f64e] 
[2017-09-06 19:05:05,201 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : bookId 
[2017-09-06 19:05:05,201 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : customerName 
[2017-09-06 19:05:05,202 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : customerMobileNumber 
[2017-09-06 19:05:05,202 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : purchaseDate 
[2017-09-06 19:05:05,202 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : amount 
[2017-09-06 19:05:05,202 - DEBUG - FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java::76] - Building LoadPlan... 
[2017-09-06 19:05:05,202 - DEBUG - LoadQueryJoinAndFetchProcessor.java::95] - processing queryspace <gen:0> 
[2017-09-06 19:05:05,202 - DEBUG - LoadPlanTreePrinter.java::55] - LoadPlan(entity=com.book.store.entity.Purchase)
    - Returns
       - EntityReturnImpl(entity=com.book.store.entity.Purchase, querySpaceUid=<gen:0>, path=com.book.store.entity.Purchase)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.book.store.entity.Purchase)
          - SQL table alias mapping - purchase0_
          - alias suffix - 0_
          - suffixed key columns - {Purchase1_1_0_}
 
[2017-09-06 19:05:05,202 - DEBUG - EntityLoader.java::128] - Static select for entity com.book.store.entity.Purchase [UPGRADE_SKIPLOCKED]: select purchase0_.Purchase_no as Purchase1_1_0_, purchase0_.Book_id as Book_id2_1_0_, purchase0_.Customer_name as Customer3_1_0_, purchase0_.Customer_mobileno as Customer4_1_0_, purchase0_.Purchase_date as Purchase5_1_0_, purchase0_.Amount as Amount6_1_0_ from Purchase purchase0_ where purchase0_.Purchase_no=? for update 
[2017-09-06 19:05:05,202 - DEBUG - QuerySpacesImpl.java::174] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@858d8b4] 
[2017-09-06 19:05:05,203 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : bookId 
[2017-09-06 19:05:05,203 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : customerName 
[2017-09-06 19:05:05,203 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : customerMobileNumber 
[2017-09-06 19:05:05,203 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : purchaseDate 
[2017-09-06 19:05:05,203 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : amount 
[2017-09-06 19:05:05,203 - DEBUG - FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java::76] - Building LoadPlan... 
[2017-09-06 19:05:05,203 - DEBUG - LoadQueryJoinAndFetchProcessor.java::95] - processing queryspace <gen:0> 
[2017-09-06 19:05:05,203 - DEBUG - LoadPlanTreePrinter.java::55] - LoadPlan(entity=com.book.store.entity.Purchase)
    - Returns
       - EntityReturnImpl(entity=com.book.store.entity.Purchase, querySpaceUid=<gen:0>, path=com.book.store.entity.Purchase)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.book.store.entity.Purchase)
          - SQL table alias mapping - purchase0_
          - alias suffix - 0_
          - suffixed key columns - {Purchase1_1_0_}
 
[2017-09-06 19:05:05,203 - DEBUG - EntityLoader.java::128] - Static select for entity com.book.store.entity.Purchase [FORCE]: select purchase0_.Purchase_no as Purchase1_1_0_, purchase0_.Book_id as Book_id2_1_0_, purchase0_.Customer_name as Customer3_1_0_, purchase0_.Customer_mobileno as Customer4_1_0_, purchase0_.Purchase_date as Purchase5_1_0_, purchase0_.Amount as Amount6_1_0_ from Purchase purchase0_ where purchase0_.Purchase_no=? for update 
[2017-09-06 19:05:05,204 - DEBUG - QuerySpacesImpl.java::174] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@612e21b9] 
[2017-09-06 19:05:05,204 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : bookId 
[2017-09-06 19:05:05,204 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : customerName 
[2017-09-06 19:05:05,204 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : customerMobileNumber 
[2017-09-06 19:05:05,204 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : purchaseDate 
[2017-09-06 19:05:05,204 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : amount 
[2017-09-06 19:05:05,204 - DEBUG - FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java::76] - Building LoadPlan... 
[2017-09-06 19:05:05,204 - DEBUG - LoadQueryJoinAndFetchProcessor.java::95] - processing queryspace <gen:0> 
[2017-09-06 19:05:05,205 - DEBUG - LoadPlanTreePrinter.java::55] - LoadPlan(entity=com.book.store.entity.Purchase)
    - Returns
       - EntityReturnImpl(entity=com.book.store.entity.Purchase, querySpaceUid=<gen:0>, path=com.book.store.entity.Purchase)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.book.store.entity.Purchase)
          - SQL table alias mapping - purchase0_
          - alias suffix - 0_
          - suffixed key columns - {Purchase1_1_0_}
 
[2017-09-06 19:05:05,205 - DEBUG - EntityLoader.java::128] - Static select for entity com.book.store.entity.Purchase [PESSIMISTIC_READ]: select purchase0_.Purchase_no as Purchase1_1_0_, purchase0_.Book_id as Book_id2_1_0_, purchase0_.Customer_name as Customer3_1_0_, purchase0_.Customer_mobileno as Customer4_1_0_, purchase0_.Purchase_date as Purchase5_1_0_, purchase0_.Amount as Amount6_1_0_ from Purchase purchase0_ where purchase0_.Purchase_no=? lock in share mode 
[2017-09-06 19:05:05,205 - DEBUG - QuerySpacesImpl.java::174] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7efd28bd] 
[2017-09-06 19:05:05,205 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : bookId 
[2017-09-06 19:05:05,205 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : customerName 
[2017-09-06 19:05:05,205 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : customerMobileNumber 
[2017-09-06 19:05:05,205 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : purchaseDate 
[2017-09-06 19:05:05,205 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : amount 
[2017-09-06 19:05:05,206 - DEBUG - FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java::76] - Building LoadPlan... 
[2017-09-06 19:05:05,206 - DEBUG - LoadQueryJoinAndFetchProcessor.java::95] - processing queryspace <gen:0> 
[2017-09-06 19:05:05,206 - DEBUG - LoadPlanTreePrinter.java::55] - LoadPlan(entity=com.book.store.entity.Purchase)
    - Returns
       - EntityReturnImpl(entity=com.book.store.entity.Purchase, querySpaceUid=<gen:0>, path=com.book.store.entity.Purchase)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.book.store.entity.Purchase)
          - SQL table alias mapping - purchase0_
          - alias suffix - 0_
          - suffixed key columns - {Purchase1_1_0_}
 
[2017-09-06 19:05:05,206 - DEBUG - EntityLoader.java::128] - Static select for entity com.book.store.entity.Purchase [PESSIMISTIC_WRITE]: select purchase0_.Purchase_no as Purchase1_1_0_, purchase0_.Book_id as Book_id2_1_0_, purchase0_.Customer_name as Customer3_1_0_, purchase0_.Customer_mobileno as Customer4_1_0_, purchase0_.Purchase_date as Purchase5_1_0_, purchase0_.Amount as Amount6_1_0_ from Purchase purchase0_ where purchase0_.Purchase_no=? for update 
[2017-09-06 19:05:05,206 - DEBUG - QuerySpacesImpl.java::174] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7718a40f] 
[2017-09-06 19:05:05,206 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : bookId 
[2017-09-06 19:05:05,206 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : customerName 
[2017-09-06 19:05:05,206 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : customerMobileNumber 
[2017-09-06 19:05:05,207 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : purchaseDate 
[2017-09-06 19:05:05,207 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : amount 
[2017-09-06 19:05:05,207 - DEBUG - FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java::76] - Building LoadPlan... 
[2017-09-06 19:05:05,207 - DEBUG - LoadQueryJoinAndFetchProcessor.java::95] - processing queryspace <gen:0> 
[2017-09-06 19:05:05,207 - DEBUG - LoadPlanTreePrinter.java::55] - LoadPlan(entity=com.book.store.entity.Purchase)
    - Returns
       - EntityReturnImpl(entity=com.book.store.entity.Purchase, querySpaceUid=<gen:0>, path=com.book.store.entity.Purchase)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.book.store.entity.Purchase)
          - SQL table alias mapping - purchase0_
          - alias suffix - 0_
          - suffixed key columns - {Purchase1_1_0_}
 
[2017-09-06 19:05:05,207 - DEBUG - EntityLoader.java::128] - Static select for entity com.book.store.entity.Purchase [PESSIMISTIC_FORCE_INCREMENT]: select purchase0_.Purchase_no as Purchase1_1_0_, purchase0_.Book_id as Book_id2_1_0_, purchase0_.Customer_name as Customer3_1_0_, purchase0_.Customer_mobileno as Customer4_1_0_, purchase0_.Purchase_date as Purchase5_1_0_, purchase0_.Amount as Amount6_1_0_ from Purchase purchase0_ where purchase0_.Purchase_no=? for update 
[2017-09-06 19:05:05,207 - DEBUG - QuerySpacesImpl.java::174] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@26844abb] 
[2017-09-06 19:05:05,208 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : bookId 
[2017-09-06 19:05:05,208 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : customerName 
[2017-09-06 19:05:05,208 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : customerMobileNumber 
[2017-09-06 19:05:05,208 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : purchaseDate 
[2017-09-06 19:05:05,208 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : amount 
[2017-09-06 19:05:05,208 - DEBUG - FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java::76] - Building LoadPlan... 
[2017-09-06 19:05:05,208 - DEBUG - LoadQueryJoinAndFetchProcessor.java::95] - processing queryspace <gen:0> 
[2017-09-06 19:05:05,208 - DEBUG - LoadPlanTreePrinter.java::55] - LoadPlan(entity=com.book.store.entity.Purchase)
    - Returns
       - EntityReturnImpl(entity=com.book.store.entity.Purchase, querySpaceUid=<gen:0>, path=com.book.store.entity.Purchase)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.book.store.entity.Purchase)
          - SQL table alias mapping - purchase0_
          - alias suffix - 0_
          - suffixed key columns - {Purchase1_1_0_}
 
[2017-09-06 19:05:05,209 - DEBUG - EntityLoader.java::128] - Static select for entity com.book.store.entity.Purchase [OPTIMISTIC]: select purchase0_.Purchase_no as Purchase1_1_0_, purchase0_.Book_id as Book_id2_1_0_, purchase0_.Customer_name as Customer3_1_0_, purchase0_.Customer_mobileno as Customer4_1_0_, purchase0_.Purchase_date as Purchase5_1_0_, purchase0_.Amount as Amount6_1_0_ from Purchase purchase0_ where purchase0_.Purchase_no=? 
[2017-09-06 19:05:05,209 - DEBUG - QuerySpacesImpl.java::174] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@288ca5f0] 
[2017-09-06 19:05:05,209 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : bookId 
[2017-09-06 19:05:05,209 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : customerName 
[2017-09-06 19:05:05,209 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : customerMobileNumber 
[2017-09-06 19:05:05,209 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : purchaseDate 
[2017-09-06 19:05:05,209 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : amount 
[2017-09-06 19:05:05,209 - DEBUG - FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java::76] - Building LoadPlan... 
[2017-09-06 19:05:05,209 - DEBUG - LoadQueryJoinAndFetchProcessor.java::95] - processing queryspace <gen:0> 
[2017-09-06 19:05:05,210 - DEBUG - LoadPlanTreePrinter.java::55] - LoadPlan(entity=com.book.store.entity.Purchase)
    - Returns
       - EntityReturnImpl(entity=com.book.store.entity.Purchase, querySpaceUid=<gen:0>, path=com.book.store.entity.Purchase)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.book.store.entity.Purchase)
          - SQL table alias mapping - purchase0_
          - alias suffix - 0_
          - suffixed key columns - {Purchase1_1_0_}
 
[2017-09-06 19:05:05,210 - DEBUG - EntityLoader.java::128] - Static select for entity com.book.store.entity.Purchase [OPTIMISTIC_FORCE_INCREMENT]: select purchase0_.Purchase_no as Purchase1_1_0_, purchase0_.Book_id as Book_id2_1_0_, purchase0_.Customer_name as Customer3_1_0_, purchase0_.Customer_mobileno as Customer4_1_0_, purchase0_.Purchase_date as Purchase5_1_0_, purchase0_.Amount as Amount6_1_0_ from Purchase purchase0_ where purchase0_.Purchase_no=? 
[2017-09-06 19:05:05,210 - DEBUG - CascadeEntityLoader.java::38] - Static select for action ACTION_MERGE on entity com.book.store.entity.Purchase: select purchase0_.Purchase_no as Purchase1_1_0_, purchase0_.Book_id as Book_id2_1_0_, purchase0_.Customer_name as Customer3_1_0_, purchase0_.Customer_mobileno as Customer4_1_0_, purchase0_.Purchase_date as Purchase5_1_0_, purchase0_.Amount as Amount6_1_0_ from Purchase purchase0_ where purchase0_.Purchase_no=? 
[2017-09-06 19:05:05,210 - DEBUG - CascadeEntityLoader.java::38] - Static select for action ACTION_REFRESH on entity com.book.store.entity.Purchase: select purchase0_.Purchase_no as Purchase1_1_0_, purchase0_.Book_id as Book_id2_1_0_, purchase0_.Customer_name as Customer3_1_0_, purchase0_.Customer_mobileno as Customer4_1_0_, purchase0_.Purchase_date as Purchase5_1_0_, purchase0_.Amount as Amount6_1_0_ from Purchase purchase0_ where purchase0_.Purchase_no=? 
[2017-09-06 19:05:05,210 - DEBUG - SessionFactoryImpl.java::462] - Instantiated session factory 
[2017-09-06 19:05:05,210 - INFO - SchemaUpdate.java::101] - HHH000228: Running hbm2ddl schema update 
[2017-09-06 19:05:05,229 - DEBUG - Table.java::478] - No alter strings for table : Book 
[2017-09-06 19:05:05,245 - DEBUG - Table.java::478] - No alter strings for table : Purchase 
[2017-09-06 19:05:05,246 - DEBUG - JtaPlatformInitiator.java::42] - No JtaPlatform was specified, checking resolver 
[2017-09-06 19:05:05,247 - DEBUG - JtaPlatformResolverInitiator.java::33] - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver] 
[2017-09-06 19:05:05,248 - DEBUG - StandardJtaPlatformResolver.java::101] - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform] 
[2017-09-06 19:05:05,248 - DEBUG - NamedQueryRepository.java::149] - Checking 0 named HQL queries 
[2017-09-06 19:05:05,248 - DEBUG - NamedQueryRepository.java::165] - Checking 0 named SQL queries 
[2017-09-06 19:05:05,248 - DEBUG - SessionFactoryRegistry.java::74] - Registering SessionFactory: 19ac97f6-8619-4622-8231-47556056e54e (<unnamed>) 
[2017-09-06 19:05:05,248 - DEBUG - SessionFactoryRegistry.java::81] - Not binding SessionFactory to JNDI, no JNDI name configured 
[2017-09-06 19:05:05,248 - DEBUG - StatisticsInitiator.java::82] - Statistics initialized [enabled=false] 
[2017-09-06 19:05:05,249 - DEBUG - QueryTranslatorFactoryInitiator.java::45] - QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@d2387c8 
[2017-09-06 19:05:05,249 - INFO - QueryTranslatorFactoryInitiator.java::47] - HHH000397: Using ASTQueryTranslatorFactory 
[2017-09-06 19:05:05,249 - DEBUG - QueryTranslatorImpl.java::278] - parse() - HQL: from com.book.store.entity.Book where bookId = :bookId 
[2017-09-06 19:05:05,250 - DEBUG - QueryTranslatorImpl.java::296] - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[DOT] Node: '.'
    |           |  |  |  +-[IDENT] Node: 'com'
    |           |  |  |  \-[IDENT] Node: 'book'
    |           |  |  \-[IDENT] Node: 'store'
    |           |  \-[IDENT] Node: 'entity'
    |           \-[IDENT] Node: 'Book'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'bookId'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'bookId'
 
[2017-09-06 19:05:05,250 - DEBUG - ErrorCounter.java::95] - throwQueryException() : no errors 
[2017-09-06 19:05:05,250 - DEBUG - HqlSqlBaseWalker.java::121] - select << begin [level=1, statement=select] 
[2017-09-06 19:05:05,251 - DEBUG - FromElement.java::145] - FromClause{level=1} : com.book.store.entity.Book (<no alias>) -> book0_ 
[2017-09-06 19:05:05,251 - DEBUG - FromReferenceNode.java::60] - Resolved : {synthetic-alias} -> {synthetic-alias} 
[2017-09-06 19:05:05,251 - DEBUG - DotNode.java::654] - getDataType() : bookId -> org.hibernate.type.IntegerType@793f29ff 
[2017-09-06 19:05:05,251 - DEBUG - FromReferenceNode.java::60] - Resolved : {synthetic-alias}.bookId -> book0_.Book_id 
[2017-09-06 19:05:05,251 - DEBUG - HqlSqlBaseWalker.java::125] - select : finishing up [level=1, statement=select] 
[2017-09-06 19:05:05,252 - DEBUG - HqlSqlWalker.java::654] - processQuery() :  ( SELECT ( FromClause{level=1} Book book0_ ) ( where ( = ( book0_.Book_id {synthetic-alias} bookId ) ? ) ) ) 
[2017-09-06 19:05:05,252 - DEBUG - HqlSqlWalker.java::930] - Derived SELECT clause created. 
[2017-09-06 19:05:05,252 - DEBUG - JoinProcessor.java::169] - Using FROM fragment [Book book0_] 
[2017-09-06 19:05:05,252 - DEBUG - HqlSqlBaseWalker.java::129] - select >> end [level=1, statement=select] 
[2017-09-06 19:05:05,253 - DEBUG - QueryTranslatorImpl.java::265] - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Book)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'book0_.Book_id as Book_id1_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Book,tableAlias=book0_,origin=null,columns={,className=com.book.store.entity.Book}}}
    |  \-[SQL_TOKEN] SqlFragment: 'book0_.Book_name as Book_nam2_0_, book0_.Author_name as Author_n3_0_, book0_.Publisher as Publishe4_0_, book0_.Category as Category5_0_, book0_.price as price6_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[book0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Book book0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Book,tableAlias=book0_,origin=null,columns={,className=com.book.store.entity.Book}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'book0_.Book_id' {propertyName=bookId,dereferenceType=PRIMITIVE,getPropertyPath=bookId,path={synthetic-alias}.bookId,tableAlias=book0_,className=com.book.store.entity.Book,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'bookId' {originalText=bookId}
          \-[NAMED_PARAM] ParameterNode: '?' {name=bookId, expectedType=org.hibernate.type.IntegerType@793f29ff}
 
[2017-09-06 19:05:05,253 - DEBUG - ErrorCounter.java::95] - throwQueryException() : no errors 
[2017-09-06 19:05:05,253 - DEBUG - QueryTranslatorImpl.java::247] - HQL: from com.book.store.entity.Book where bookId = :bookId 
[2017-09-06 19:05:05,253 - DEBUG - QueryTranslatorImpl.java::248] - SQL: select book0_.Book_id as Book_id1_0_, book0_.Book_name as Book_nam2_0_, book0_.Author_name as Author_n3_0_, book0_.Publisher as Publishe4_0_, book0_.Category as Category5_0_, book0_.price as price6_0_ from Book book0_ where book0_.Book_id=? 
[2017-09-06 19:05:05,253 - DEBUG - ErrorCounter.java::95] - throwQueryException() : no errors 
[2017-09-06 19:05:05,253 - DEBUG - SqlStatementLogger.java::92] - select book0_.Book_id as Book_id1_0_, book0_.Book_name as Book_nam2_0_, book0_.Author_name as Author_n3_0_, book0_.Publisher as Publishe4_0_, book0_.Category as Category5_0_, book0_.price as price6_0_ from Book book0_ where book0_.Book_id=? 
[2017-09-06 19:05:05,255 - DEBUG - DelegatingBasicLogger.java::384] - Result set row: 0 
[2017-09-06 19:05:05,255 - DEBUG - Loader.java::1514] - Result row: EntityKey[com.book.store.entity.Book#1001] 
[2017-09-06 19:05:05,255 - DEBUG - TwoPhaseLoad.java::144] - Resolving associations for [com.book.store.entity.Book#1001] 
[2017-09-06 19:05:05,255 - DEBUG - TwoPhaseLoad.java::274] - Done materializing entity [com.book.store.entity.Book#1001] 
[2017-09-06 19:05:05,258 - DEBUG - TransactionImpl.java::51] - begin 
[2017-09-06 19:05:05,264 - DEBUG - ActionQueue.java::178] - Executing identity-insert immediately 
[2017-09-06 19:05:05,279 - DEBUG - SqlStatementLogger.java::92] - insert into Purchase (Book_id, Customer_name, Customer_mobileno, Purchase_date, Amount) values (?, ?, ?, ?, ?) 
[2017-09-06 19:05:05,285 - DEBUG - IdentifierGeneratorHelper.java::74] - Natively generated identity: 9 
[2017-09-06 19:05:05,286 - DEBUG - ResourceRegistryStandardImpl.java::104] - HHH000387: ResultSet's statement was not registered 
[2017-09-06 19:05:05,287 - DEBUG - TransactionImpl.java::62] - committing 
[2017-09-06 19:05:05,287 - DEBUG - AbstractFlushingEventListener.java::132] - Processing flush-time cascades 
[2017-09-06 19:05:05,288 - DEBUG - AbstractFlushingEventListener.java::174] - Dirty checking collections 
[2017-09-06 19:05:05,289 - DEBUG - AbstractFlushingEventListener.java::106] - Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects 
[2017-09-06 19:05:05,290 - DEBUG - AbstractFlushingEventListener.java::113] - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections 
[2017-09-06 19:05:05,290 - DEBUG - EntityPrinter.java::102] - Listing entities: 
[2017-09-06 19:05:05,291 - DEBUG - EntityPrinter.java::109] - com.book.store.entity.Book{authorName=Herbert Schildt, publisherName=Tata, price=615, bookName=Java: The Complete Reference, categoryName=Technology, bookId=1001} 
[2017-09-06 19:05:05,291 - DEBUG - EntityPrinter.java::109] - com.book.store.entity.Purchase{purchaseDate=Wed Sep 06 19:05:05 IST 2017, amount=615, customerMobileNumber=9900972900, customerName=Raj, purchaseNumber=9, bookId=1001} 
[2017-09-06 19:05:05,367 - DEBUG - QueryTranslatorImpl.java::278] - parse() - HQL: from com.book.store.entity.Purchase where customerName = :customerName 
[2017-09-06 19:05:05,368 - DEBUG - QueryTranslatorImpl.java::296] - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[DOT] Node: '.'
    |           |  |  |  +-[IDENT] Node: 'com'
    |           |  |  |  \-[IDENT] Node: 'book'
    |           |  |  \-[IDENT] Node: 'store'
    |           |  \-[IDENT] Node: 'entity'
    |           \-[IDENT] Node: 'Purchase'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'customerName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'customerName'
 
[2017-09-06 19:05:05,368 - DEBUG - ErrorCounter.java::95] - throwQueryException() : no errors 
[2017-09-06 19:05:05,368 - DEBUG - HqlSqlBaseWalker.java::121] - select << begin [level=1, statement=select] 
[2017-09-06 19:05:05,369 - DEBUG - FromElement.java::145] - FromClause{level=1} : com.book.store.entity.Purchase (<no alias>) -> purchase0_ 
[2017-09-06 19:05:05,370 - DEBUG - FromReferenceNode.java::60] - Resolved : {synthetic-alias} -> {synthetic-alias} 
[2017-09-06 19:05:05,370 - DEBUG - DotNode.java::654] - getDataType() : customerName -> org.hibernate.type.StringType@15043a2f 
[2017-09-06 19:05:05,370 - DEBUG - FromReferenceNode.java::60] - Resolved : {synthetic-alias}.customerName -> purchase0_.Customer_name 
[2017-09-06 19:05:05,370 - DEBUG - HqlSqlBaseWalker.java::125] - select : finishing up [level=1, statement=select] 
[2017-09-06 19:05:05,370 - DEBUG - HqlSqlWalker.java::654] - processQuery() :  ( SELECT ( FromClause{level=1} Purchase purchase0_ ) ( where ( = ( purchase0_.Customer_name {synthetic-alias} customerName ) ? ) ) ) 
[2017-09-06 19:05:05,371 - DEBUG - HqlSqlWalker.java::930] - Derived SELECT clause created. 
[2017-09-06 19:05:05,371 - DEBUG - JoinProcessor.java::169] - Using FROM fragment [Purchase purchase0_] 
[2017-09-06 19:05:05,371 - DEBUG - HqlSqlBaseWalker.java::129] - select >> end [level=1, statement=select] 
[2017-09-06 19:05:05,371 - DEBUG - QueryTranslatorImpl.java::265] - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Purchase)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'purchase0_.Purchase_no as Purchase1_1_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Purchase,tableAlias=purchase0_,origin=null,columns={,className=com.book.store.entity.Purchase}}}
    |  \-[SQL_TOKEN] SqlFragment: 'purchase0_.Book_id as Book_id2_1_, purchase0_.Customer_name as Customer3_1_, purchase0_.Customer_mobileno as Customer4_1_, purchase0_.Purchase_date as Purchase5_1_, purchase0_.Amount as Amount6_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[purchase0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Purchase purchase0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Purchase,tableAlias=purchase0_,origin=null,columns={,className=com.book.store.entity.Purchase}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'purchase0_.Customer_name' {propertyName=customerName,dereferenceType=PRIMITIVE,getPropertyPath=customerName,path={synthetic-alias}.customerName,tableAlias=purchase0_,className=com.book.store.entity.Purchase,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'customerName' {originalText=customerName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=customerName, expectedType=org.hibernate.type.StringType@15043a2f}
 
[2017-09-06 19:05:05,371 - DEBUG - ErrorCounter.java::95] - throwQueryException() : no errors 
[2017-09-06 19:05:05,372 - DEBUG - QueryTranslatorImpl.java::247] - HQL: from com.book.store.entity.Purchase where customerName = :customerName 
[2017-09-06 19:05:05,372 - DEBUG - QueryTranslatorImpl.java::248] - SQL: select purchase0_.Purchase_no as Purchase1_1_, purchase0_.Book_id as Book_id2_1_, purchase0_.Customer_name as Customer3_1_, purchase0_.Customer_mobileno as Customer4_1_, purchase0_.Purchase_date as Purchase5_1_, purchase0_.Amount as Amount6_1_ from Purchase purchase0_ where purchase0_.Customer_name=? 
[2017-09-06 19:05:05,372 - DEBUG - ErrorCounter.java::95] - throwQueryException() : no errors 
[2017-09-06 19:05:05,372 - DEBUG - SqlStatementLogger.java::92] - select purchase0_.Purchase_no as Purchase1_1_, purchase0_.Book_id as Book_id2_1_, purchase0_.Customer_name as Customer3_1_, purchase0_.Customer_mobileno as Customer4_1_, purchase0_.Purchase_date as Purchase5_1_, purchase0_.Amount as Amount6_1_ from Purchase purchase0_ where purchase0_.Customer_name=? 
[2017-09-06 19:05:05,373 - DEBUG - DelegatingBasicLogger.java::384] - Result set row: 0 
[2017-09-06 19:05:05,373 - DEBUG - Loader.java::1514] - Result row: EntityKey[com.book.store.entity.Purchase#8] 
[2017-09-06 19:05:05,373 - DEBUG - DelegatingBasicLogger.java::384] - Result set row: 1 
[2017-09-06 19:05:05,374 - DEBUG - Loader.java::1514] - Result row: EntityKey[com.book.store.entity.Purchase#9] 
[2017-09-06 19:05:05,374 - DEBUG - TwoPhaseLoad.java::144] - Resolving associations for [com.book.store.entity.Purchase#8] 
[2017-09-06 19:05:05,374 - DEBUG - TwoPhaseLoad.java::274] - Done materializing entity [com.book.store.entity.Purchase#8] 
[2017-09-06 19:05:05,375 - DEBUG - IntegratorServiceImpl.java::46] - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator]. 
[2017-09-06 19:05:05,375 - DEBUG - IntegratorServiceImpl.java::46] - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator]. 
[2017-09-06 19:05:05,375 - DEBUG - IntegratorServiceImpl.java::46] - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator]. 
[2017-09-06 19:05:05,377 - DEBUG - LocalXmlResourceResolver.java::57] - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd createDatabaseIfNotExist=true] 
[2017-09-06 19:05:05,378 - WARN - LocalXmlResourceResolver.java::91] - HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-configuration. Use namespace http://www.hibernate.org/dtd/hibernate-configuration instead.  Support for obsolete DTD/XSD namespaces may be removed at any time. 
[2017-09-06 19:05:05,378 - DEBUG - LocalXmlResourceResolver.java::95] - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/ 
[2017-09-06 19:05:05,379 - DEBUG - JaxbCfgProcessor.java::116] - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information 
[2017-09-06 19:05:05,410 - DEBUG - Configuration.java::722] - Building session factory using internal StandardServiceRegistryBuilder 
[2017-09-06 19:05:05,413 - DEBUG - ServiceBinding.java::68] - Overriding existing service binding [org.hibernate.secure.spi.JaccService] 
[2017-09-06 19:05:05,413 - DEBUG - Configuration.java::653] - Building session factory using provided StandardServiceRegistry 
[2017-09-06 19:05:05,413 - DEBUG - RegionFactoryInitiator.java::88] - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory 
[2017-09-06 19:05:05,416 - DEBUG - LocalXmlResourceResolver.java::57] - Interpreting public/system identifier : [-//Hibernate/Hibernate Mapping DTD 5.0//EN] - [http://hibernate.sourceforge.net/hibernate-mapping-5.0.dtd] 
[2017-09-06 19:05:05,416 - WARN - LocalXmlResourceResolver.java::75] - HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-mapping. Use namespace http://www.hibernate.org/dtd/hibernate-mapping instead.  Support for obsolete DTD/XSD namespaces may be removed at any time. 
[2017-09-06 19:05:05,416 - DEBUG - LocalXmlResourceResolver.java::79] - Recognized legacy hibernate-mapping identifier; attempting to resolve on classpath under org/hibernate/ 
[2017-09-06 19:05:05,426 - DEBUG - MappingBinder.java::54] - Performing JAXB binding of hbm.xml document : Origin(name=bookstore.hbm.xml,type=RESOURCE) 
[2017-09-06 19:05:05,605 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration boolean -> org.hibernate.type.BooleanType@f0c8a99 
[2017-09-06 19:05:05,605 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration boolean -> org.hibernate.type.BooleanType@f0c8a99 
[2017-09-06 19:05:05,605 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@f0c8a99 
[2017-09-06 19:05:05,605 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@7526515b 
[2017-09-06 19:05:05,605 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration true_false -> org.hibernate.type.TrueFalseType@6e6f2380 
[2017-09-06 19:05:05,605 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration yes_no -> org.hibernate.type.YesNoType@53fe15ff 
[2017-09-06 19:05:05,605 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration byte -> org.hibernate.type.ByteType@15bb5034 
[2017-09-06 19:05:05,605 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration byte -> org.hibernate.type.ByteType@15bb5034 
[2017-09-06 19:05:05,606 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@15bb5034 
[2017-09-06 19:05:05,606 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration character -> org.hibernate.type.CharacterType@2cf3d63b 
[2017-09-06 19:05:05,606 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration char -> org.hibernate.type.CharacterType@2cf3d63b 
[2017-09-06 19:05:05,606 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2cf3d63b 
[2017-09-06 19:05:05,606 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration short -> org.hibernate.type.ShortType@76b1e9b8 
[2017-09-06 19:05:05,606 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration short -> org.hibernate.type.ShortType@76b1e9b8 
[2017-09-06 19:05:05,606 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@76b1e9b8 
[2017-09-06 19:05:05,606 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration integer -> org.hibernate.type.IntegerType@793f29ff 
[2017-09-06 19:05:05,606 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration int -> org.hibernate.type.IntegerType@793f29ff 
[2017-09-06 19:05:05,606 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@793f29ff 
[2017-09-06 19:05:05,606 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration long -> org.hibernate.type.LongType@7ef82753 
[2017-09-06 19:05:05,606 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration long -> org.hibernate.type.LongType@7ef82753 
[2017-09-06 19:05:05,607 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.lang.Long -> org.hibernate.type.LongType@7ef82753 
[2017-09-06 19:05:05,607 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration float -> org.hibernate.type.FloatType@7161d8d1 
[2017-09-06 19:05:05,607 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration float -> org.hibernate.type.FloatType@7161d8d1 
[2017-09-06 19:05:05,607 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7161d8d1 
[2017-09-06 19:05:05,607 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration double -> org.hibernate.type.DoubleType@5149d738 
[2017-09-06 19:05:05,608 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration double -> org.hibernate.type.DoubleType@5149d738 
[2017-09-06 19:05:05,608 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@5149d738 
[2017-09-06 19:05:05,608 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@712625fd 
[2017-09-06 19:05:05,608 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@712625fd 
[2017-09-06 19:05:05,608 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1c5920df 
[2017-09-06 19:05:05,608 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1c5920df 
[2017-09-06 19:05:05,608 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration string -> org.hibernate.type.StringType@15043a2f 
[2017-09-06 19:05:05,608 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.lang.String -> org.hibernate.type.StringType@15043a2f 
[2017-09-06 19:05:05,608 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@28261e8e 
[2017-09-06 19:05:05,608 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@3ba987b8 
[2017-09-06 19:05:05,608 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration url -> org.hibernate.type.UrlType@72035809 
[2017-09-06 19:05:05,609 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.net.URL -> org.hibernate.type.UrlType@72035809 
[2017-09-06 19:05:05,609 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration date -> org.hibernate.type.DateType@2cb4893b 
[2017-09-06 19:05:05,609 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.sql.Date -> org.hibernate.type.DateType@2cb4893b 
[2017-09-06 19:05:05,609 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration time -> org.hibernate.type.TimeType@273444fe 
[2017-09-06 19:05:05,609 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@273444fe 
[2017-09-06 19:05:05,609 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration timestamp -> org.hibernate.type.TimestampType@4681c175 
[2017-09-06 19:05:05,609 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@4681c175 
[2017-09-06 19:05:05,609 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@4681c175 
[2017-09-06 19:05:05,609 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@6fa51cd4 
[2017-09-06 19:05:05,609 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration calendar -> org.hibernate.type.CalendarType@cecf639 
[2017-09-06 19:05:05,609 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@cecf639 
[2017-09-06 19:05:05,609 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@cecf639 
[2017-09-06 19:05:05,610 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7ce69770 
[2017-09-06 19:05:05,610 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration locale -> org.hibernate.type.LocaleType@6c284af 
[2017-09-06 19:05:05,610 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@6c284af 
[2017-09-06 19:05:05,610 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration currency -> org.hibernate.type.CurrencyType@183ec003 
[2017-09-06 19:05:05,610 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@183ec003 
[2017-09-06 19:05:05,610 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration timezone -> org.hibernate.type.TimeZoneType@4d1c005e 
[2017-09-06 19:05:05,610 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@4d1c005e 
[2017-09-06 19:05:05,610 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration class -> org.hibernate.type.ClassType@496bc455 
[2017-09-06 19:05:05,610 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@496bc455 
[2017-09-06 19:05:05,610 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@4a003cbe 
[2017-09-06 19:05:05,610 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@4a003cbe 
[2017-09-06 19:05:05,610 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2b30a42c 
[2017-09-06 19:05:05,611 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration binary -> org.hibernate.type.BinaryType@792b749c 
[2017-09-06 19:05:05,611 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration byte[] -> org.hibernate.type.BinaryType@792b749c 
[2017-09-06 19:05:05,611 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration [B -> org.hibernate.type.BinaryType@792b749c 
[2017-09-06 19:05:05,611 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@302c971f 
[2017-09-06 19:05:05,611 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@302c971f 
[2017-09-06 19:05:05,611 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@302c971f 
[2017-09-06 19:05:05,611 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration image -> org.hibernate.type.ImageType@6f10d5b6 
[2017-09-06 19:05:05,611 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration characters -> org.hibernate.type.CharArrayType@7fd50002 
[2017-09-06 19:05:05,611 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration char[] -> org.hibernate.type.CharArrayType@7fd50002 
[2017-09-06 19:05:05,611 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration [C -> org.hibernate.type.CharArrayType@7fd50002 
[2017-09-06 19:05:05,611 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@45d84a20 
[2017-09-06 19:05:05,612 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@45d84a20 
[2017-09-06 19:05:05,612 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@45d84a20 
[2017-09-06 19:05:05,612 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration text -> org.hibernate.type.TextType@c430e6c 
[2017-09-06 19:05:05,612 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration ntext -> org.hibernate.type.NTextType@70cf32e3 
[2017-09-06 19:05:05,612 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration blob -> org.hibernate.type.BlobType@43f02ef2 
[2017-09-06 19:05:05,612 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@43f02ef2 
[2017-09-06 19:05:05,612 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@6f204a1a 
[2017-09-06 19:05:05,612 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration clob -> org.hibernate.type.ClobType@57bc27f5 
[2017-09-06 19:05:05,612 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@57bc27f5 
[2017-09-06 19:05:05,612 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration nclob -> org.hibernate.type.NClobType@25df00a0 
[2017-09-06 19:05:05,612 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@25df00a0 
[2017-09-06 19:05:05,612 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@5884a914 
[2017-09-06 19:05:05,613 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@79207381 
[2017-09-06 19:05:05,613 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration serializable -> org.hibernate.type.SerializableType@97e93f1 
[2017-09-06 19:05:05,613 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration object -> org.hibernate.type.ObjectType@20b2475a 
[2017-09-06 19:05:05,613 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@20b2475a 
[2017-09-06 19:05:05,613 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@52b06bef 
[2017-09-06 19:05:05,613 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@61bcbcce 
[2017-09-06 19:05:05,613 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@6af91cc8 
[2017-09-06 19:05:05,613 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@6232ffdb 
[2017-09-06 19:05:05,613 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@330c1f61 
[2017-09-06 19:05:05,613 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@37d28f02 
[2017-09-06 19:05:05,613 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@15efda6c 
[2017-09-06 19:05:05,613 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@6056232d 
[2017-09-06 19:05:05,614 - WARN - DriverManagerConnectionProviderImpl.java::76] - HHH000402: Using Hibernate built-in connection pool (not for production use!) 
[2017-09-06 19:05:05,614 - INFO - DriverManagerConnectionProviderImpl.java::149] - HHH000401: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/bookstore?createDatabaseIfNotExist=true&useSSL=false] 
[2017-09-06 19:05:05,614 - INFO - DriverManagerConnectionProviderImpl.java::155] - HHH000046: Connection properties: {user=neelakanta, password=Welcome@123, autocommit=true} 
[2017-09-06 19:05:05,614 - INFO - DriverManagerConnectionProviderImpl.java::163] - HHH000006: Autocommit mode: true 
[2017-09-06 19:05:05,614 - INFO - DriverManagerConnectionProviderImpl.java::85] - HHH000115: Hibernate connection pool size: 20 (min=1) 
[2017-09-06 19:05:05,614 - DEBUG - DelegatingBasicLogger.java::384] - Initializing Connection pool with 1 Connections 
[2017-09-06 19:05:05,617 - DEBUG - JdbcEnvironmentInitiator.java::72] - Database ->
       name : MySQL
    version : 5.5.55-0ubuntu0.14.04.1
      major : 5
      minor : 5 
[2017-09-06 19:05:05,617 - DEBUG - JdbcEnvironmentInitiator.java::83] - Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-6.0.5 ( Revision: 6e477e32dff18fb4dc102e53f5a68037a9f8762e )
      major : 6
      minor : 0 
[2017-09-06 19:05:05,617 - DEBUG - DelegatingBasicLogger.java::389] - JDBC version : 4.1 
[2017-09-06 19:05:05,617 - INFO - Dialect.java::154] - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect 
[2017-09-06 19:05:05,618 - DEBUG - StandardRefCursorSupport.java::170] - Unexpected error trying to gauge level of JDBC REF_CURSOR support : null 
[2017-09-06 19:05:05,619 - DEBUG - IdentifierHelperBuilder.java::116] - JDBC driver metadata reported database stores quoted identifiers in more than one case 
[2017-09-06 19:05:05,620 - DEBUG - IdentifierHelperBuilder.java::182] - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers 
[2017-09-06 19:05:05,621 - DEBUG - DefaultIdentifierGeneratorFactory.java::78] - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator] 
[2017-09-06 19:05:05,621 - DEBUG - DefaultIdentifierGeneratorFactory.java::78] - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator] 
[2017-09-06 19:05:05,621 - DEBUG - DefaultIdentifierGeneratorFactory.java::78] - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator] 
[2017-09-06 19:05:05,621 - DEBUG - DefaultIdentifierGeneratorFactory.java::78] - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator] 
[2017-09-06 19:05:05,622 - DEBUG - DefaultIdentifierGeneratorFactory.java::78] - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned] 
[2017-09-06 19:05:05,622 - DEBUG - DefaultIdentifierGeneratorFactory.java::78] - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator] 
[2017-09-06 19:05:05,622 - DEBUG - DefaultIdentifierGeneratorFactory.java::78] - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator] 
[2017-09-06 19:05:05,622 - DEBUG - DefaultIdentifierGeneratorFactory.java::78] - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator] 
[2017-09-06 19:05:05,622 - DEBUG - DefaultIdentifierGeneratorFactory.java::78] - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator] 
[2017-09-06 19:05:05,622 - DEBUG - DefaultIdentifierGeneratorFactory.java::78] - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator] 
[2017-09-06 19:05:05,622 - DEBUG - DefaultIdentifierGeneratorFactory.java::78] - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator] 
[2017-09-06 19:05:05,622 - DEBUG - DefaultIdentifierGeneratorFactory.java::78] - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator] 
[2017-09-06 19:05:05,622 - DEBUG - DefaultIdentifierGeneratorFactory.java::78] - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator] 
[2017-09-06 19:05:05,622 - DEBUG - DefaultIdentifierGeneratorFactory.java::78] - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator] 
[2017-09-06 19:05:05,623 - DEBUG - Namespace.java::47] - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}] 
[2017-09-06 19:05:05,623 - DEBUG - ModelBinder.java::230] - Mapping class: com.book.store.entity.Book -> Book 
[2017-09-06 19:05:05,623 - WARN - ModelBinder.java::2441] - HHH90000003: Use of DOM4J entity-mode is considered deprecated 
[2017-09-06 19:05:05,623 - DEBUG - ModelBinder.java::2538] - Mapped property: bookId -> [Book_id] 
[2017-09-06 19:05:05,623 - WARN - ModelBinder.java::2441] - HHH90000003: Use of DOM4J entity-mode is considered deprecated 
[2017-09-06 19:05:05,623 - DEBUG - ModelBinder.java::2538] - Mapped property: bookName -> [Book_name] 
[2017-09-06 19:05:05,624 - WARN - ModelBinder.java::2441] - HHH90000003: Use of DOM4J entity-mode is considered deprecated 
[2017-09-06 19:05:05,624 - DEBUG - ModelBinder.java::2538] - Mapped property: authorName -> [Author_name] 
[2017-09-06 19:05:05,624 - WARN - ModelBinder.java::2441] - HHH90000003: Use of DOM4J entity-mode is considered deprecated 
[2017-09-06 19:05:05,624 - DEBUG - ModelBinder.java::2538] - Mapped property: publisherName -> [Publisher] 
[2017-09-06 19:05:05,624 - WARN - ModelBinder.java::2441] - HHH90000003: Use of DOM4J entity-mode is considered deprecated 
[2017-09-06 19:05:05,624 - DEBUG - ModelBinder.java::2538] - Mapped property: categoryName -> [Category] 
[2017-09-06 19:05:05,624 - WARN - ModelBinder.java::2441] - HHH90000003: Use of DOM4J entity-mode is considered deprecated 
[2017-09-06 19:05:05,624 - DEBUG - ModelBinder.java::2538] - Mapped property: price -> [price] 
[2017-09-06 19:05:05,624 - DEBUG - ModelBinder.java::230] - Mapping class: com.book.store.entity.Purchase -> Purchase 
[2017-09-06 19:05:05,625 - WARN - ModelBinder.java::2441] - HHH90000003: Use of DOM4J entity-mode is considered deprecated 
[2017-09-06 19:05:05,625 - DEBUG - ModelBinder.java::2538] - Mapped property: purchaseNumber -> [Purchase_no] 
[2017-09-06 19:05:05,625 - WARN - ModelBinder.java::2441] - HHH90000003: Use of DOM4J entity-mode is considered deprecated 
[2017-09-06 19:05:05,625 - DEBUG - ModelBinder.java::2538] - Mapped property: bookId -> [Book_id] 
[2017-09-06 19:05:05,625 - WARN - ModelBinder.java::2441] - HHH90000003: Use of DOM4J entity-mode is considered deprecated 
[2017-09-06 19:05:05,625 - DEBUG - ModelBinder.java::2538] - Mapped property: customerName -> [Customer_name] 
[2017-09-06 19:05:05,625 - WARN - ModelBinder.java::2441] - HHH90000003: Use of DOM4J entity-mode is considered deprecated 
[2017-09-06 19:05:05,625 - DEBUG - ModelBinder.java::2538] - Mapped property: customerMobileNumber -> [Customer_mobileno] 
[2017-09-06 19:05:05,625 - WARN - ModelBinder.java::2441] - HHH90000003: Use of DOM4J entity-mode is considered deprecated 
[2017-09-06 19:05:05,626 - DEBUG - ModelBinder.java::2538] - Mapped property: purchaseDate -> [Purchase_date] 
[2017-09-06 19:05:05,626 - WARN - ModelBinder.java::2441] - HHH90000003: Use of DOM4J entity-mode is considered deprecated 
[2017-09-06 19:05:05,626 - DEBUG - ModelBinder.java::2538] - Mapped property: amount -> [Amount] 
[2017-09-06 19:05:05,626 - DEBUG - SessionFactoryImpl.java::210] - Building session factory 
[2017-09-06 19:05:05,627 - DEBUG - Settings.java::69] - SessionFactory name : null 
[2017-09-06 19:05:05,627 - DEBUG - Settings.java::70] - Automatic flush during beforeCompletion(): disabled 
[2017-09-06 19:05:05,627 - DEBUG - Settings.java::71] - Automatic session close at end of transaction: disabled 
[2017-09-06 19:05:05,627 - DEBUG - Settings.java::73] - Statistics: disabled 
[2017-09-06 19:05:05,627 - DEBUG - Settings.java::75] - Deleted entity synthetic identifier rollback: disabled 
[2017-09-06 19:05:05,627 - DEBUG - Settings.java::76] - Default entity-mode: pojo 
[2017-09-06 19:05:05,627 - DEBUG - Settings.java::77] - Check Nullability in Core (should be disabled when Bean Validation is on): enabled 
[2017-09-06 19:05:05,627 - DEBUG - Settings.java::78] - Allow initialization of lazy state outside session : disabled 
[2017-09-06 19:05:05,627 - DEBUG - Settings.java::80] - Using BatchFetchStyle : LEGACY 
[2017-09-06 19:05:05,627 - DEBUG - Settings.java::81] - Default batch fetch size: -1 
[2017-09-06 19:05:05,627 - DEBUG - Settings.java::82] - Maximum outer join fetch depth: 2 
[2017-09-06 19:05:05,627 - DEBUG - Settings.java::83] - Default null ordering: NONE 
[2017-09-06 19:05:05,628 - DEBUG - Settings.java::84] - Order SQL updates by primary key: disabled 
[2017-09-06 19:05:05,628 - DEBUG - Settings.java::85] - Order SQL inserts for batching: disabled 
[2017-09-06 19:05:05,628 - DEBUG - Settings.java::87] - multi-tenancy strategy : NONE 
[2017-09-06 19:05:05,628 - DEBUG - Settings.java::89] - JTA Track by Thread: enabled 
[2017-09-06 19:05:05,628 - DEBUG - Settings.java::91] - Query language substitutions: {} 
[2017-09-06 19:05:05,628 - DEBUG - Settings.java::92] - JPA query language strict compliance: disabled 
[2017-09-06 19:05:05,628 - DEBUG - Settings.java::93] - Named query checking : enabled 
[2017-09-06 19:05:05,628 - DEBUG - Settings.java::95] - Second-level cache: enabled 
[2017-09-06 19:05:05,628 - DEBUG - Settings.java::96] - Second-level query cache: disabled 
[2017-09-06 19:05:05,628 - DEBUG - Settings.java::97] - Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@74a6a609 
[2017-09-06 19:05:05,628 - DEBUG - Settings.java::98] - Second-level cache region prefix: null 
[2017-09-06 19:05:05,628 - DEBUG - Settings.java::99] - Optimize second-level cache for minimal puts: disabled 
[2017-09-06 19:05:05,628 - DEBUG - Settings.java::100] - Structured second-level cache entries: disabled 
[2017-09-06 19:05:05,629 - DEBUG - Settings.java::101] - Second-level cache direct-reference entries: disabled 
[2017-09-06 19:05:05,629 - DEBUG - Settings.java::102] - Automatic eviction of collection cache: disabled 
[2017-09-06 19:05:05,629 - DEBUG - Settings.java::104] - JDBC batch size: 15 
[2017-09-06 19:05:05,629 - DEBUG - Settings.java::105] - JDBC batch updates for versioned data: enabled 
[2017-09-06 19:05:05,629 - DEBUG - Settings.java::106] - Scrollable result sets: enabled 
[2017-09-06 19:05:05,629 - DEBUG - Settings.java::107] - Wrap result sets: disabled 
[2017-09-06 19:05:05,629 - DEBUG - Settings.java::108] - JDBC3 getGeneratedKeys(): enabled 
[2017-09-06 19:05:05,629 - DEBUG - Settings.java::109] - JDBC result set fetch size: null 
[2017-09-06 19:05:05,629 - DEBUG - Settings.java::110] - Connection release mode: ON_CLOSE 
[2017-09-06 19:05:05,629 - DEBUG - Settings.java::111] - Generate SQL with comments: disabled 
[2017-09-06 19:05:05,630 - DEBUG - SessionFactoryImpl.java::255] - Session factory constructed with filter configurations : {} 
[2017-09-06 19:05:05,630 - DEBUG - SessionFactoryImpl.java::256] - Instantiating session factory with properties: {hibernate.connection.password=Welcome@123, java.runtime.name=Java(TM) SE Runtime Environment, java.vm.version=25.45-b02, sun.boot.library.path=/usr/java/jdk1.8.0_45/jre/lib/amd64, hibernate.connection.username=neelakanta, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@5762658b, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=:, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, sun.os.patch.level=unknown, user.country=US, sun.java.launcher=SUN_STANDARD, java.vm.specification.name=Java Virtual Machine Specification, user.dir=/home/neelakanta/Documents/Eclipse Documents/Mars Documents/BookStore, java.runtime.version=1.8.0_45-b14, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, basedir=/home/neelakanta/Documents/Eclipse Documents/Mars Documents/BookStore, os.arch=amd64, java.endorsed.dirs=/usr/java/jdk1.8.0_45/jre/lib/endorsed, surefire.real.class.path=/home/neelakanta/Documents/Eclipse Documents/Mars Documents/BookStore/target/surefire/surefirebooter5232880889481838645.jar, hibernate.connection.autocommit=true, java.io.tmpdir=/tmp, line.separator=
, java.vm.specification.vendor=Oracle Corporation, os.name=Linux, sun.jnu.encoding=UTF-8, java.library.path=/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib, surefire.test.class.path=/home/neelakanta/Documents/Eclipse Documents/Mars Documents/BookStore/target/test-classes:/home/neelakanta/Documents/Eclipse Documents/Mars Documents/BookStore/target/classes:/home/neelakanta/.m2/repository/junit/junit/4.12/junit-4.12.jar:/home/neelakanta/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/neelakanta/.m2/repository/org/hibernate/hibernate-core/5.0.1.Final/hibernate-core-5.0.1.Final.jar:/home/neelakanta/.m2/repository/org/jboss/logging/jboss-logging/3.3.0.Final/jboss-logging-3.3.0.Final.jar:/home/neelakanta/.m2/repository/org/apache/geronimo/specs/geronimo-jta_1.1_spec/1.1.1/geronimo-jta_1.1_spec-1.1.1.jar:/home/neelakanta/.m2/repository/org/hibernate/javax/persistence/hibernate-jpa-2.1-api/1.0.0.Final/hibernate-jpa-2.1-api-1.0.0.Final.jar:/home/neelakanta/.m2/repository/org/javassist/javassist/3.18.1-GA/javassist-3.18.1-GA.jar:/home/neelakanta/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/home/neelakanta/.m2/repository/org/jboss/jandex/1.2.2.Final/jandex-1.2.2.Final.jar:/home/neelakanta/.m2/repository/dom4j/dom4j/1.6.1/dom4j-1.6.1.jar:/home/neelakanta/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.0.0.Final/hibernate-commons-annotations-5.0.0.Final.jar:/home/neelakanta/.m2/repository/org/hibernate/hibernate-validator/5.0.1.Final/hibernate-validator-5.0.1.Final.jar:/home/neelakanta/.m2/repository/javax/validation/validation-api/1.1.0.Final/validation-api-1.1.0.Final.jar:/home/neelakanta/.m2/repository/com/fasterxml/classmate/0.8.0/classmate-0.8.0.jar:/home/neelakanta/.m2/repository/org/hibernate/hibernate-annotations/3.3.0.ga/hibernate-annotations-3.3.0.ga.jar:/home/neelakanta/.m2/repository/org/hibernate/hibernate/3.2.1.ga/hibernate-3.2.1.ga.jar:/home/neelakanta/.m2/repository/net/sf/ehcache/ehcache/1.2.3/ehcache-1.2.3.jar:/home/neelakanta/.m2/repository/commons-logging/commons-logging/1.0.4/commons-logging-1.0.4.jar:/home/neelakanta/.m2/repository/asm/asm-attrs/1.5.3/asm-attrs-1.5.3.jar:/home/neelakanta/.m2/repository/cglib/cglib/2.1_3/cglib-2.1_3.jar:/home/neelakanta/.m2/repository/asm/asm/1.5.3/asm-1.5.3.jar:/home/neelakanta/.m2/repository/commons-collections/commons-collections/2.1.1/commons-collections-2.1.1.jar:/home/neelakanta/.m2/repository/javax/persistence/persistence-api/1.0/persistence-api-1.0.jar:/home/neelakanta/.m2/repository/org/hibernate/hibernate-commons-annotations/3.3.0.ga/hibernate-commons-annotations-3.3.0.ga.jar:/home/neelakanta/.m2/repository/javax/transaction/jta/1.1/jta-1.1.jar:/home/neelakanta/.m2/repository/mysql/mysql-connector-java/6.0.5/mysql-connector-java-6.0.5.jar:/home/neelakanta/.m2/repository/c3p0/c3p0/0.9.0.4/c3p0-0.9.0.4.jar:/home/neelakanta/.m2/repository/org/hibernate/hibernate-entitymanager/4.3.1.Final/hibernate-entitymanager-4.3.1.Final.jar:/home/neelakanta/.m2/repository/org/jboss/logging/jboss-logging-annotations/1.2.0.Beta1/jboss-logging-annotations-1.2.0.Beta1.jar:/home/neelakanta/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.0.0.Final/jboss-transaction-api_1.2_spec-1.0.0.Final.jar:/home/neelakanta/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar:, java.class.version=52.0, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=3.13.0-119-generic, user.home=/home/neelakanta, user.timezone=Asia/Kolkata, java.awt.printerjob=sun.print.PSPrinterJob, file.encoding=UTF-8, java.specification.version=1.8, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, user.name=neelakanta, java.class.path=/home/neelakanta/Documents/Eclipse Documents/Mars Documents/BookStore/target/test-classes:/home/neelakanta/Documents/Eclipse Documents/Mars Documents/BookStore/target/classes:/home/neelakanta/.m2/repository/junit/junit/4.12/junit-4.12.jar:/home/neelakanta/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/neelakanta/.m2/repository/org/hibernate/hibernate-core/5.0.1.Final/hibernate-core-5.0.1.Final.jar:/home/neelakanta/.m2/repository/org/jboss/logging/jboss-logging/3.3.0.Final/jboss-logging-3.3.0.Final.jar:/home/neelakanta/.m2/repository/org/apache/geronimo/specs/geronimo-jta_1.1_spec/1.1.1/geronimo-jta_1.1_spec-1.1.1.jar:/home/neelakanta/.m2/repository/org/hibernate/javax/persistence/hibernate-jpa-2.1-api/1.0.0.Final/hibernate-jpa-2.1-api-1.0.0.Final.jar:/home/neelakanta/.m2/repository/org/javassist/javassist/3.18.1-GA/javassist-3.18.1-GA.jar:/home/neelakanta/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/home/neelakanta/.m2/repository/org/jboss/jandex/1.2.2.Final/jandex-1.2.2.Final.jar:/home/neelakanta/.m2/repository/dom4j/dom4j/1.6.1/dom4j-1.6.1.jar:/home/neelakanta/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.0.0.Final/hibernate-commons-annotations-5.0.0.Final.jar:/home/neelakanta/.m2/repository/org/hibernate/hibernate-validator/5.0.1.Final/hibernate-validator-5.0.1.Final.jar:/home/neelakanta/.m2/repository/javax/validation/validation-api/1.1.0.Final/validation-api-1.1.0.Final.jar:/home/neelakanta/.m2/repository/com/fasterxml/classmate/0.8.0/classmate-0.8.0.jar:/home/neelakanta/.m2/repository/org/hibernate/hibernate-annotations/3.3.0.ga/hibernate-annotations-3.3.0.ga.jar:/home/neelakanta/.m2/repository/org/hibernate/hibernate/3.2.1.ga/hibernate-3.2.1.ga.jar:/home/neelakanta/.m2/repository/net/sf/ehcache/ehcache/1.2.3/ehcache-1.2.3.jar:/home/neelakanta/.m2/repository/commons-logging/commons-logging/1.0.4/commons-logging-1.0.4.jar:/home/neelakanta/.m2/repository/asm/asm-attrs/1.5.3/asm-attrs-1.5.3.jar:/home/neelakanta/.m2/repository/cglib/cglib/2.1_3/cglib-2.1_3.jar:/home/neelakanta/.m2/repository/asm/asm/1.5.3/asm-1.5.3.jar:/home/neelakanta/.m2/repository/commons-collections/commons-collections/2.1.1/commons-collections-2.1.1.jar:/home/neelakanta/.m2/repository/javax/persistence/persistence-api/1.0/persistence-api-1.0.jar:/home/neelakanta/.m2/repository/org/hibernate/hibernate-commons-annotations/3.3.0.ga/hibernate-commons-annotations-3.3.0.ga.jar:/home/neelakanta/.m2/repository/javax/transaction/jta/1.1/jta-1.1.jar:/home/neelakanta/.m2/repository/mysql/mysql-connector-java/6.0.5/mysql-connector-java-6.0.5.jar:/home/neelakanta/.m2/repository/c3p0/c3p0/0.9.0.4/c3p0-0.9.0.4.jar:/home/neelakanta/.m2/repository/org/hibernate/hibernate-entitymanager/4.3.1.Final/hibernate-entitymanager-4.3.1.Final.jar:/home/neelakanta/.m2/repository/org/jboss/logging/jboss-logging-annotations/1.2.0.Beta1/jboss-logging-annotations-1.2.0.Beta1.jar:/home/neelakanta/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.0.0.Final/jboss-transaction-api_1.2_spec-1.0.0.Final.jar:/home/neelakanta/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar:, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=false, java.vm.specification.version=1.8, sun.arch.data.model=64, sun.java.command=/home/neelakanta/Documents/Eclipse Documents/Mars Documents/BookStore/target/surefire/surefirebooter5232880889481838645.jar /home/neelakanta/Documents/Eclipse Documents/Mars Documents/BookStore/target/surefire/surefire7552053918813552354tmp /home/neelakanta/Documents/Eclipse Documents/Mars Documents/BookStore/target/surefire/surefire_03604179774586556801tmp, java.home=/usr/java/jdk1.8.0_45/jre, hibernate.connection.url=jdbc:mysql://localhost:3306/bookstore?createDatabaseIfNotExist=true&useSSL=false, hibernate.dialect=org.hibernate.dialect.MySQLDialect, user.language=en, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.X11.XToolkit, java.vm.info=mixed mode, java.version=1.8.0_45, java.ext.dirs=/usr/java/jdk1.8.0_45/jre/lib/ext:/usr/java/packages/lib/ext, sun.boot.class.path=/usr/java/jdk1.8.0_45/jre/lib/resources.jar:/usr/java/jdk1.8.0_45/jre/lib/rt.jar:/usr/java/jdk1.8.0_45/jre/lib/sunrsasign.jar:/usr/java/jdk1.8.0_45/jre/lib/jsse.jar:/usr/java/jdk1.8.0_45/jre/lib/jce.jar:/usr/java/jdk1.8.0_45/jre/lib/charsets.jar:/usr/java/jdk1.8.0_45/jre/lib/jfr.jar:/usr/java/jdk1.8.0_45/jre/classes, java.vendor=Oracle Corporation, localRepository=/home/neelakanta/.m2/repository, file.separator=/, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, sun.desktop=gnome, sun.cpu.isalist=} 
[2017-09-06 19:05:05,630 - DEBUG - DefaultTraversableResolver.java::106] - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver 
[2017-09-06 19:05:05,630 - DEBUG - DefaultTraversableResolver.java::117] - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. 
[2017-09-06 19:05:05,631 - DEBUG - ValidationXmlParser.java::88] - Trying to load META-INF/validation.xml for XML based Validator configuration. 
[2017-09-06 19:05:05,631 - DEBUG - ValidationXmlParser.java::95] - No META-INF/validation.xml found. Using annotation based configuration only. 
[2017-09-06 19:05:05,632 - DEBUG - ClassLoaderAccessImpl.java::55] - Not known whether passed class name [com.book.store.entity.Book] is safe 
[2017-09-06 19:05:05,632 - DEBUG - ClassLoaderAccessImpl.java::57] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.book.store.entity.Book 
[2017-09-06 19:05:05,634 - DEBUG - ClassLoaderAccessImpl.java::55] - Not known whether passed class name [com.book.store.entity.Purchase] is safe 
[2017-09-06 19:05:05,634 - DEBUG - ClassLoaderAccessImpl.java::57] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.book.store.entity.Purchase 
[2017-09-06 19:05:05,636 - DEBUG - JaccIntegrator.java::80] - Skipping JACC integration as it was not enabled 
[2017-09-06 19:05:05,636 - DEBUG - ClassLoaderAccessImpl.java::55] - Not known whether passed class name [com.book.store.entity.Book] is safe 
[2017-09-06 19:05:05,636 - DEBUG - ClassLoaderAccessImpl.java::57] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.book.store.entity.Book 
[2017-09-06 19:05:05,637 - DEBUG - ClassLoaderAccessImpl.java::55] - Not known whether passed class name [com.book.store.entity.Book] is safe 
[2017-09-06 19:05:05,637 - DEBUG - ClassLoaderAccessImpl.java::57] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.book.store.entity.Book 
[2017-09-06 19:05:05,638 - DEBUG - ClassLoaderAccessImpl.java::55] - Not known whether passed class name [com.book.store.entity.Purchase] is safe 
[2017-09-06 19:05:05,638 - DEBUG - ClassLoaderAccessImpl.java::57] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.book.store.entity.Purchase 
[2017-09-06 19:05:05,638 - DEBUG - ClassLoaderAccessImpl.java::55] - Not known whether passed class name [com.book.store.entity.Purchase] is safe 
[2017-09-06 19:05:05,638 - DEBUG - ClassLoaderAccessImpl.java::57] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.book.store.entity.Purchase 
[2017-09-06 19:05:05,639 - DEBUG - AbstractEntityPersister.java::3418] - Static SQL for entity: com.book.store.entity.Book 
[2017-09-06 19:05:05,639 - DEBUG - AbstractEntityPersister.java::3423] -  Version select: select Book_id from Book where Book_id =? 
[2017-09-06 19:05:05,639 - DEBUG - AbstractEntityPersister.java::3426] -  Snapshot select: select book_.Book_id, book_.Book_name as Book_nam2_0_, book_.Author_name as Author_n3_0_, book_.Publisher as Publishe4_0_, book_.Category as Category5_0_, book_.price as price6_0_ from Book book_ where book_.Book_id=? 
[2017-09-06 19:05:05,640 - DEBUG - DelegatingBasicLogger.java::394] -  Insert 0: insert into Book (Book_name, Author_name, Publisher, Category, price, Book_id) values (?, ?, ?, ?, ?, ?) 
[2017-09-06 19:05:05,640 - DEBUG - DelegatingBasicLogger.java::394] -  Update 0: update Book set Book_name=?, Author_name=?, Publisher=?, Category=?, price=? where Book_id=? 
[2017-09-06 19:05:05,640 - DEBUG - DelegatingBasicLogger.java::394] -  Delete 0: delete from Book where Book_id=? 
[2017-09-06 19:05:05,640 - DEBUG - QuerySpacesImpl.java::174] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@692dba54] 
[2017-09-06 19:05:05,640 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : bookName 
[2017-09-06 19:05:05,640 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : authorName 
[2017-09-06 19:05:05,640 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : publisherName 
[2017-09-06 19:05:05,640 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : categoryName 
[2017-09-06 19:05:05,640 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : price 
[2017-09-06 19:05:05,641 - DEBUG - FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java::76] - Building LoadPlan... 
[2017-09-06 19:05:05,641 - DEBUG - LoadQueryJoinAndFetchProcessor.java::95] - processing queryspace <gen:0> 
[2017-09-06 19:05:05,641 - DEBUG - LoadPlanTreePrinter.java::55] - LoadPlan(entity=com.book.store.entity.Book)
    - Returns
       - EntityReturnImpl(entity=com.book.store.entity.Book, querySpaceUid=<gen:0>, path=com.book.store.entity.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.book.store.entity.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {Book_id1_0_0_}
 
[2017-09-06 19:05:05,641 - DEBUG - EntityLoader.java::128] - Static select for entity com.book.store.entity.Book [NONE]: select book0_.Book_id as Book_id1_0_0_, book0_.Book_name as Book_nam2_0_0_, book0_.Author_name as Author_n3_0_0_, book0_.Publisher as Publishe4_0_0_, book0_.Category as Category5_0_0_, book0_.price as price6_0_0_ from Book book0_ where book0_.Book_id=? 
[2017-09-06 19:05:05,641 - DEBUG - QuerySpacesImpl.java::174] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5f14761c] 
[2017-09-06 19:05:05,641 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : bookName 
[2017-09-06 19:05:05,641 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : authorName 
[2017-09-06 19:05:05,641 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : publisherName 
[2017-09-06 19:05:05,642 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : categoryName 
[2017-09-06 19:05:05,642 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : price 
[2017-09-06 19:05:05,642 - DEBUG - FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java::76] - Building LoadPlan... 
[2017-09-06 19:05:05,642 - DEBUG - LoadQueryJoinAndFetchProcessor.java::95] - processing queryspace <gen:0> 
[2017-09-06 19:05:05,642 - DEBUG - LoadPlanTreePrinter.java::55] - LoadPlan(entity=com.book.store.entity.Book)
    - Returns
       - EntityReturnImpl(entity=com.book.store.entity.Book, querySpaceUid=<gen:0>, path=com.book.store.entity.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.book.store.entity.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {Book_id1_0_0_}
 
[2017-09-06 19:05:05,642 - DEBUG - EntityLoader.java::128] - Static select for entity com.book.store.entity.Book [READ]: select book0_.Book_id as Book_id1_0_0_, book0_.Book_name as Book_nam2_0_0_, book0_.Author_name as Author_n3_0_0_, book0_.Publisher as Publishe4_0_0_, book0_.Category as Category5_0_0_, book0_.price as price6_0_0_ from Book book0_ where book0_.Book_id=? 
[2017-09-06 19:05:05,642 - DEBUG - QuerySpacesImpl.java::174] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@37854b34] 
[2017-09-06 19:05:05,642 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : bookName 
[2017-09-06 19:05:05,643 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : authorName 
[2017-09-06 19:05:05,643 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : publisherName 
[2017-09-06 19:05:05,643 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : categoryName 
[2017-09-06 19:05:05,643 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : price 
[2017-09-06 19:05:05,643 - DEBUG - FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java::76] - Building LoadPlan... 
[2017-09-06 19:05:05,643 - DEBUG - LoadQueryJoinAndFetchProcessor.java::95] - processing queryspace <gen:0> 
[2017-09-06 19:05:05,643 - DEBUG - LoadPlanTreePrinter.java::55] - LoadPlan(entity=com.book.store.entity.Book)
    - Returns
       - EntityReturnImpl(entity=com.book.store.entity.Book, querySpaceUid=<gen:0>, path=com.book.store.entity.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.book.store.entity.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {Book_id1_0_0_}
 
[2017-09-06 19:05:05,643 - DEBUG - EntityLoader.java::128] - Static select for entity com.book.store.entity.Book [UPGRADE]: select book0_.Book_id as Book_id1_0_0_, book0_.Book_name as Book_nam2_0_0_, book0_.Author_name as Author_n3_0_0_, book0_.Publisher as Publishe4_0_0_, book0_.Category as Category5_0_0_, book0_.price as price6_0_0_ from Book book0_ where book0_.Book_id=? for update 
[2017-09-06 19:05:05,644 - DEBUG - QuerySpacesImpl.java::174] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@34332b8d] 
[2017-09-06 19:05:05,644 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : bookName 
[2017-09-06 19:05:05,644 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : authorName 
[2017-09-06 19:05:05,644 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : publisherName 
[2017-09-06 19:05:05,644 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : categoryName 
[2017-09-06 19:05:05,644 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : price 
[2017-09-06 19:05:05,644 - DEBUG - FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java::76] - Building LoadPlan... 
[2017-09-06 19:05:05,644 - DEBUG - LoadQueryJoinAndFetchProcessor.java::95] - processing queryspace <gen:0> 
[2017-09-06 19:05:05,645 - DEBUG - LoadPlanTreePrinter.java::55] - LoadPlan(entity=com.book.store.entity.Book)
    - Returns
       - EntityReturnImpl(entity=com.book.store.entity.Book, querySpaceUid=<gen:0>, path=com.book.store.entity.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.book.store.entity.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {Book_id1_0_0_}
 
[2017-09-06 19:05:05,645 - DEBUG - EntityLoader.java::128] - Static select for entity com.book.store.entity.Book [UPGRADE_NOWAIT]: select book0_.Book_id as Book_id1_0_0_, book0_.Book_name as Book_nam2_0_0_, book0_.Author_name as Author_n3_0_0_, book0_.Publisher as Publishe4_0_0_, book0_.Category as Category5_0_0_, book0_.price as price6_0_0_ from Book book0_ where book0_.Book_id=? for update 
[2017-09-06 19:05:05,645 - DEBUG - QuerySpacesImpl.java::174] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6f8aba08] 
[2017-09-06 19:05:05,645 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : bookName 
[2017-09-06 19:05:05,645 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : authorName 
[2017-09-06 19:05:05,645 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : publisherName 
[2017-09-06 19:05:05,645 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : categoryName 
[2017-09-06 19:05:05,645 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : price 
[2017-09-06 19:05:05,645 - DEBUG - FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java::76] - Building LoadPlan... 
[2017-09-06 19:05:05,645 - DEBUG - LoadQueryJoinAndFetchProcessor.java::95] - processing queryspace <gen:0> 
[2017-09-06 19:05:05,646 - DEBUG - LoadPlanTreePrinter.java::55] - LoadPlan(entity=com.book.store.entity.Book)
    - Returns
       - EntityReturnImpl(entity=com.book.store.entity.Book, querySpaceUid=<gen:0>, path=com.book.store.entity.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.book.store.entity.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {Book_id1_0_0_}
 
[2017-09-06 19:05:05,646 - DEBUG - EntityLoader.java::128] - Static select for entity com.book.store.entity.Book [UPGRADE_SKIPLOCKED]: select book0_.Book_id as Book_id1_0_0_, book0_.Book_name as Book_nam2_0_0_, book0_.Author_name as Author_n3_0_0_, book0_.Publisher as Publishe4_0_0_, book0_.Category as Category5_0_0_, book0_.price as price6_0_0_ from Book book0_ where book0_.Book_id=? for update 
[2017-09-06 19:05:05,646 - DEBUG - QuerySpacesImpl.java::174] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@52b3bf03] 
[2017-09-06 19:05:05,646 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : bookName 
[2017-09-06 19:05:05,646 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : authorName 
[2017-09-06 19:05:05,646 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : publisherName 
[2017-09-06 19:05:05,646 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : categoryName 
[2017-09-06 19:05:05,646 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : price 
[2017-09-06 19:05:05,646 - DEBUG - FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java::76] - Building LoadPlan... 
[2017-09-06 19:05:05,647 - DEBUG - LoadQueryJoinAndFetchProcessor.java::95] - processing queryspace <gen:0> 
[2017-09-06 19:05:05,647 - DEBUG - LoadPlanTreePrinter.java::55] - LoadPlan(entity=com.book.store.entity.Book)
    - Returns
       - EntityReturnImpl(entity=com.book.store.entity.Book, querySpaceUid=<gen:0>, path=com.book.store.entity.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.book.store.entity.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {Book_id1_0_0_}
 
[2017-09-06 19:05:05,647 - DEBUG - EntityLoader.java::128] - Static select for entity com.book.store.entity.Book [FORCE]: select book0_.Book_id as Book_id1_0_0_, book0_.Book_name as Book_nam2_0_0_, book0_.Author_name as Author_n3_0_0_, book0_.Publisher as Publishe4_0_0_, book0_.Category as Category5_0_0_, book0_.price as price6_0_0_ from Book book0_ where book0_.Book_id=? for update 
[2017-09-06 19:05:05,647 - DEBUG - QuerySpacesImpl.java::174] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@462abec3] 
[2017-09-06 19:05:05,647 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : bookName 
[2017-09-06 19:05:05,647 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : authorName 
[2017-09-06 19:05:05,647 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : publisherName 
[2017-09-06 19:05:05,648 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : categoryName 
[2017-09-06 19:05:05,648 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : price 
[2017-09-06 19:05:05,648 - DEBUG - FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java::76] - Building LoadPlan... 
[2017-09-06 19:05:05,648 - DEBUG - LoadQueryJoinAndFetchProcessor.java::95] - processing queryspace <gen:0> 
[2017-09-06 19:05:05,648 - DEBUG - LoadPlanTreePrinter.java::55] - LoadPlan(entity=com.book.store.entity.Book)
    - Returns
       - EntityReturnImpl(entity=com.book.store.entity.Book, querySpaceUid=<gen:0>, path=com.book.store.entity.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.book.store.entity.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {Book_id1_0_0_}
 
[2017-09-06 19:05:05,648 - DEBUG - EntityLoader.java::128] - Static select for entity com.book.store.entity.Book [PESSIMISTIC_READ]: select book0_.Book_id as Book_id1_0_0_, book0_.Book_name as Book_nam2_0_0_, book0_.Author_name as Author_n3_0_0_, book0_.Publisher as Publishe4_0_0_, book0_.Category as Category5_0_0_, book0_.price as price6_0_0_ from Book book0_ where book0_.Book_id=? lock in share mode 
[2017-09-06 19:05:05,648 - DEBUG - QuerySpacesImpl.java::174] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7a4d582c] 
[2017-09-06 19:05:05,648 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : bookName 
[2017-09-06 19:05:05,648 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : authorName 
[2017-09-06 19:05:05,649 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : publisherName 
[2017-09-06 19:05:05,649 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : categoryName 
[2017-09-06 19:05:05,649 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : price 
[2017-09-06 19:05:05,649 - DEBUG - FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java::76] - Building LoadPlan... 
[2017-09-06 19:05:05,649 - DEBUG - LoadQueryJoinAndFetchProcessor.java::95] - processing queryspace <gen:0> 
[2017-09-06 19:05:05,649 - DEBUG - LoadPlanTreePrinter.java::55] - LoadPlan(entity=com.book.store.entity.Book)
    - Returns
       - EntityReturnImpl(entity=com.book.store.entity.Book, querySpaceUid=<gen:0>, path=com.book.store.entity.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.book.store.entity.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {Book_id1_0_0_}
 
[2017-09-06 19:05:05,649 - DEBUG - EntityLoader.java::128] - Static select for entity com.book.store.entity.Book [PESSIMISTIC_WRITE]: select book0_.Book_id as Book_id1_0_0_, book0_.Book_name as Book_nam2_0_0_, book0_.Author_name as Author_n3_0_0_, book0_.Publisher as Publishe4_0_0_, book0_.Category as Category5_0_0_, book0_.price as price6_0_0_ from Book book0_ where book0_.Book_id=? for update 
[2017-09-06 19:05:05,649 - DEBUG - QuerySpacesImpl.java::174] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@45e9b12d] 
[2017-09-06 19:05:05,649 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : bookName 
[2017-09-06 19:05:05,650 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : authorName 
[2017-09-06 19:05:05,650 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : publisherName 
[2017-09-06 19:05:05,650 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : categoryName 
[2017-09-06 19:05:05,650 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : price 
[2017-09-06 19:05:05,650 - DEBUG - FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java::76] - Building LoadPlan... 
[2017-09-06 19:05:05,650 - DEBUG - LoadQueryJoinAndFetchProcessor.java::95] - processing queryspace <gen:0> 
[2017-09-06 19:05:05,650 - DEBUG - LoadPlanTreePrinter.java::55] - LoadPlan(entity=com.book.store.entity.Book)
    - Returns
       - EntityReturnImpl(entity=com.book.store.entity.Book, querySpaceUid=<gen:0>, path=com.book.store.entity.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.book.store.entity.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {Book_id1_0_0_}
 
[2017-09-06 19:05:05,650 - DEBUG - EntityLoader.java::128] - Static select for entity com.book.store.entity.Book [PESSIMISTIC_FORCE_INCREMENT]: select book0_.Book_id as Book_id1_0_0_, book0_.Book_name as Book_nam2_0_0_, book0_.Author_name as Author_n3_0_0_, book0_.Publisher as Publishe4_0_0_, book0_.Category as Category5_0_0_, book0_.price as price6_0_0_ from Book book0_ where book0_.Book_id=? for update 
[2017-09-06 19:05:05,650 - DEBUG - QuerySpacesImpl.java::174] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2d55e826] 
[2017-09-06 19:05:05,651 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : bookName 
[2017-09-06 19:05:05,651 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : authorName 
[2017-09-06 19:05:05,651 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : publisherName 
[2017-09-06 19:05:05,651 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : categoryName 
[2017-09-06 19:05:05,651 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : price 
[2017-09-06 19:05:05,651 - DEBUG - FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java::76] - Building LoadPlan... 
[2017-09-06 19:05:05,651 - DEBUG - LoadQueryJoinAndFetchProcessor.java::95] - processing queryspace <gen:0> 
[2017-09-06 19:05:05,652 - DEBUG - LoadPlanTreePrinter.java::55] - LoadPlan(entity=com.book.store.entity.Book)
    - Returns
       - EntityReturnImpl(entity=com.book.store.entity.Book, querySpaceUid=<gen:0>, path=com.book.store.entity.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.book.store.entity.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {Book_id1_0_0_}
 
[2017-09-06 19:05:05,652 - DEBUG - EntityLoader.java::128] - Static select for entity com.book.store.entity.Book [OPTIMISTIC]: select book0_.Book_id as Book_id1_0_0_, book0_.Book_name as Book_nam2_0_0_, book0_.Author_name as Author_n3_0_0_, book0_.Publisher as Publishe4_0_0_, book0_.Category as Category5_0_0_, book0_.price as price6_0_0_ from Book book0_ where book0_.Book_id=? 
[2017-09-06 19:05:05,652 - DEBUG - QuerySpacesImpl.java::174] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@45f756e6] 
[2017-09-06 19:05:05,652 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : bookName 
[2017-09-06 19:05:05,652 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : authorName 
[2017-09-06 19:05:05,652 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : publisherName 
[2017-09-06 19:05:05,652 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : categoryName 
[2017-09-06 19:05:05,652 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : price 
[2017-09-06 19:05:05,652 - DEBUG - FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java::76] - Building LoadPlan... 
[2017-09-06 19:05:05,653 - DEBUG - LoadQueryJoinAndFetchProcessor.java::95] - processing queryspace <gen:0> 
[2017-09-06 19:05:05,653 - DEBUG - LoadPlanTreePrinter.java::55] - LoadPlan(entity=com.book.store.entity.Book)
    - Returns
       - EntityReturnImpl(entity=com.book.store.entity.Book, querySpaceUid=<gen:0>, path=com.book.store.entity.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.book.store.entity.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {Book_id1_0_0_}
 
[2017-09-06 19:05:05,653 - DEBUG - EntityLoader.java::128] - Static select for entity com.book.store.entity.Book [OPTIMISTIC_FORCE_INCREMENT]: select book0_.Book_id as Book_id1_0_0_, book0_.Book_name as Book_nam2_0_0_, book0_.Author_name as Author_n3_0_0_, book0_.Publisher as Publishe4_0_0_, book0_.Category as Category5_0_0_, book0_.price as price6_0_0_ from Book book0_ where book0_.Book_id=? 
[2017-09-06 19:05:05,653 - DEBUG - CascadeEntityLoader.java::38] - Static select for action ACTION_MERGE on entity com.book.store.entity.Book: select book0_.Book_id as Book_id1_0_0_, book0_.Book_name as Book_nam2_0_0_, book0_.Author_name as Author_n3_0_0_, book0_.Publisher as Publishe4_0_0_, book0_.Category as Category5_0_0_, book0_.price as price6_0_0_ from Book book0_ where book0_.Book_id=? 
[2017-09-06 19:05:05,653 - DEBUG - CascadeEntityLoader.java::38] - Static select for action ACTION_REFRESH on entity com.book.store.entity.Book: select book0_.Book_id as Book_id1_0_0_, book0_.Book_name as Book_nam2_0_0_, book0_.Author_name as Author_n3_0_0_, book0_.Publisher as Publishe4_0_0_, book0_.Category as Category5_0_0_, book0_.price as price6_0_0_ from Book book0_ where book0_.Book_id=? 
[2017-09-06 19:05:05,653 - DEBUG - AbstractEntityPersister.java::3418] - Static SQL for entity: com.book.store.entity.Purchase 
[2017-09-06 19:05:05,654 - DEBUG - AbstractEntityPersister.java::3423] -  Version select: select Purchase_no from Purchase where Purchase_no =? 
[2017-09-06 19:05:05,654 - DEBUG - AbstractEntityPersister.java::3426] -  Snapshot select: select purchase_.Purchase_no, purchase_.Book_id as Book_id2_1_, purchase_.Customer_name as Customer3_1_, purchase_.Customer_mobileno as Customer4_1_, purchase_.Purchase_date as Purchase5_1_, purchase_.Amount as Amount6_1_ from Purchase purchase_ where purchase_.Purchase_no=? 
[2017-09-06 19:05:05,654 - DEBUG - DelegatingBasicLogger.java::394] -  Insert 0: insert into Purchase (Book_id, Customer_name, Customer_mobileno, Purchase_date, Amount, Purchase_no) values (?, ?, ?, ?, ?, ?) 
[2017-09-06 19:05:05,654 - DEBUG - DelegatingBasicLogger.java::394] -  Update 0: update Purchase set Book_id=?, Customer_name=?, Customer_mobileno=?, Purchase_date=?, Amount=? where Purchase_no=? 
[2017-09-06 19:05:05,654 - DEBUG - DelegatingBasicLogger.java::394] -  Delete 0: delete from Purchase where Purchase_no=? 
[2017-09-06 19:05:05,654 - DEBUG - AbstractEntityPersister.java::3434] -  Identity insert: insert into Purchase (Book_id, Customer_name, Customer_mobileno, Purchase_date, Amount) values (?, ?, ?, ?, ?) 
[2017-09-06 19:05:05,654 - DEBUG - QuerySpacesImpl.java::174] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3003827c] 
[2017-09-06 19:05:05,654 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : bookId 
[2017-09-06 19:05:05,654 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : customerName 
[2017-09-06 19:05:05,654 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : customerMobileNumber 
[2017-09-06 19:05:05,654 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : purchaseDate 
[2017-09-06 19:05:05,654 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : amount 
[2017-09-06 19:05:05,655 - DEBUG - FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java::76] - Building LoadPlan... 
[2017-09-06 19:05:05,655 - DEBUG - LoadQueryJoinAndFetchProcessor.java::95] - processing queryspace <gen:0> 
[2017-09-06 19:05:05,655 - DEBUG - LoadPlanTreePrinter.java::55] - LoadPlan(entity=com.book.store.entity.Purchase)
    - Returns
       - EntityReturnImpl(entity=com.book.store.entity.Purchase, querySpaceUid=<gen:0>, path=com.book.store.entity.Purchase)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.book.store.entity.Purchase)
          - SQL table alias mapping - purchase0_
          - alias suffix - 0_
          - suffixed key columns - {Purchase1_1_0_}
 
[2017-09-06 19:05:05,655 - DEBUG - EntityLoader.java::128] - Static select for entity com.book.store.entity.Purchase [NONE]: select purchase0_.Purchase_no as Purchase1_1_0_, purchase0_.Book_id as Book_id2_1_0_, purchase0_.Customer_name as Customer3_1_0_, purchase0_.Customer_mobileno as Customer4_1_0_, purchase0_.Purchase_date as Purchase5_1_0_, purchase0_.Amount as Amount6_1_0_ from Purchase purchase0_ where purchase0_.Purchase_no=? 
[2017-09-06 19:05:05,655 - DEBUG - QuerySpacesImpl.java::174] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7d247660] 
[2017-09-06 19:05:05,655 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : bookId 
[2017-09-06 19:05:05,655 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : customerName 
[2017-09-06 19:05:05,655 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : customerMobileNumber 
[2017-09-06 19:05:05,656 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : purchaseDate 
[2017-09-06 19:05:05,656 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : amount 
[2017-09-06 19:05:05,656 - DEBUG - FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java::76] - Building LoadPlan... 
[2017-09-06 19:05:05,656 - DEBUG - LoadQueryJoinAndFetchProcessor.java::95] - processing queryspace <gen:0> 
[2017-09-06 19:05:05,656 - DEBUG - LoadPlanTreePrinter.java::55] - LoadPlan(entity=com.book.store.entity.Purchase)
    - Returns
       - EntityReturnImpl(entity=com.book.store.entity.Purchase, querySpaceUid=<gen:0>, path=com.book.store.entity.Purchase)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.book.store.entity.Purchase)
          - SQL table alias mapping - purchase0_
          - alias suffix - 0_
          - suffixed key columns - {Purchase1_1_0_}
 
[2017-09-06 19:05:05,656 - DEBUG - EntityLoader.java::128] - Static select for entity com.book.store.entity.Purchase [READ]: select purchase0_.Purchase_no as Purchase1_1_0_, purchase0_.Book_id as Book_id2_1_0_, purchase0_.Customer_name as Customer3_1_0_, purchase0_.Customer_mobileno as Customer4_1_0_, purchase0_.Purchase_date as Purchase5_1_0_, purchase0_.Amount as Amount6_1_0_ from Purchase purchase0_ where purchase0_.Purchase_no=? 
[2017-09-06 19:05:05,656 - DEBUG - QuerySpacesImpl.java::174] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@49d30c6f] 
[2017-09-06 19:05:05,656 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : bookId 
[2017-09-06 19:05:05,656 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : customerName 
[2017-09-06 19:05:05,657 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : customerMobileNumber 
[2017-09-06 19:05:05,657 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : purchaseDate 
[2017-09-06 19:05:05,657 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : amount 
[2017-09-06 19:05:05,657 - DEBUG - FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java::76] - Building LoadPlan... 
[2017-09-06 19:05:05,657 - DEBUG - LoadQueryJoinAndFetchProcessor.java::95] - processing queryspace <gen:0> 
[2017-09-06 19:05:05,657 - DEBUG - LoadPlanTreePrinter.java::55] - LoadPlan(entity=com.book.store.entity.Purchase)
    - Returns
       - EntityReturnImpl(entity=com.book.store.entity.Purchase, querySpaceUid=<gen:0>, path=com.book.store.entity.Purchase)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.book.store.entity.Purchase)
          - SQL table alias mapping - purchase0_
          - alias suffix - 0_
          - suffixed key columns - {Purchase1_1_0_}
 
[2017-09-06 19:05:05,657 - DEBUG - EntityLoader.java::128] - Static select for entity com.book.store.entity.Purchase [UPGRADE]: select purchase0_.Purchase_no as Purchase1_1_0_, purchase0_.Book_id as Book_id2_1_0_, purchase0_.Customer_name as Customer3_1_0_, purchase0_.Customer_mobileno as Customer4_1_0_, purchase0_.Purchase_date as Purchase5_1_0_, purchase0_.Amount as Amount6_1_0_ from Purchase purchase0_ where purchase0_.Purchase_no=? for update 
[2017-09-06 19:05:05,657 - DEBUG - QuerySpacesImpl.java::174] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4fdca00a] 
[2017-09-06 19:05:05,658 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : bookId 
[2017-09-06 19:05:05,658 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : customerName 
[2017-09-06 19:05:05,658 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : customerMobileNumber 
[2017-09-06 19:05:05,658 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : purchaseDate 
[2017-09-06 19:05:05,658 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : amount 
[2017-09-06 19:05:05,658 - DEBUG - FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java::76] - Building LoadPlan... 
[2017-09-06 19:05:05,658 - DEBUG - LoadQueryJoinAndFetchProcessor.java::95] - processing queryspace <gen:0> 
[2017-09-06 19:05:05,658 - DEBUG - LoadPlanTreePrinter.java::55] - LoadPlan(entity=com.book.store.entity.Purchase)
    - Returns
       - EntityReturnImpl(entity=com.book.store.entity.Purchase, querySpaceUid=<gen:0>, path=com.book.store.entity.Purchase)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.book.store.entity.Purchase)
          - SQL table alias mapping - purchase0_
          - alias suffix - 0_
          - suffixed key columns - {Purchase1_1_0_}
 
[2017-09-06 19:05:05,659 - DEBUG - EntityLoader.java::128] - Static select for entity com.book.store.entity.Purchase [UPGRADE_NOWAIT]: select purchase0_.Purchase_no as Purchase1_1_0_, purchase0_.Book_id as Book_id2_1_0_, purchase0_.Customer_name as Customer3_1_0_, purchase0_.Customer_mobileno as Customer4_1_0_, purchase0_.Purchase_date as Purchase5_1_0_, purchase0_.Amount as Amount6_1_0_ from Purchase purchase0_ where purchase0_.Purchase_no=? for update 
[2017-09-06 19:05:05,659 - DEBUG - QuerySpacesImpl.java::174] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5a8c93] 
[2017-09-06 19:05:05,659 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : bookId 
[2017-09-06 19:05:05,659 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : customerName 
[2017-09-06 19:05:05,659 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : customerMobileNumber 
[2017-09-06 19:05:05,659 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : purchaseDate 
[2017-09-06 19:05:05,659 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : amount 
[2017-09-06 19:05:05,659 - DEBUG - FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java::76] - Building LoadPlan... 
[2017-09-06 19:05:05,659 - DEBUG - LoadQueryJoinAndFetchProcessor.java::95] - processing queryspace <gen:0> 
[2017-09-06 19:05:05,660 - DEBUG - LoadPlanTreePrinter.java::55] - LoadPlan(entity=com.book.store.entity.Purchase)
    - Returns
       - EntityReturnImpl(entity=com.book.store.entity.Purchase, querySpaceUid=<gen:0>, path=com.book.store.entity.Purchase)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.book.store.entity.Purchase)
          - SQL table alias mapping - purchase0_
          - alias suffix - 0_
          - suffixed key columns - {Purchase1_1_0_}
 
[2017-09-06 19:05:05,660 - DEBUG - EntityLoader.java::128] - Static select for entity com.book.store.entity.Purchase [UPGRADE_SKIPLOCKED]: select purchase0_.Purchase_no as Purchase1_1_0_, purchase0_.Book_id as Book_id2_1_0_, purchase0_.Customer_name as Customer3_1_0_, purchase0_.Customer_mobileno as Customer4_1_0_, purchase0_.Purchase_date as Purchase5_1_0_, purchase0_.Amount as Amount6_1_0_ from Purchase purchase0_ where purchase0_.Purchase_no=? for update 
[2017-09-06 19:05:05,660 - DEBUG - QuerySpacesImpl.java::174] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@119b0892] 
[2017-09-06 19:05:05,660 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : bookId 
[2017-09-06 19:05:05,660 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : customerName 
[2017-09-06 19:05:05,660 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : customerMobileNumber 
[2017-09-06 19:05:05,660 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : purchaseDate 
[2017-09-06 19:05:05,660 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : amount 
[2017-09-06 19:05:05,660 - DEBUG - FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java::76] - Building LoadPlan... 
[2017-09-06 19:05:05,661 - DEBUG - LoadQueryJoinAndFetchProcessor.java::95] - processing queryspace <gen:0> 
[2017-09-06 19:05:05,661 - DEBUG - LoadPlanTreePrinter.java::55] - LoadPlan(entity=com.book.store.entity.Purchase)
    - Returns
       - EntityReturnImpl(entity=com.book.store.entity.Purchase, querySpaceUid=<gen:0>, path=com.book.store.entity.Purchase)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.book.store.entity.Purchase)
          - SQL table alias mapping - purchase0_
          - alias suffix - 0_
          - suffixed key columns - {Purchase1_1_0_}
 
[2017-09-06 19:05:05,661 - DEBUG - EntityLoader.java::128] - Static select for entity com.book.store.entity.Purchase [FORCE]: select purchase0_.Purchase_no as Purchase1_1_0_, purchase0_.Book_id as Book_id2_1_0_, purchase0_.Customer_name as Customer3_1_0_, purchase0_.Customer_mobileno as Customer4_1_0_, purchase0_.Purchase_date as Purchase5_1_0_, purchase0_.Amount as Amount6_1_0_ from Purchase purchase0_ where purchase0_.Purchase_no=? for update 
[2017-09-06 19:05:05,661 - DEBUG - QuerySpacesImpl.java::174] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4ed4a7e4] 
[2017-09-06 19:05:05,661 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : bookId 
[2017-09-06 19:05:05,661 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : customerName 
[2017-09-06 19:05:05,661 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : customerMobileNumber 
[2017-09-06 19:05:05,661 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : purchaseDate 
[2017-09-06 19:05:05,661 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : amount 
[2017-09-06 19:05:05,662 - DEBUG - FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java::76] - Building LoadPlan... 
[2017-09-06 19:05:05,662 - DEBUG - LoadQueryJoinAndFetchProcessor.java::95] - processing queryspace <gen:0> 
[2017-09-06 19:05:05,662 - DEBUG - LoadPlanTreePrinter.java::55] - LoadPlan(entity=com.book.store.entity.Purchase)
    - Returns
       - EntityReturnImpl(entity=com.book.store.entity.Purchase, querySpaceUid=<gen:0>, path=com.book.store.entity.Purchase)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.book.store.entity.Purchase)
          - SQL table alias mapping - purchase0_
          - alias suffix - 0_
          - suffixed key columns - {Purchase1_1_0_}
 
[2017-09-06 19:05:05,662 - DEBUG - EntityLoader.java::128] - Static select for entity com.book.store.entity.Purchase [PESSIMISTIC_READ]: select purchase0_.Purchase_no as Purchase1_1_0_, purchase0_.Book_id as Book_id2_1_0_, purchase0_.Customer_name as Customer3_1_0_, purchase0_.Customer_mobileno as Customer4_1_0_, purchase0_.Purchase_date as Purchase5_1_0_, purchase0_.Amount as Amount6_1_0_ from Purchase purchase0_ where purchase0_.Purchase_no=? lock in share mode 
[2017-09-06 19:05:05,662 - DEBUG - QuerySpacesImpl.java::174] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@55651434] 
[2017-09-06 19:05:05,662 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : bookId 
[2017-09-06 19:05:05,662 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : customerName 
[2017-09-06 19:05:05,662 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : customerMobileNumber 
[2017-09-06 19:05:05,663 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : purchaseDate 
[2017-09-06 19:05:05,663 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : amount 
[2017-09-06 19:05:05,663 - DEBUG - FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java::76] - Building LoadPlan... 
[2017-09-06 19:05:05,663 - DEBUG - LoadQueryJoinAndFetchProcessor.java::95] - processing queryspace <gen:0> 
[2017-09-06 19:05:05,663 - DEBUG - LoadPlanTreePrinter.java::55] - LoadPlan(entity=com.book.store.entity.Purchase)
    - Returns
       - EntityReturnImpl(entity=com.book.store.entity.Purchase, querySpaceUid=<gen:0>, path=com.book.store.entity.Purchase)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.book.store.entity.Purchase)
          - SQL table alias mapping - purchase0_
          - alias suffix - 0_
          - suffixed key columns - {Purchase1_1_0_}
 
[2017-09-06 19:05:05,663 - DEBUG - EntityLoader.java::128] - Static select for entity com.book.store.entity.Purchase [PESSIMISTIC_WRITE]: select purchase0_.Purchase_no as Purchase1_1_0_, purchase0_.Book_id as Book_id2_1_0_, purchase0_.Customer_name as Customer3_1_0_, purchase0_.Customer_mobileno as Customer4_1_0_, purchase0_.Purchase_date as Purchase5_1_0_, purchase0_.Amount as Amount6_1_0_ from Purchase purchase0_ where purchase0_.Purchase_no=? for update 
[2017-09-06 19:05:05,663 - DEBUG - QuerySpacesImpl.java::174] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@50448409] 
[2017-09-06 19:05:05,663 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : bookId 
[2017-09-06 19:05:05,664 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : customerName 
[2017-09-06 19:05:05,664 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : customerMobileNumber 
[2017-09-06 19:05:05,664 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : purchaseDate 
[2017-09-06 19:05:05,664 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : amount 
[2017-09-06 19:05:05,664 - DEBUG - FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java::76] - Building LoadPlan... 
[2017-09-06 19:05:05,664 - DEBUG - LoadQueryJoinAndFetchProcessor.java::95] - processing queryspace <gen:0> 
[2017-09-06 19:05:05,664 - DEBUG - LoadPlanTreePrinter.java::55] - LoadPlan(entity=com.book.store.entity.Purchase)
    - Returns
       - EntityReturnImpl(entity=com.book.store.entity.Purchase, querySpaceUid=<gen:0>, path=com.book.store.entity.Purchase)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.book.store.entity.Purchase)
          - SQL table alias mapping - purchase0_
          - alias suffix - 0_
          - suffixed key columns - {Purchase1_1_0_}
 
[2017-09-06 19:05:05,664 - DEBUG - EntityLoader.java::128] - Static select for entity com.book.store.entity.Purchase [PESSIMISTIC_FORCE_INCREMENT]: select purchase0_.Purchase_no as Purchase1_1_0_, purchase0_.Book_id as Book_id2_1_0_, purchase0_.Customer_name as Customer3_1_0_, purchase0_.Customer_mobileno as Customer4_1_0_, purchase0_.Purchase_date as Purchase5_1_0_, purchase0_.Amount as Amount6_1_0_ from Purchase purchase0_ where purchase0_.Purchase_no=? for update 
[2017-09-06 19:05:05,665 - DEBUG - QuerySpacesImpl.java::174] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2b0dc227] 
[2017-09-06 19:05:05,665 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : bookId 
[2017-09-06 19:05:05,665 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : customerName 
[2017-09-06 19:05:05,665 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : customerMobileNumber 
[2017-09-06 19:05:05,665 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : purchaseDate 
[2017-09-06 19:05:05,665 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : amount 
[2017-09-06 19:05:05,665 - DEBUG - FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java::76] - Building LoadPlan... 
[2017-09-06 19:05:05,665 - DEBUG - LoadQueryJoinAndFetchProcessor.java::95] - processing queryspace <gen:0> 
[2017-09-06 19:05:05,666 - DEBUG - LoadPlanTreePrinter.java::55] - LoadPlan(entity=com.book.store.entity.Purchase)
    - Returns
       - EntityReturnImpl(entity=com.book.store.entity.Purchase, querySpaceUid=<gen:0>, path=com.book.store.entity.Purchase)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.book.store.entity.Purchase)
          - SQL table alias mapping - purchase0_
          - alias suffix - 0_
          - suffixed key columns - {Purchase1_1_0_}
 
[2017-09-06 19:05:05,666 - DEBUG - EntityLoader.java::128] - Static select for entity com.book.store.entity.Purchase [OPTIMISTIC]: select purchase0_.Purchase_no as Purchase1_1_0_, purchase0_.Book_id as Book_id2_1_0_, purchase0_.Customer_name as Customer3_1_0_, purchase0_.Customer_mobileno as Customer4_1_0_, purchase0_.Purchase_date as Purchase5_1_0_, purchase0_.Amount as Amount6_1_0_ from Purchase purchase0_ where purchase0_.Purchase_no=? 
[2017-09-06 19:05:05,666 - DEBUG - QuerySpacesImpl.java::174] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@43bdaa1b] 
[2017-09-06 19:05:05,666 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : bookId 
[2017-09-06 19:05:05,666 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : customerName 
[2017-09-06 19:05:05,666 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : customerMobileNumber 
[2017-09-06 19:05:05,666 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : purchaseDate 
[2017-09-06 19:05:05,666 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : amount 
[2017-09-06 19:05:05,666 - DEBUG - FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java::76] - Building LoadPlan... 
[2017-09-06 19:05:05,667 - DEBUG - LoadQueryJoinAndFetchProcessor.java::95] - processing queryspace <gen:0> 
[2017-09-06 19:05:05,667 - DEBUG - LoadPlanTreePrinter.java::55] - LoadPlan(entity=com.book.store.entity.Purchase)
    - Returns
       - EntityReturnImpl(entity=com.book.store.entity.Purchase, querySpaceUid=<gen:0>, path=com.book.store.entity.Purchase)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.book.store.entity.Purchase)
          - SQL table alias mapping - purchase0_
          - alias suffix - 0_
          - suffixed key columns - {Purchase1_1_0_}
 
[2017-09-06 19:05:05,667 - DEBUG - EntityLoader.java::128] - Static select for entity com.book.store.entity.Purchase [OPTIMISTIC_FORCE_INCREMENT]: select purchase0_.Purchase_no as Purchase1_1_0_, purchase0_.Book_id as Book_id2_1_0_, purchase0_.Customer_name as Customer3_1_0_, purchase0_.Customer_mobileno as Customer4_1_0_, purchase0_.Purchase_date as Purchase5_1_0_, purchase0_.Amount as Amount6_1_0_ from Purchase purchase0_ where purchase0_.Purchase_no=? 
[2017-09-06 19:05:05,667 - DEBUG - CascadeEntityLoader.java::38] - Static select for action ACTION_MERGE on entity com.book.store.entity.Purchase: select purchase0_.Purchase_no as Purchase1_1_0_, purchase0_.Book_id as Book_id2_1_0_, purchase0_.Customer_name as Customer3_1_0_, purchase0_.Customer_mobileno as Customer4_1_0_, purchase0_.Purchase_date as Purchase5_1_0_, purchase0_.Amount as Amount6_1_0_ from Purchase purchase0_ where purchase0_.Purchase_no=? 
[2017-09-06 19:05:05,667 - DEBUG - CascadeEntityLoader.java::38] - Static select for action ACTION_REFRESH on entity com.book.store.entity.Purchase: select purchase0_.Purchase_no as Purchase1_1_0_, purchase0_.Book_id as Book_id2_1_0_, purchase0_.Customer_name as Customer3_1_0_, purchase0_.Customer_mobileno as Customer4_1_0_, purchase0_.Purchase_date as Purchase5_1_0_, purchase0_.Amount as Amount6_1_0_ from Purchase purchase0_ where purchase0_.Purchase_no=? 
[2017-09-06 19:05:05,668 - DEBUG - SessionFactoryImpl.java::462] - Instantiated session factory 
[2017-09-06 19:05:05,668 - INFO - SchemaUpdate.java::101] - HHH000228: Running hbm2ddl schema update 
[2017-09-06 19:05:05,692 - DEBUG - Table.java::478] - No alter strings for table : Book 
[2017-09-06 19:05:05,706 - DEBUG - Table.java::478] - No alter strings for table : Purchase 
[2017-09-06 19:05:05,707 - DEBUG - JtaPlatformInitiator.java::42] - No JtaPlatform was specified, checking resolver 
[2017-09-06 19:05:05,707 - DEBUG - JtaPlatformResolverInitiator.java::33] - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver] 
[2017-09-06 19:05:05,708 - DEBUG - StandardJtaPlatformResolver.java::101] - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform] 
[2017-09-06 19:05:05,708 - DEBUG - NamedQueryRepository.java::149] - Checking 0 named HQL queries 
[2017-09-06 19:05:05,708 - DEBUG - NamedQueryRepository.java::165] - Checking 0 named SQL queries 
[2017-09-06 19:05:05,709 - DEBUG - SessionFactoryRegistry.java::74] - Registering SessionFactory: 21854d0e-ca4c-4816-9ae5-67f536b47edf (<unnamed>) 
[2017-09-06 19:05:05,709 - DEBUG - SessionFactoryRegistry.java::81] - Not binding SessionFactory to JNDI, no JNDI name configured 
[2017-09-06 19:05:05,709 - DEBUG - StatisticsInitiator.java::82] - Statistics initialized [enabled=false] 
[2017-09-06 19:05:05,709 - DEBUG - QueryTranslatorFactoryInitiator.java::45] - QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@d2387c8 
[2017-09-06 19:05:05,709 - INFO - QueryTranslatorFactoryInitiator.java::47] - HHH000397: Using ASTQueryTranslatorFactory 
[2017-09-06 19:05:05,709 - DEBUG - QueryTranslatorImpl.java::278] - parse() - HQL: from com.book.store.entity.Book where Category = :category 
[2017-09-06 19:05:05,710 - DEBUG - QueryTranslatorImpl.java::296] - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[DOT] Node: '.'
    |           |  |  |  +-[IDENT] Node: 'com'
    |           |  |  |  \-[IDENT] Node: 'book'
    |           |  |  \-[IDENT] Node: 'store'
    |           |  \-[IDENT] Node: 'entity'
    |           \-[IDENT] Node: 'Book'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'Category'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'category'
 
[2017-09-06 19:05:05,710 - DEBUG - ErrorCounter.java::95] - throwQueryException() : no errors 
[2017-09-06 19:05:05,711 - DEBUG - HqlSqlBaseWalker.java::121] - select << begin [level=1, statement=select] 
[2017-09-06 19:05:05,711 - DEBUG - FromElement.java::145] - FromClause{level=1} : com.book.store.entity.Book (<no alias>) -> book0_ 
[2017-09-06 19:05:05,712 - DEBUG - HqlSqlBaseWalker.java::125] - select : finishing up [level=1, statement=select] 
[2017-09-06 19:05:05,712 - DEBUG - HqlSqlWalker.java::654] - processQuery() :  ( SELECT ( FromClause{level=1} Book book0_ ) ( where ( = Category ? ) ) ) 
[2017-09-06 19:05:05,712 - DEBUG - HqlSqlWalker.java::930] - Derived SELECT clause created. 
[2017-09-06 19:05:05,712 - DEBUG - JoinProcessor.java::169] - Using FROM fragment [Book book0_] 
[2017-09-06 19:05:05,712 - DEBUG - HqlSqlBaseWalker.java::129] - select >> end [level=1, statement=select] 
[2017-09-06 19:05:05,713 - DEBUG - QueryTranslatorImpl.java::265] - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Book)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'book0_.Book_id as Book_id1_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Book,tableAlias=book0_,origin=null,columns={,className=com.book.store.entity.Book}}}
    |  \-[SQL_TOKEN] SqlFragment: 'book0_.Book_name as Book_nam2_0_, book0_.Author_name as Author_n3_0_, book0_.Publisher as Publishe4_0_, book0_.Category as Category5_0_, book0_.price as price6_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[book0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Book book0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Book,tableAlias=book0_,origin=null,columns={,className=com.book.store.entity.Book}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[IDENT] IdentNode: 'Category' {originalText=Category}
          \-[NAMED_PARAM] ParameterNode: '?' {name=category, expectedType=null}
 
[2017-09-06 19:05:05,713 - DEBUG - ErrorCounter.java::95] - throwQueryException() : no errors 
[2017-09-06 19:05:05,713 - DEBUG - QueryTranslatorImpl.java::247] - HQL: from com.book.store.entity.Book where Category = :category 
[2017-09-06 19:05:05,713 - DEBUG - QueryTranslatorImpl.java::248] - SQL: select book0_.Book_id as Book_id1_0_, book0_.Book_name as Book_nam2_0_, book0_.Author_name as Author_n3_0_, book0_.Publisher as Publishe4_0_, book0_.Category as Category5_0_, book0_.price as price6_0_ from Book book0_ where Category=? 
[2017-09-06 19:05:05,713 - DEBUG - ErrorCounter.java::95] - throwQueryException() : no errors 
[2017-09-06 19:05:05,713 - DEBUG - SqlStatementLogger.java::92] - select book0_.Book_id as Book_id1_0_, book0_.Book_name as Book_nam2_0_, book0_.Author_name as Author_n3_0_, book0_.Publisher as Publishe4_0_, book0_.Category as Category5_0_, book0_.price as price6_0_ from Book book0_ where Category=? 
[2017-09-06 19:05:05,719 - DEBUG - IntegratorServiceImpl.java::46] - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator]. 
[2017-09-06 19:05:05,720 - DEBUG - IntegratorServiceImpl.java::46] - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator]. 
[2017-09-06 19:05:05,720 - DEBUG - IntegratorServiceImpl.java::46] - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator]. 
[2017-09-06 19:05:05,721 - DEBUG - LocalXmlResourceResolver.java::57] - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd createDatabaseIfNotExist=true] 
[2017-09-06 19:05:05,722 - WARN - LocalXmlResourceResolver.java::91] - HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-configuration. Use namespace http://www.hibernate.org/dtd/hibernate-configuration instead.  Support for obsolete DTD/XSD namespaces may be removed at any time. 
[2017-09-06 19:05:05,722 - DEBUG - LocalXmlResourceResolver.java::95] - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/ 
[2017-09-06 19:05:05,723 - DEBUG - JaxbCfgProcessor.java::116] - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information 
[2017-09-06 19:05:05,734 - DEBUG - Configuration.java::722] - Building session factory using internal StandardServiceRegistryBuilder 
[2017-09-06 19:05:05,735 - DEBUG - ServiceBinding.java::68] - Overriding existing service binding [org.hibernate.secure.spi.JaccService] 
[2017-09-06 19:05:05,735 - DEBUG - Configuration.java::653] - Building session factory using provided StandardServiceRegistry 
[2017-09-06 19:05:05,735 - DEBUG - RegionFactoryInitiator.java::88] - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory 
[2017-09-06 19:05:05,736 - DEBUG - LocalXmlResourceResolver.java::57] - Interpreting public/system identifier : [-//Hibernate/Hibernate Mapping DTD 5.0//EN] - [http://hibernate.sourceforge.net/hibernate-mapping-5.0.dtd] 
[2017-09-06 19:05:05,736 - WARN - LocalXmlResourceResolver.java::75] - HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-mapping. Use namespace http://www.hibernate.org/dtd/hibernate-mapping instead.  Support for obsolete DTD/XSD namespaces may be removed at any time. 
[2017-09-06 19:05:05,736 - DEBUG - LocalXmlResourceResolver.java::79] - Recognized legacy hibernate-mapping identifier; attempting to resolve on classpath under org/hibernate/ 
[2017-09-06 19:05:05,739 - DEBUG - MappingBinder.java::54] - Performing JAXB binding of hbm.xml document : Origin(name=bookstore.hbm.xml,type=RESOURCE) 
[2017-09-06 19:05:05,896 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration boolean -> org.hibernate.type.BooleanType@f0c8a99 
[2017-09-06 19:05:05,896 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration boolean -> org.hibernate.type.BooleanType@f0c8a99 
[2017-09-06 19:05:05,896 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@f0c8a99 
[2017-09-06 19:05:05,896 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@7526515b 
[2017-09-06 19:05:05,896 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration true_false -> org.hibernate.type.TrueFalseType@6e6f2380 
[2017-09-06 19:05:05,897 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration yes_no -> org.hibernate.type.YesNoType@53fe15ff 
[2017-09-06 19:05:05,897 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration byte -> org.hibernate.type.ByteType@15bb5034 
[2017-09-06 19:05:05,897 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration byte -> org.hibernate.type.ByteType@15bb5034 
[2017-09-06 19:05:05,897 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@15bb5034 
[2017-09-06 19:05:05,897 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration character -> org.hibernate.type.CharacterType@2cf3d63b 
[2017-09-06 19:05:05,897 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration char -> org.hibernate.type.CharacterType@2cf3d63b 
[2017-09-06 19:05:05,897 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2cf3d63b 
[2017-09-06 19:05:05,897 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration short -> org.hibernate.type.ShortType@76b1e9b8 
[2017-09-06 19:05:05,897 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration short -> org.hibernate.type.ShortType@76b1e9b8 
[2017-09-06 19:05:05,897 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@76b1e9b8 
[2017-09-06 19:05:05,897 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration integer -> org.hibernate.type.IntegerType@793f29ff 
[2017-09-06 19:05:05,898 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration int -> org.hibernate.type.IntegerType@793f29ff 
[2017-09-06 19:05:05,898 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@793f29ff 
[2017-09-06 19:05:05,898 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration long -> org.hibernate.type.LongType@7ef82753 
[2017-09-06 19:05:05,898 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration long -> org.hibernate.type.LongType@7ef82753 
[2017-09-06 19:05:05,898 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.lang.Long -> org.hibernate.type.LongType@7ef82753 
[2017-09-06 19:05:05,898 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration float -> org.hibernate.type.FloatType@7161d8d1 
[2017-09-06 19:05:05,898 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration float -> org.hibernate.type.FloatType@7161d8d1 
[2017-09-06 19:05:05,898 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7161d8d1 
[2017-09-06 19:05:05,898 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration double -> org.hibernate.type.DoubleType@5149d738 
[2017-09-06 19:05:05,898 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration double -> org.hibernate.type.DoubleType@5149d738 
[2017-09-06 19:05:05,899 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@5149d738 
[2017-09-06 19:05:05,899 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@712625fd 
[2017-09-06 19:05:05,899 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@712625fd 
[2017-09-06 19:05:05,899 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1c5920df 
[2017-09-06 19:05:05,899 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1c5920df 
[2017-09-06 19:05:05,899 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration string -> org.hibernate.type.StringType@15043a2f 
[2017-09-06 19:05:05,899 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.lang.String -> org.hibernate.type.StringType@15043a2f 
[2017-09-06 19:05:05,899 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@28261e8e 
[2017-09-06 19:05:05,899 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@3ba987b8 
[2017-09-06 19:05:05,899 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration url -> org.hibernate.type.UrlType@72035809 
[2017-09-06 19:05:05,899 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.net.URL -> org.hibernate.type.UrlType@72035809 
[2017-09-06 19:05:05,899 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration date -> org.hibernate.type.DateType@2cb4893b 
[2017-09-06 19:05:05,900 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.sql.Date -> org.hibernate.type.DateType@2cb4893b 
[2017-09-06 19:05:05,900 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration time -> org.hibernate.type.TimeType@273444fe 
[2017-09-06 19:05:05,900 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@273444fe 
[2017-09-06 19:05:05,900 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration timestamp -> org.hibernate.type.TimestampType@4681c175 
[2017-09-06 19:05:05,900 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@4681c175 
[2017-09-06 19:05:05,900 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@4681c175 
[2017-09-06 19:05:05,900 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@6fa51cd4 
[2017-09-06 19:05:05,900 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration calendar -> org.hibernate.type.CalendarType@cecf639 
[2017-09-06 19:05:05,900 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@cecf639 
[2017-09-06 19:05:05,900 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@cecf639 
[2017-09-06 19:05:05,900 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7ce69770 
[2017-09-06 19:05:05,900 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration locale -> org.hibernate.type.LocaleType@6c284af 
[2017-09-06 19:05:05,901 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@6c284af 
[2017-09-06 19:05:05,901 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration currency -> org.hibernate.type.CurrencyType@183ec003 
[2017-09-06 19:05:05,901 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@183ec003 
[2017-09-06 19:05:05,901 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration timezone -> org.hibernate.type.TimeZoneType@4d1c005e 
[2017-09-06 19:05:05,901 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@4d1c005e 
[2017-09-06 19:05:05,901 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration class -> org.hibernate.type.ClassType@496bc455 
[2017-09-06 19:05:05,901 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@496bc455 
[2017-09-06 19:05:05,901 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@4a003cbe 
[2017-09-06 19:05:05,901 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@4a003cbe 
[2017-09-06 19:05:05,901 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2b30a42c 
[2017-09-06 19:05:05,901 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration binary -> org.hibernate.type.BinaryType@792b749c 
[2017-09-06 19:05:05,901 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration byte[] -> org.hibernate.type.BinaryType@792b749c 
[2017-09-06 19:05:05,902 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration [B -> org.hibernate.type.BinaryType@792b749c 
[2017-09-06 19:05:05,902 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@302c971f 
[2017-09-06 19:05:05,902 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@302c971f 
[2017-09-06 19:05:05,902 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@302c971f 
[2017-09-06 19:05:05,902 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration image -> org.hibernate.type.ImageType@6f10d5b6 
[2017-09-06 19:05:05,902 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration characters -> org.hibernate.type.CharArrayType@7fd50002 
[2017-09-06 19:05:05,902 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration char[] -> org.hibernate.type.CharArrayType@7fd50002 
[2017-09-06 19:05:05,902 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration [C -> org.hibernate.type.CharArrayType@7fd50002 
[2017-09-06 19:05:05,902 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@45d84a20 
[2017-09-06 19:05:05,902 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@45d84a20 
[2017-09-06 19:05:05,902 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@45d84a20 
[2017-09-06 19:05:05,902 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration text -> org.hibernate.type.TextType@c430e6c 
[2017-09-06 19:05:05,902 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration ntext -> org.hibernate.type.NTextType@70cf32e3 
[2017-09-06 19:05:05,903 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration blob -> org.hibernate.type.BlobType@43f02ef2 
[2017-09-06 19:05:05,903 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@43f02ef2 
[2017-09-06 19:05:05,903 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@6f204a1a 
[2017-09-06 19:05:05,903 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration clob -> org.hibernate.type.ClobType@57bc27f5 
[2017-09-06 19:05:05,903 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@57bc27f5 
[2017-09-06 19:05:05,903 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration nclob -> org.hibernate.type.NClobType@25df00a0 
[2017-09-06 19:05:05,903 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@25df00a0 
[2017-09-06 19:05:05,903 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@5884a914 
[2017-09-06 19:05:05,903 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@79207381 
[2017-09-06 19:05:05,903 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration serializable -> org.hibernate.type.SerializableType@97e93f1 
[2017-09-06 19:05:05,903 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration object -> org.hibernate.type.ObjectType@20b2475a 
[2017-09-06 19:05:05,903 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@20b2475a 
[2017-09-06 19:05:05,904 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@2bc7db89 
[2017-09-06 19:05:05,904 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@479ac2cb 
[2017-09-06 19:05:05,904 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@220c9a63 
[2017-09-06 19:05:05,904 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@55b5cd2b 
[2017-09-06 19:05:05,904 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@40bb4f87 
[2017-09-06 19:05:05,904 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@51a651c1 
[2017-09-06 19:05:05,904 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@173f1614 
[2017-09-06 19:05:05,904 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@6c184d4d 
[2017-09-06 19:05:05,904 - WARN - DriverManagerConnectionProviderImpl.java::76] - HHH000402: Using Hibernate built-in connection pool (not for production use!) 
[2017-09-06 19:05:05,905 - INFO - DriverManagerConnectionProviderImpl.java::149] - HHH000401: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/bookstore?createDatabaseIfNotExist=true&useSSL=false] 
[2017-09-06 19:05:05,905 - INFO - DriverManagerConnectionProviderImpl.java::155] - HHH000046: Connection properties: {user=neelakanta, password=Welcome@123, autocommit=true} 
[2017-09-06 19:05:05,905 - INFO - DriverManagerConnectionProviderImpl.java::163] - HHH000006: Autocommit mode: true 
[2017-09-06 19:05:05,905 - INFO - DriverManagerConnectionProviderImpl.java::85] - HHH000115: Hibernate connection pool size: 20 (min=1) 
[2017-09-06 19:05:05,905 - DEBUG - DelegatingBasicLogger.java::384] - Initializing Connection pool with 1 Connections 
[2017-09-06 19:05:05,908 - DEBUG - JdbcEnvironmentInitiator.java::72] - Database ->
       name : MySQL
    version : 5.5.55-0ubuntu0.14.04.1
      major : 5
      minor : 5 
[2017-09-06 19:05:05,908 - DEBUG - JdbcEnvironmentInitiator.java::83] - Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-6.0.5 ( Revision: 6e477e32dff18fb4dc102e53f5a68037a9f8762e )
      major : 6
      minor : 0 
[2017-09-06 19:05:05,908 - DEBUG - DelegatingBasicLogger.java::389] - JDBC version : 4.1 
[2017-09-06 19:05:05,908 - INFO - Dialect.java::154] - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect 
[2017-09-06 19:05:05,908 - DEBUG - StandardRefCursorSupport.java::170] - Unexpected error trying to gauge level of JDBC REF_CURSOR support : null 
[2017-09-06 19:05:05,910 - DEBUG - IdentifierHelperBuilder.java::116] - JDBC driver metadata reported database stores quoted identifiers in more than one case 
[2017-09-06 19:05:05,910 - DEBUG - IdentifierHelperBuilder.java::182] - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers 
[2017-09-06 19:05:05,912 - DEBUG - DefaultIdentifierGeneratorFactory.java::78] - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator] 
[2017-09-06 19:05:05,912 - DEBUG - DefaultIdentifierGeneratorFactory.java::78] - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator] 
[2017-09-06 19:05:05,912 - DEBUG - DefaultIdentifierGeneratorFactory.java::78] - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator] 
[2017-09-06 19:05:05,912 - DEBUG - DefaultIdentifierGeneratorFactory.java::78] - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator] 
[2017-09-06 19:05:05,912 - DEBUG - DefaultIdentifierGeneratorFactory.java::78] - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned] 
[2017-09-06 19:05:05,912 - DEBUG - DefaultIdentifierGeneratorFactory.java::78] - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator] 
[2017-09-06 19:05:05,912 - DEBUG - DefaultIdentifierGeneratorFactory.java::78] - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator] 
[2017-09-06 19:05:05,912 - DEBUG - DefaultIdentifierGeneratorFactory.java::78] - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator] 
[2017-09-06 19:05:05,912 - DEBUG - DefaultIdentifierGeneratorFactory.java::78] - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator] 
[2017-09-06 19:05:05,912 - DEBUG - DefaultIdentifierGeneratorFactory.java::78] - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator] 
[2017-09-06 19:05:05,913 - DEBUG - DefaultIdentifierGeneratorFactory.java::78] - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator] 
[2017-09-06 19:05:05,913 - DEBUG - DefaultIdentifierGeneratorFactory.java::78] - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator] 
[2017-09-06 19:05:05,913 - DEBUG - DefaultIdentifierGeneratorFactory.java::78] - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator] 
[2017-09-06 19:05:05,913 - DEBUG - DefaultIdentifierGeneratorFactory.java::78] - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator] 
[2017-09-06 19:05:05,913 - DEBUG - Namespace.java::47] - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}] 
[2017-09-06 19:05:05,913 - DEBUG - ModelBinder.java::230] - Mapping class: com.book.store.entity.Book -> Book 
[2017-09-06 19:05:05,914 - WARN - ModelBinder.java::2441] - HHH90000003: Use of DOM4J entity-mode is considered deprecated 
[2017-09-06 19:05:05,914 - DEBUG - ModelBinder.java::2538] - Mapped property: bookId -> [Book_id] 
[2017-09-06 19:05:05,914 - WARN - ModelBinder.java::2441] - HHH90000003: Use of DOM4J entity-mode is considered deprecated 
[2017-09-06 19:05:05,914 - DEBUG - ModelBinder.java::2538] - Mapped property: bookName -> [Book_name] 
[2017-09-06 19:05:05,914 - WARN - ModelBinder.java::2441] - HHH90000003: Use of DOM4J entity-mode is considered deprecated 
[2017-09-06 19:05:05,914 - DEBUG - ModelBinder.java::2538] - Mapped property: authorName -> [Author_name] 
[2017-09-06 19:05:05,914 - WARN - ModelBinder.java::2441] - HHH90000003: Use of DOM4J entity-mode is considered deprecated 
[2017-09-06 19:05:05,914 - DEBUG - ModelBinder.java::2538] - Mapped property: publisherName -> [Publisher] 
[2017-09-06 19:05:05,915 - WARN - ModelBinder.java::2441] - HHH90000003: Use of DOM4J entity-mode is considered deprecated 
[2017-09-06 19:05:05,915 - DEBUG - ModelBinder.java::2538] - Mapped property: categoryName -> [Category] 
[2017-09-06 19:05:05,915 - WARN - ModelBinder.java::2441] - HHH90000003: Use of DOM4J entity-mode is considered deprecated 
[2017-09-06 19:05:05,915 - DEBUG - ModelBinder.java::2538] - Mapped property: price -> [price] 
[2017-09-06 19:05:05,915 - DEBUG - ModelBinder.java::230] - Mapping class: com.book.store.entity.Purchase -> Purchase 
[2017-09-06 19:05:05,915 - WARN - ModelBinder.java::2441] - HHH90000003: Use of DOM4J entity-mode is considered deprecated 
[2017-09-06 19:05:05,915 - DEBUG - ModelBinder.java::2538] - Mapped property: purchaseNumber -> [Purchase_no] 
[2017-09-06 19:05:05,915 - WARN - ModelBinder.java::2441] - HHH90000003: Use of DOM4J entity-mode is considered deprecated 
[2017-09-06 19:05:05,915 - DEBUG - ModelBinder.java::2538] - Mapped property: bookId -> [Book_id] 
[2017-09-06 19:05:05,916 - WARN - ModelBinder.java::2441] - HHH90000003: Use of DOM4J entity-mode is considered deprecated 
[2017-09-06 19:05:05,916 - DEBUG - ModelBinder.java::2538] - Mapped property: customerName -> [Customer_name] 
[2017-09-06 19:05:05,916 - WARN - ModelBinder.java::2441] - HHH90000003: Use of DOM4J entity-mode is considered deprecated 
[2017-09-06 19:05:05,916 - DEBUG - ModelBinder.java::2538] - Mapped property: customerMobileNumber -> [Customer_mobileno] 
[2017-09-06 19:05:05,916 - WARN - ModelBinder.java::2441] - HHH90000003: Use of DOM4J entity-mode is considered deprecated 
[2017-09-06 19:05:05,916 - DEBUG - ModelBinder.java::2538] - Mapped property: purchaseDate -> [Purchase_date] 
[2017-09-06 19:05:05,916 - WARN - ModelBinder.java::2441] - HHH90000003: Use of DOM4J entity-mode is considered deprecated 
[2017-09-06 19:05:05,916 - DEBUG - ModelBinder.java::2538] - Mapped property: amount -> [Amount] 
[2017-09-06 19:05:05,917 - DEBUG - SessionFactoryImpl.java::210] - Building session factory 
[2017-09-06 19:05:05,917 - DEBUG - Settings.java::69] - SessionFactory name : null 
[2017-09-06 19:05:05,917 - DEBUG - Settings.java::70] - Automatic flush during beforeCompletion(): disabled 
[2017-09-06 19:05:05,918 - DEBUG - Settings.java::71] - Automatic session close at end of transaction: disabled 
[2017-09-06 19:05:05,918 - DEBUG - Settings.java::73] - Statistics: disabled 
[2017-09-06 19:05:05,918 - DEBUG - Settings.java::75] - Deleted entity synthetic identifier rollback: disabled 
[2017-09-06 19:05:05,918 - DEBUG - Settings.java::76] - Default entity-mode: pojo 
[2017-09-06 19:05:05,918 - DEBUG - Settings.java::77] - Check Nullability in Core (should be disabled when Bean Validation is on): enabled 
[2017-09-06 19:05:05,918 - DEBUG - Settings.java::78] - Allow initialization of lazy state outside session : disabled 
[2017-09-06 19:05:05,918 - DEBUG - Settings.java::80] - Using BatchFetchStyle : LEGACY 
[2017-09-06 19:05:05,921 - DEBUG - Settings.java::81] - Default batch fetch size: -1 
[2017-09-06 19:05:05,921 - DEBUG - Settings.java::82] - Maximum outer join fetch depth: 2 
[2017-09-06 19:05:05,921 - DEBUG - Settings.java::83] - Default null ordering: NONE 
[2017-09-06 19:05:05,921 - DEBUG - Settings.java::84] - Order SQL updates by primary key: disabled 
[2017-09-06 19:05:05,921 - DEBUG - Settings.java::85] - Order SQL inserts for batching: disabled 
[2017-09-06 19:05:05,921 - DEBUG - Settings.java::87] - multi-tenancy strategy : NONE 
[2017-09-06 19:05:05,921 - DEBUG - Settings.java::89] - JTA Track by Thread: enabled 
[2017-09-06 19:05:05,922 - DEBUG - Settings.java::91] - Query language substitutions: {} 
[2017-09-06 19:05:05,922 - DEBUG - Settings.java::92] - JPA query language strict compliance: disabled 
[2017-09-06 19:05:05,922 - DEBUG - Settings.java::93] - Named query checking : enabled 
[2017-09-06 19:05:05,922 - DEBUG - Settings.java::95] - Second-level cache: enabled 
[2017-09-06 19:05:05,922 - DEBUG - Settings.java::96] - Second-level query cache: disabled 
[2017-09-06 19:05:05,922 - DEBUG - Settings.java::97] - Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@74a6a609 
[2017-09-06 19:05:05,922 - DEBUG - Settings.java::98] - Second-level cache region prefix: null 
[2017-09-06 19:05:05,922 - DEBUG - Settings.java::99] - Optimize second-level cache for minimal puts: disabled 
[2017-09-06 19:05:05,922 - DEBUG - Settings.java::100] - Structured second-level cache entries: disabled 
[2017-09-06 19:05:05,922 - DEBUG - Settings.java::101] - Second-level cache direct-reference entries: disabled 
[2017-09-06 19:05:05,922 - DEBUG - Settings.java::102] - Automatic eviction of collection cache: disabled 
[2017-09-06 19:05:05,922 - DEBUG - Settings.java::104] - JDBC batch size: 15 
[2017-09-06 19:05:05,922 - DEBUG - Settings.java::105] - JDBC batch updates for versioned data: enabled 
[2017-09-06 19:05:05,923 - DEBUG - Settings.java::106] - Scrollable result sets: enabled 
[2017-09-06 19:05:05,923 - DEBUG - Settings.java::107] - Wrap result sets: disabled 
[2017-09-06 19:05:05,923 - DEBUG - Settings.java::108] - JDBC3 getGeneratedKeys(): enabled 
[2017-09-06 19:05:05,923 - DEBUG - Settings.java::109] - JDBC result set fetch size: null 
[2017-09-06 19:05:05,923 - DEBUG - Settings.java::110] - Connection release mode: ON_CLOSE 
[2017-09-06 19:05:05,923 - DEBUG - Settings.java::111] - Generate SQL with comments: disabled 
[2017-09-06 19:05:05,923 - DEBUG - SessionFactoryImpl.java::255] - Session factory constructed with filter configurations : {} 
[2017-09-06 19:05:05,924 - DEBUG - SessionFactoryImpl.java::256] - Instantiating session factory with properties: {hibernate.connection.password=Welcome@123, java.runtime.name=Java(TM) SE Runtime Environment, java.vm.version=25.45-b02, sun.boot.library.path=/usr/java/jdk1.8.0_45/jre/lib/amd64, hibernate.connection.username=neelakanta, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@75cf0de5, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=:, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, sun.os.patch.level=unknown, user.country=US, sun.java.launcher=SUN_STANDARD, java.vm.specification.name=Java Virtual Machine Specification, user.dir=/home/neelakanta/Documents/Eclipse Documents/Mars Documents/BookStore, java.runtime.version=1.8.0_45-b14, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, basedir=/home/neelakanta/Documents/Eclipse Documents/Mars Documents/BookStore, os.arch=amd64, java.endorsed.dirs=/usr/java/jdk1.8.0_45/jre/lib/endorsed, surefire.real.class.path=/home/neelakanta/Documents/Eclipse Documents/Mars Documents/BookStore/target/surefire/surefirebooter5232880889481838645.jar, hibernate.connection.autocommit=true, java.io.tmpdir=/tmp, line.separator=
, java.vm.specification.vendor=Oracle Corporation, os.name=Linux, sun.jnu.encoding=UTF-8, java.library.path=/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib, surefire.test.class.path=/home/neelakanta/Documents/Eclipse Documents/Mars Documents/BookStore/target/test-classes:/home/neelakanta/Documents/Eclipse Documents/Mars Documents/BookStore/target/classes:/home/neelakanta/.m2/repository/junit/junit/4.12/junit-4.12.jar:/home/neelakanta/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/neelakanta/.m2/repository/org/hibernate/hibernate-core/5.0.1.Final/hibernate-core-5.0.1.Final.jar:/home/neelakanta/.m2/repository/org/jboss/logging/jboss-logging/3.3.0.Final/jboss-logging-3.3.0.Final.jar:/home/neelakanta/.m2/repository/org/apache/geronimo/specs/geronimo-jta_1.1_spec/1.1.1/geronimo-jta_1.1_spec-1.1.1.jar:/home/neelakanta/.m2/repository/org/hibernate/javax/persistence/hibernate-jpa-2.1-api/1.0.0.Final/hibernate-jpa-2.1-api-1.0.0.Final.jar:/home/neelakanta/.m2/repository/org/javassist/javassist/3.18.1-GA/javassist-3.18.1-GA.jar:/home/neelakanta/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/home/neelakanta/.m2/repository/org/jboss/jandex/1.2.2.Final/jandex-1.2.2.Final.jar:/home/neelakanta/.m2/repository/dom4j/dom4j/1.6.1/dom4j-1.6.1.jar:/home/neelakanta/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.0.0.Final/hibernate-commons-annotations-5.0.0.Final.jar:/home/neelakanta/.m2/repository/org/hibernate/hibernate-validator/5.0.1.Final/hibernate-validator-5.0.1.Final.jar:/home/neelakanta/.m2/repository/javax/validation/validation-api/1.1.0.Final/validation-api-1.1.0.Final.jar:/home/neelakanta/.m2/repository/com/fasterxml/classmate/0.8.0/classmate-0.8.0.jar:/home/neelakanta/.m2/repository/org/hibernate/hibernate-annotations/3.3.0.ga/hibernate-annotations-3.3.0.ga.jar:/home/neelakanta/.m2/repository/org/hibernate/hibernate/3.2.1.ga/hibernate-3.2.1.ga.jar:/home/neelakanta/.m2/repository/net/sf/ehcache/ehcache/1.2.3/ehcache-1.2.3.jar:/home/neelakanta/.m2/repository/commons-logging/commons-logging/1.0.4/commons-logging-1.0.4.jar:/home/neelakanta/.m2/repository/asm/asm-attrs/1.5.3/asm-attrs-1.5.3.jar:/home/neelakanta/.m2/repository/cglib/cglib/2.1_3/cglib-2.1_3.jar:/home/neelakanta/.m2/repository/asm/asm/1.5.3/asm-1.5.3.jar:/home/neelakanta/.m2/repository/commons-collections/commons-collections/2.1.1/commons-collections-2.1.1.jar:/home/neelakanta/.m2/repository/javax/persistence/persistence-api/1.0/persistence-api-1.0.jar:/home/neelakanta/.m2/repository/org/hibernate/hibernate-commons-annotations/3.3.0.ga/hibernate-commons-annotations-3.3.0.ga.jar:/home/neelakanta/.m2/repository/javax/transaction/jta/1.1/jta-1.1.jar:/home/neelakanta/.m2/repository/mysql/mysql-connector-java/6.0.5/mysql-connector-java-6.0.5.jar:/home/neelakanta/.m2/repository/c3p0/c3p0/0.9.0.4/c3p0-0.9.0.4.jar:/home/neelakanta/.m2/repository/org/hibernate/hibernate-entitymanager/4.3.1.Final/hibernate-entitymanager-4.3.1.Final.jar:/home/neelakanta/.m2/repository/org/jboss/logging/jboss-logging-annotations/1.2.0.Beta1/jboss-logging-annotations-1.2.0.Beta1.jar:/home/neelakanta/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.0.0.Final/jboss-transaction-api_1.2_spec-1.0.0.Final.jar:/home/neelakanta/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar:, java.class.version=52.0, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=3.13.0-119-generic, user.home=/home/neelakanta, user.timezone=Asia/Kolkata, java.awt.printerjob=sun.print.PSPrinterJob, file.encoding=UTF-8, java.specification.version=1.8, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, user.name=neelakanta, java.class.path=/home/neelakanta/Documents/Eclipse Documents/Mars Documents/BookStore/target/test-classes:/home/neelakanta/Documents/Eclipse Documents/Mars Documents/BookStore/target/classes:/home/neelakanta/.m2/repository/junit/junit/4.12/junit-4.12.jar:/home/neelakanta/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/neelakanta/.m2/repository/org/hibernate/hibernate-core/5.0.1.Final/hibernate-core-5.0.1.Final.jar:/home/neelakanta/.m2/repository/org/jboss/logging/jboss-logging/3.3.0.Final/jboss-logging-3.3.0.Final.jar:/home/neelakanta/.m2/repository/org/apache/geronimo/specs/geronimo-jta_1.1_spec/1.1.1/geronimo-jta_1.1_spec-1.1.1.jar:/home/neelakanta/.m2/repository/org/hibernate/javax/persistence/hibernate-jpa-2.1-api/1.0.0.Final/hibernate-jpa-2.1-api-1.0.0.Final.jar:/home/neelakanta/.m2/repository/org/javassist/javassist/3.18.1-GA/javassist-3.18.1-GA.jar:/home/neelakanta/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/home/neelakanta/.m2/repository/org/jboss/jandex/1.2.2.Final/jandex-1.2.2.Final.jar:/home/neelakanta/.m2/repository/dom4j/dom4j/1.6.1/dom4j-1.6.1.jar:/home/neelakanta/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.0.0.Final/hibernate-commons-annotations-5.0.0.Final.jar:/home/neelakanta/.m2/repository/org/hibernate/hibernate-validator/5.0.1.Final/hibernate-validator-5.0.1.Final.jar:/home/neelakanta/.m2/repository/javax/validation/validation-api/1.1.0.Final/validation-api-1.1.0.Final.jar:/home/neelakanta/.m2/repository/com/fasterxml/classmate/0.8.0/classmate-0.8.0.jar:/home/neelakanta/.m2/repository/org/hibernate/hibernate-annotations/3.3.0.ga/hibernate-annotations-3.3.0.ga.jar:/home/neelakanta/.m2/repository/org/hibernate/hibernate/3.2.1.ga/hibernate-3.2.1.ga.jar:/home/neelakanta/.m2/repository/net/sf/ehcache/ehcache/1.2.3/ehcache-1.2.3.jar:/home/neelakanta/.m2/repository/commons-logging/commons-logging/1.0.4/commons-logging-1.0.4.jar:/home/neelakanta/.m2/repository/asm/asm-attrs/1.5.3/asm-attrs-1.5.3.jar:/home/neelakanta/.m2/repository/cglib/cglib/2.1_3/cglib-2.1_3.jar:/home/neelakanta/.m2/repository/asm/asm/1.5.3/asm-1.5.3.jar:/home/neelakanta/.m2/repository/commons-collections/commons-collections/2.1.1/commons-collections-2.1.1.jar:/home/neelakanta/.m2/repository/javax/persistence/persistence-api/1.0/persistence-api-1.0.jar:/home/neelakanta/.m2/repository/org/hibernate/hibernate-commons-annotations/3.3.0.ga/hibernate-commons-annotations-3.3.0.ga.jar:/home/neelakanta/.m2/repository/javax/transaction/jta/1.1/jta-1.1.jar:/home/neelakanta/.m2/repository/mysql/mysql-connector-java/6.0.5/mysql-connector-java-6.0.5.jar:/home/neelakanta/.m2/repository/c3p0/c3p0/0.9.0.4/c3p0-0.9.0.4.jar:/home/neelakanta/.m2/repository/org/hibernate/hibernate-entitymanager/4.3.1.Final/hibernate-entitymanager-4.3.1.Final.jar:/home/neelakanta/.m2/repository/org/jboss/logging/jboss-logging-annotations/1.2.0.Beta1/jboss-logging-annotations-1.2.0.Beta1.jar:/home/neelakanta/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.0.0.Final/jboss-transaction-api_1.2_spec-1.0.0.Final.jar:/home/neelakanta/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar:, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=false, java.vm.specification.version=1.8, sun.arch.data.model=64, sun.java.command=/home/neelakanta/Documents/Eclipse Documents/Mars Documents/BookStore/target/surefire/surefirebooter5232880889481838645.jar /home/neelakanta/Documents/Eclipse Documents/Mars Documents/BookStore/target/surefire/surefire7552053918813552354tmp /home/neelakanta/Documents/Eclipse Documents/Mars Documents/BookStore/target/surefire/surefire_03604179774586556801tmp, java.home=/usr/java/jdk1.8.0_45/jre, hibernate.connection.url=jdbc:mysql://localhost:3306/bookstore?createDatabaseIfNotExist=true&useSSL=false, hibernate.dialect=org.hibernate.dialect.MySQLDialect, user.language=en, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.X11.XToolkit, java.vm.info=mixed mode, java.version=1.8.0_45, java.ext.dirs=/usr/java/jdk1.8.0_45/jre/lib/ext:/usr/java/packages/lib/ext, sun.boot.class.path=/usr/java/jdk1.8.0_45/jre/lib/resources.jar:/usr/java/jdk1.8.0_45/jre/lib/rt.jar:/usr/java/jdk1.8.0_45/jre/lib/sunrsasign.jar:/usr/java/jdk1.8.0_45/jre/lib/jsse.jar:/usr/java/jdk1.8.0_45/jre/lib/jce.jar:/usr/java/jdk1.8.0_45/jre/lib/charsets.jar:/usr/java/jdk1.8.0_45/jre/lib/jfr.jar:/usr/java/jdk1.8.0_45/jre/classes, java.vendor=Oracle Corporation, localRepository=/home/neelakanta/.m2/repository, file.separator=/, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, sun.desktop=gnome, sun.cpu.isalist=} 
[2017-09-06 19:05:05,924 - DEBUG - DefaultTraversableResolver.java::106] - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver 
[2017-09-06 19:05:05,924 - DEBUG - DefaultTraversableResolver.java::117] - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. 
[2017-09-06 19:05:05,924 - DEBUG - ValidationXmlParser.java::88] - Trying to load META-INF/validation.xml for XML based Validator configuration. 
[2017-09-06 19:05:05,925 - DEBUG - ValidationXmlParser.java::95] - No META-INF/validation.xml found. Using annotation based configuration only. 
[2017-09-06 19:05:05,925 - DEBUG - ClassLoaderAccessImpl.java::55] - Not known whether passed class name [com.book.store.entity.Book] is safe 
[2017-09-06 19:05:05,925 - DEBUG - ClassLoaderAccessImpl.java::57] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.book.store.entity.Book 
[2017-09-06 19:05:05,928 - DEBUG - ClassLoaderAccessImpl.java::55] - Not known whether passed class name [com.book.store.entity.Purchase] is safe 
[2017-09-06 19:05:05,928 - DEBUG - ClassLoaderAccessImpl.java::57] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.book.store.entity.Purchase 
[2017-09-06 19:05:05,933 - DEBUG - JaccIntegrator.java::80] - Skipping JACC integration as it was not enabled 
[2017-09-06 19:05:05,933 - DEBUG - ClassLoaderAccessImpl.java::55] - Not known whether passed class name [com.book.store.entity.Book] is safe 
[2017-09-06 19:05:05,933 - DEBUG - ClassLoaderAccessImpl.java::57] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.book.store.entity.Book 
[2017-09-06 19:05:05,933 - DEBUG - ClassLoaderAccessImpl.java::55] - Not known whether passed class name [com.book.store.entity.Book] is safe 
[2017-09-06 19:05:05,933 - DEBUG - ClassLoaderAccessImpl.java::57] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.book.store.entity.Book 
[2017-09-06 19:05:05,934 - DEBUG - ClassLoaderAccessImpl.java::55] - Not known whether passed class name [com.book.store.entity.Purchase] is safe 
[2017-09-06 19:05:05,934 - DEBUG - ClassLoaderAccessImpl.java::57] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.book.store.entity.Purchase 
[2017-09-06 19:05:05,935 - DEBUG - ClassLoaderAccessImpl.java::55] - Not known whether passed class name [com.book.store.entity.Purchase] is safe 
[2017-09-06 19:05:05,935 - DEBUG - ClassLoaderAccessImpl.java::57] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.book.store.entity.Purchase 
[2017-09-06 19:05:05,936 - DEBUG - AbstractEntityPersister.java::3418] - Static SQL for entity: com.book.store.entity.Book 
[2017-09-06 19:05:05,936 - DEBUG - AbstractEntityPersister.java::3423] -  Version select: select Book_id from Book where Book_id =? 
[2017-09-06 19:05:05,936 - DEBUG - AbstractEntityPersister.java::3426] -  Snapshot select: select book_.Book_id, book_.Book_name as Book_nam2_0_, book_.Author_name as Author_n3_0_, book_.Publisher as Publishe4_0_, book_.Category as Category5_0_, book_.price as price6_0_ from Book book_ where book_.Book_id=? 
[2017-09-06 19:05:05,936 - DEBUG - DelegatingBasicLogger.java::394] -  Insert 0: insert into Book (Book_name, Author_name, Publisher, Category, price, Book_id) values (?, ?, ?, ?, ?, ?) 
[2017-09-06 19:05:05,936 - DEBUG - DelegatingBasicLogger.java::394] -  Update 0: update Book set Book_name=?, Author_name=?, Publisher=?, Category=?, price=? where Book_id=? 
[2017-09-06 19:05:05,936 - DEBUG - DelegatingBasicLogger.java::394] -  Delete 0: delete from Book where Book_id=? 
[2017-09-06 19:05:05,936 - DEBUG - QuerySpacesImpl.java::174] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3b7c80c6] 
[2017-09-06 19:05:05,936 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : bookName 
[2017-09-06 19:05:05,937 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : authorName 
[2017-09-06 19:05:05,937 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : publisherName 
[2017-09-06 19:05:05,937 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : categoryName 
[2017-09-06 19:05:05,937 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : price 
[2017-09-06 19:05:05,937 - DEBUG - FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java::76] - Building LoadPlan... 
[2017-09-06 19:05:05,937 - DEBUG - LoadQueryJoinAndFetchProcessor.java::95] - processing queryspace <gen:0> 
[2017-09-06 19:05:05,937 - DEBUG - LoadPlanTreePrinter.java::55] - LoadPlan(entity=com.book.store.entity.Book)
    - Returns
       - EntityReturnImpl(entity=com.book.store.entity.Book, querySpaceUid=<gen:0>, path=com.book.store.entity.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.book.store.entity.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {Book_id1_0_0_}
 
[2017-09-06 19:05:05,938 - DEBUG - EntityLoader.java::128] - Static select for entity com.book.store.entity.Book [NONE]: select book0_.Book_id as Book_id1_0_0_, book0_.Book_name as Book_nam2_0_0_, book0_.Author_name as Author_n3_0_0_, book0_.Publisher as Publishe4_0_0_, book0_.Category as Category5_0_0_, book0_.price as price6_0_0_ from Book book0_ where book0_.Book_id=? 
[2017-09-06 19:05:05,938 - DEBUG - QuerySpacesImpl.java::174] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7499eac7] 
[2017-09-06 19:05:05,938 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : bookName 
[2017-09-06 19:05:05,938 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : authorName 
[2017-09-06 19:05:05,938 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : publisherName 
[2017-09-06 19:05:05,938 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : categoryName 
[2017-09-06 19:05:05,938 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : price 
[2017-09-06 19:05:05,938 - DEBUG - FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java::76] - Building LoadPlan... 
[2017-09-06 19:05:05,938 - DEBUG - LoadQueryJoinAndFetchProcessor.java::95] - processing queryspace <gen:0> 
[2017-09-06 19:05:05,939 - DEBUG - LoadPlanTreePrinter.java::55] - LoadPlan(entity=com.book.store.entity.Book)
    - Returns
       - EntityReturnImpl(entity=com.book.store.entity.Book, querySpaceUid=<gen:0>, path=com.book.store.entity.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.book.store.entity.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {Book_id1_0_0_}
 
[2017-09-06 19:05:05,939 - DEBUG - EntityLoader.java::128] - Static select for entity com.book.store.entity.Book [READ]: select book0_.Book_id as Book_id1_0_0_, book0_.Book_name as Book_nam2_0_0_, book0_.Author_name as Author_n3_0_0_, book0_.Publisher as Publishe4_0_0_, book0_.Category as Category5_0_0_, book0_.price as price6_0_0_ from Book book0_ where book0_.Book_id=? 
[2017-09-06 19:05:05,939 - DEBUG - QuerySpacesImpl.java::174] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@b9d018b] 
[2017-09-06 19:05:05,939 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : bookName 
[2017-09-06 19:05:05,939 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : authorName 
[2017-09-06 19:05:05,939 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : publisherName 
[2017-09-06 19:05:05,939 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : categoryName 
[2017-09-06 19:05:05,939 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : price 
[2017-09-06 19:05:05,939 - DEBUG - FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java::76] - Building LoadPlan... 
[2017-09-06 19:05:05,940 - DEBUG - LoadQueryJoinAndFetchProcessor.java::95] - processing queryspace <gen:0> 
[2017-09-06 19:05:05,940 - DEBUG - LoadPlanTreePrinter.java::55] - LoadPlan(entity=com.book.store.entity.Book)
    - Returns
       - EntityReturnImpl(entity=com.book.store.entity.Book, querySpaceUid=<gen:0>, path=com.book.store.entity.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.book.store.entity.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {Book_id1_0_0_}
 
[2017-09-06 19:05:05,940 - DEBUG - EntityLoader.java::128] - Static select for entity com.book.store.entity.Book [UPGRADE]: select book0_.Book_id as Book_id1_0_0_, book0_.Book_name as Book_nam2_0_0_, book0_.Author_name as Author_n3_0_0_, book0_.Publisher as Publishe4_0_0_, book0_.Category as Category5_0_0_, book0_.price as price6_0_0_ from Book book0_ where book0_.Book_id=? for update 
[2017-09-06 19:05:05,940 - DEBUG - QuerySpacesImpl.java::174] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@79eeff87] 
[2017-09-06 19:05:05,940 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : bookName 
[2017-09-06 19:05:05,940 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : authorName 
[2017-09-06 19:05:05,940 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : publisherName 
[2017-09-06 19:05:05,940 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : categoryName 
[2017-09-06 19:05:05,940 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : price 
[2017-09-06 19:05:05,940 - DEBUG - FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java::76] - Building LoadPlan... 
[2017-09-06 19:05:05,941 - DEBUG - LoadQueryJoinAndFetchProcessor.java::95] - processing queryspace <gen:0> 
[2017-09-06 19:05:05,941 - DEBUG - LoadPlanTreePrinter.java::55] - LoadPlan(entity=com.book.store.entity.Book)
    - Returns
       - EntityReturnImpl(entity=com.book.store.entity.Book, querySpaceUid=<gen:0>, path=com.book.store.entity.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.book.store.entity.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {Book_id1_0_0_}
 
[2017-09-06 19:05:05,941 - DEBUG - EntityLoader.java::128] - Static select for entity com.book.store.entity.Book [UPGRADE_NOWAIT]: select book0_.Book_id as Book_id1_0_0_, book0_.Book_name as Book_nam2_0_0_, book0_.Author_name as Author_n3_0_0_, book0_.Publisher as Publishe4_0_0_, book0_.Category as Category5_0_0_, book0_.price as price6_0_0_ from Book book0_ where book0_.Book_id=? for update 
[2017-09-06 19:05:05,941 - DEBUG - QuerySpacesImpl.java::174] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@8bd076a] 
[2017-09-06 19:05:05,941 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : bookName 
[2017-09-06 19:05:05,941 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : authorName 
[2017-09-06 19:05:05,941 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : publisherName 
[2017-09-06 19:05:05,941 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : categoryName 
[2017-09-06 19:05:05,941 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : price 
[2017-09-06 19:05:05,942 - DEBUG - FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java::76] - Building LoadPlan... 
[2017-09-06 19:05:05,942 - DEBUG - LoadQueryJoinAndFetchProcessor.java::95] - processing queryspace <gen:0> 
[2017-09-06 19:05:05,942 - DEBUG - LoadPlanTreePrinter.java::55] - LoadPlan(entity=com.book.store.entity.Book)
    - Returns
       - EntityReturnImpl(entity=com.book.store.entity.Book, querySpaceUid=<gen:0>, path=com.book.store.entity.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.book.store.entity.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {Book_id1_0_0_}
 
[2017-09-06 19:05:05,942 - DEBUG - EntityLoader.java::128] - Static select for entity com.book.store.entity.Book [UPGRADE_SKIPLOCKED]: select book0_.Book_id as Book_id1_0_0_, book0_.Book_name as Book_nam2_0_0_, book0_.Author_name as Author_n3_0_0_, book0_.Publisher as Publishe4_0_0_, book0_.Category as Category5_0_0_, book0_.price as price6_0_0_ from Book book0_ where book0_.Book_id=? for update 
[2017-09-06 19:05:05,942 - DEBUG - QuerySpacesImpl.java::174] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1378eea2] 
[2017-09-06 19:05:05,942 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : bookName 
[2017-09-06 19:05:05,942 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : authorName 
[2017-09-06 19:05:05,942 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : publisherName 
[2017-09-06 19:05:05,943 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : categoryName 
[2017-09-06 19:05:05,943 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : price 
[2017-09-06 19:05:05,943 - DEBUG - FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java::76] - Building LoadPlan... 
[2017-09-06 19:05:05,943 - DEBUG - LoadQueryJoinAndFetchProcessor.java::95] - processing queryspace <gen:0> 
[2017-09-06 19:05:05,943 - DEBUG - LoadPlanTreePrinter.java::55] - LoadPlan(entity=com.book.store.entity.Book)
    - Returns
       - EntityReturnImpl(entity=com.book.store.entity.Book, querySpaceUid=<gen:0>, path=com.book.store.entity.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.book.store.entity.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {Book_id1_0_0_}
 
[2017-09-06 19:05:05,943 - DEBUG - EntityLoader.java::128] - Static select for entity com.book.store.entity.Book [FORCE]: select book0_.Book_id as Book_id1_0_0_, book0_.Book_name as Book_nam2_0_0_, book0_.Author_name as Author_n3_0_0_, book0_.Publisher as Publishe4_0_0_, book0_.Category as Category5_0_0_, book0_.price as price6_0_0_ from Book book0_ where book0_.Book_id=? for update 
[2017-09-06 19:05:05,943 - DEBUG - QuerySpacesImpl.java::174] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@66522ead] 
[2017-09-06 19:05:05,944 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : bookName 
[2017-09-06 19:05:05,944 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : authorName 
[2017-09-06 19:05:05,944 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : publisherName 
[2017-09-06 19:05:05,944 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : categoryName 
[2017-09-06 19:05:05,944 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : price 
[2017-09-06 19:05:05,944 - DEBUG - FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java::76] - Building LoadPlan... 
[2017-09-06 19:05:05,944 - DEBUG - LoadQueryJoinAndFetchProcessor.java::95] - processing queryspace <gen:0> 
[2017-09-06 19:05:05,944 - DEBUG - LoadPlanTreePrinter.java::55] - LoadPlan(entity=com.book.store.entity.Book)
    - Returns
       - EntityReturnImpl(entity=com.book.store.entity.Book, querySpaceUid=<gen:0>, path=com.book.store.entity.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.book.store.entity.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {Book_id1_0_0_}
 
[2017-09-06 19:05:05,944 - DEBUG - EntityLoader.java::128] - Static select for entity com.book.store.entity.Book [PESSIMISTIC_READ]: select book0_.Book_id as Book_id1_0_0_, book0_.Book_name as Book_nam2_0_0_, book0_.Author_name as Author_n3_0_0_, book0_.Publisher as Publishe4_0_0_, book0_.Category as Category5_0_0_, book0_.price as price6_0_0_ from Book book0_ where book0_.Book_id=? lock in share mode 
[2017-09-06 19:05:05,945 - DEBUG - QuerySpacesImpl.java::174] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@e91b4f4] 
[2017-09-06 19:05:05,945 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : bookName 
[2017-09-06 19:05:05,945 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : authorName 
[2017-09-06 19:05:05,945 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : publisherName 
[2017-09-06 19:05:05,945 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : categoryName 
[2017-09-06 19:05:05,945 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : price 
[2017-09-06 19:05:05,945 - DEBUG - FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java::76] - Building LoadPlan... 
[2017-09-06 19:05:05,945 - DEBUG - LoadQueryJoinAndFetchProcessor.java::95] - processing queryspace <gen:0> 
[2017-09-06 19:05:05,946 - DEBUG - LoadPlanTreePrinter.java::55] - LoadPlan(entity=com.book.store.entity.Book)
    - Returns
       - EntityReturnImpl(entity=com.book.store.entity.Book, querySpaceUid=<gen:0>, path=com.book.store.entity.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.book.store.entity.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {Book_id1_0_0_}
 
[2017-09-06 19:05:05,946 - DEBUG - EntityLoader.java::128] - Static select for entity com.book.store.entity.Book [PESSIMISTIC_WRITE]: select book0_.Book_id as Book_id1_0_0_, book0_.Book_name as Book_nam2_0_0_, book0_.Author_name as Author_n3_0_0_, book0_.Publisher as Publishe4_0_0_, book0_.Category as Category5_0_0_, book0_.price as price6_0_0_ from Book book0_ where book0_.Book_id=? for update 
[2017-09-06 19:05:05,946 - DEBUG - QuerySpacesImpl.java::174] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@58ae402b] 
[2017-09-06 19:05:05,946 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : bookName 
[2017-09-06 19:05:05,946 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : authorName 
[2017-09-06 19:05:05,946 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : publisherName 
[2017-09-06 19:05:05,946 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : categoryName 
[2017-09-06 19:05:05,946 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : price 
[2017-09-06 19:05:05,946 - DEBUG - FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java::76] - Building LoadPlan... 
[2017-09-06 19:05:05,946 - DEBUG - LoadQueryJoinAndFetchProcessor.java::95] - processing queryspace <gen:0> 
[2017-09-06 19:05:05,947 - DEBUG - LoadPlanTreePrinter.java::55] - LoadPlan(entity=com.book.store.entity.Book)
    - Returns
       - EntityReturnImpl(entity=com.book.store.entity.Book, querySpaceUid=<gen:0>, path=com.book.store.entity.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.book.store.entity.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {Book_id1_0_0_}
 
[2017-09-06 19:05:05,947 - DEBUG - EntityLoader.java::128] - Static select for entity com.book.store.entity.Book [PESSIMISTIC_FORCE_INCREMENT]: select book0_.Book_id as Book_id1_0_0_, book0_.Book_name as Book_nam2_0_0_, book0_.Author_name as Author_n3_0_0_, book0_.Publisher as Publishe4_0_0_, book0_.Category as Category5_0_0_, book0_.price as price6_0_0_ from Book book0_ where book0_.Book_id=? for update 
[2017-09-06 19:05:05,947 - DEBUG - QuerySpacesImpl.java::174] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@43ac0a68] 
[2017-09-06 19:05:05,947 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : bookName 
[2017-09-06 19:05:05,947 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : authorName 
[2017-09-06 19:05:05,947 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : publisherName 
[2017-09-06 19:05:05,947 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : categoryName 
[2017-09-06 19:05:05,947 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : price 
[2017-09-06 19:05:05,948 - DEBUG - FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java::76] - Building LoadPlan... 
[2017-09-06 19:05:05,948 - DEBUG - LoadQueryJoinAndFetchProcessor.java::95] - processing queryspace <gen:0> 
[2017-09-06 19:05:05,948 - DEBUG - LoadPlanTreePrinter.java::55] - LoadPlan(entity=com.book.store.entity.Book)
    - Returns
       - EntityReturnImpl(entity=com.book.store.entity.Book, querySpaceUid=<gen:0>, path=com.book.store.entity.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.book.store.entity.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {Book_id1_0_0_}
 
[2017-09-06 19:05:05,948 - DEBUG - EntityLoader.java::128] - Static select for entity com.book.store.entity.Book [OPTIMISTIC]: select book0_.Book_id as Book_id1_0_0_, book0_.Book_name as Book_nam2_0_0_, book0_.Author_name as Author_n3_0_0_, book0_.Publisher as Publishe4_0_0_, book0_.Category as Category5_0_0_, book0_.price as price6_0_0_ from Book book0_ where book0_.Book_id=? 
[2017-09-06 19:05:05,948 - DEBUG - QuerySpacesImpl.java::174] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3728a578] 
[2017-09-06 19:05:05,948 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : bookName 
[2017-09-06 19:05:05,948 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : authorName 
[2017-09-06 19:05:05,949 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : publisherName 
[2017-09-06 19:05:05,949 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : categoryName 
[2017-09-06 19:05:05,949 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : price 
[2017-09-06 19:05:05,949 - DEBUG - FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java::76] - Building LoadPlan... 
[2017-09-06 19:05:05,949 - DEBUG - LoadQueryJoinAndFetchProcessor.java::95] - processing queryspace <gen:0> 
[2017-09-06 19:05:05,949 - DEBUG - LoadPlanTreePrinter.java::55] - LoadPlan(entity=com.book.store.entity.Book)
    - Returns
       - EntityReturnImpl(entity=com.book.store.entity.Book, querySpaceUid=<gen:0>, path=com.book.store.entity.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.book.store.entity.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {Book_id1_0_0_}
 
[2017-09-06 19:05:05,949 - DEBUG - EntityLoader.java::128] - Static select for entity com.book.store.entity.Book [OPTIMISTIC_FORCE_INCREMENT]: select book0_.Book_id as Book_id1_0_0_, book0_.Book_name as Book_nam2_0_0_, book0_.Author_name as Author_n3_0_0_, book0_.Publisher as Publishe4_0_0_, book0_.Category as Category5_0_0_, book0_.price as price6_0_0_ from Book book0_ where book0_.Book_id=? 
[2017-09-06 19:05:05,949 - DEBUG - CascadeEntityLoader.java::38] - Static select for action ACTION_MERGE on entity com.book.store.entity.Book: select book0_.Book_id as Book_id1_0_0_, book0_.Book_name as Book_nam2_0_0_, book0_.Author_name as Author_n3_0_0_, book0_.Publisher as Publishe4_0_0_, book0_.Category as Category5_0_0_, book0_.price as price6_0_0_ from Book book0_ where book0_.Book_id=? 
[2017-09-06 19:05:05,950 - DEBUG - CascadeEntityLoader.java::38] - Static select for action ACTION_REFRESH on entity com.book.store.entity.Book: select book0_.Book_id as Book_id1_0_0_, book0_.Book_name as Book_nam2_0_0_, book0_.Author_name as Author_n3_0_0_, book0_.Publisher as Publishe4_0_0_, book0_.Category as Category5_0_0_, book0_.price as price6_0_0_ from Book book0_ where book0_.Book_id=? 
[2017-09-06 19:05:05,950 - DEBUG - AbstractEntityPersister.java::3418] - Static SQL for entity: com.book.store.entity.Purchase 
[2017-09-06 19:05:05,950 - DEBUG - AbstractEntityPersister.java::3423] -  Version select: select Purchase_no from Purchase where Purchase_no =? 
[2017-09-06 19:05:05,950 - DEBUG - AbstractEntityPersister.java::3426] -  Snapshot select: select purchase_.Purchase_no, purchase_.Book_id as Book_id2_1_, purchase_.Customer_name as Customer3_1_, purchase_.Customer_mobileno as Customer4_1_, purchase_.Purchase_date as Purchase5_1_, purchase_.Amount as Amount6_1_ from Purchase purchase_ where purchase_.Purchase_no=? 
[2017-09-06 19:05:05,950 - DEBUG - DelegatingBasicLogger.java::394] -  Insert 0: insert into Purchase (Book_id, Customer_name, Customer_mobileno, Purchase_date, Amount, Purchase_no) values (?, ?, ?, ?, ?, ?) 
[2017-09-06 19:05:05,950 - DEBUG - DelegatingBasicLogger.java::394] -  Update 0: update Purchase set Book_id=?, Customer_name=?, Customer_mobileno=?, Purchase_date=?, Amount=? where Purchase_no=? 
[2017-09-06 19:05:05,950 - DEBUG - DelegatingBasicLogger.java::394] -  Delete 0: delete from Purchase where Purchase_no=? 
[2017-09-06 19:05:05,950 - DEBUG - AbstractEntityPersister.java::3434] -  Identity insert: insert into Purchase (Book_id, Customer_name, Customer_mobileno, Purchase_date, Amount) values (?, ?, ?, ?, ?) 
[2017-09-06 19:05:05,950 - DEBUG - QuerySpacesImpl.java::174] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1de0641b] 
[2017-09-06 19:05:05,951 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : bookId 
[2017-09-06 19:05:05,951 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : customerName 
[2017-09-06 19:05:05,951 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : customerMobileNumber 
[2017-09-06 19:05:05,951 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : purchaseDate 
[2017-09-06 19:05:05,951 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : amount 
[2017-09-06 19:05:05,951 - DEBUG - FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java::76] - Building LoadPlan... 
[2017-09-06 19:05:05,951 - DEBUG - LoadQueryJoinAndFetchProcessor.java::95] - processing queryspace <gen:0> 
[2017-09-06 19:05:05,951 - DEBUG - LoadPlanTreePrinter.java::55] - LoadPlan(entity=com.book.store.entity.Purchase)
    - Returns
       - EntityReturnImpl(entity=com.book.store.entity.Purchase, querySpaceUid=<gen:0>, path=com.book.store.entity.Purchase)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.book.store.entity.Purchase)
          - SQL table alias mapping - purchase0_
          - alias suffix - 0_
          - suffixed key columns - {Purchase1_1_0_}
 
[2017-09-06 19:05:05,951 - DEBUG - EntityLoader.java::128] - Static select for entity com.book.store.entity.Purchase [NONE]: select purchase0_.Purchase_no as Purchase1_1_0_, purchase0_.Book_id as Book_id2_1_0_, purchase0_.Customer_name as Customer3_1_0_, purchase0_.Customer_mobileno as Customer4_1_0_, purchase0_.Purchase_date as Purchase5_1_0_, purchase0_.Amount as Amount6_1_0_ from Purchase purchase0_ where purchase0_.Purchase_no=? 
[2017-09-06 19:05:05,952 - DEBUG - QuerySpacesImpl.java::174] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1a464fa3] 
[2017-09-06 19:05:05,952 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : bookId 
[2017-09-06 19:05:05,952 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : customerName 
[2017-09-06 19:05:05,952 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : customerMobileNumber 
[2017-09-06 19:05:05,952 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : purchaseDate 
[2017-09-06 19:05:05,952 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : amount 
[2017-09-06 19:05:05,952 - DEBUG - FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java::76] - Building LoadPlan... 
[2017-09-06 19:05:05,952 - DEBUG - LoadQueryJoinAndFetchProcessor.java::95] - processing queryspace <gen:0> 
[2017-09-06 19:05:05,953 - DEBUG - LoadPlanTreePrinter.java::55] - LoadPlan(entity=com.book.store.entity.Purchase)
    - Returns
       - EntityReturnImpl(entity=com.book.store.entity.Purchase, querySpaceUid=<gen:0>, path=com.book.store.entity.Purchase)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.book.store.entity.Purchase)
          - SQL table alias mapping - purchase0_
          - alias suffix - 0_
          - suffixed key columns - {Purchase1_1_0_}
 
[2017-09-06 19:05:05,953 - DEBUG - EntityLoader.java::128] - Static select for entity com.book.store.entity.Purchase [READ]: select purchase0_.Purchase_no as Purchase1_1_0_, purchase0_.Book_id as Book_id2_1_0_, purchase0_.Customer_name as Customer3_1_0_, purchase0_.Customer_mobileno as Customer4_1_0_, purchase0_.Purchase_date as Purchase5_1_0_, purchase0_.Amount as Amount6_1_0_ from Purchase purchase0_ where purchase0_.Purchase_no=? 
[2017-09-06 19:05:05,953 - DEBUG - QuerySpacesImpl.java::174] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5ccb85d6] 
[2017-09-06 19:05:05,953 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : bookId 
[2017-09-06 19:05:05,953 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : customerName 
[2017-09-06 19:05:05,953 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : customerMobileNumber 
[2017-09-06 19:05:05,953 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : purchaseDate 
[2017-09-06 19:05:05,953 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : amount 
[2017-09-06 19:05:05,953 - DEBUG - FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java::76] - Building LoadPlan... 
[2017-09-06 19:05:05,954 - DEBUG - LoadQueryJoinAndFetchProcessor.java::95] - processing queryspace <gen:0> 
[2017-09-06 19:05:05,954 - DEBUG - LoadPlanTreePrinter.java::55] - LoadPlan(entity=com.book.store.entity.Purchase)
    - Returns
       - EntityReturnImpl(entity=com.book.store.entity.Purchase, querySpaceUid=<gen:0>, path=com.book.store.entity.Purchase)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.book.store.entity.Purchase)
          - SQL table alias mapping - purchase0_
          - alias suffix - 0_
          - suffixed key columns - {Purchase1_1_0_}
 
[2017-09-06 19:05:05,954 - DEBUG - EntityLoader.java::128] - Static select for entity com.book.store.entity.Purchase [UPGRADE]: select purchase0_.Purchase_no as Purchase1_1_0_, purchase0_.Book_id as Book_id2_1_0_, purchase0_.Customer_name as Customer3_1_0_, purchase0_.Customer_mobileno as Customer4_1_0_, purchase0_.Purchase_date as Purchase5_1_0_, purchase0_.Amount as Amount6_1_0_ from Purchase purchase0_ where purchase0_.Purchase_no=? for update 
[2017-09-06 19:05:05,954 - DEBUG - QuerySpacesImpl.java::174] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@259b85d6] 
[2017-09-06 19:05:05,954 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : bookId 
[2017-09-06 19:05:05,954 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : customerName 
[2017-09-06 19:05:05,954 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : customerMobileNumber 
[2017-09-06 19:05:05,954 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : purchaseDate 
[2017-09-06 19:05:05,954 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : amount 
[2017-09-06 19:05:05,955 - DEBUG - FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java::76] - Building LoadPlan... 
[2017-09-06 19:05:05,955 - DEBUG - LoadQueryJoinAndFetchProcessor.java::95] - processing queryspace <gen:0> 
[2017-09-06 19:05:05,955 - DEBUG - LoadPlanTreePrinter.java::55] - LoadPlan(entity=com.book.store.entity.Purchase)
    - Returns
       - EntityReturnImpl(entity=com.book.store.entity.Purchase, querySpaceUid=<gen:0>, path=com.book.store.entity.Purchase)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.book.store.entity.Purchase)
          - SQL table alias mapping - purchase0_
          - alias suffix - 0_
          - suffixed key columns - {Purchase1_1_0_}
 
[2017-09-06 19:05:05,955 - DEBUG - EntityLoader.java::128] - Static select for entity com.book.store.entity.Purchase [UPGRADE_NOWAIT]: select purchase0_.Purchase_no as Purchase1_1_0_, purchase0_.Book_id as Book_id2_1_0_, purchase0_.Customer_name as Customer3_1_0_, purchase0_.Customer_mobileno as Customer4_1_0_, purchase0_.Purchase_date as Purchase5_1_0_, purchase0_.Amount as Amount6_1_0_ from Purchase purchase0_ where purchase0_.Purchase_no=? for update 
[2017-09-06 19:05:05,955 - DEBUG - QuerySpacesImpl.java::174] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@488f3dd1] 
[2017-09-06 19:05:05,955 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : bookId 
[2017-09-06 19:05:05,955 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : customerName 
[2017-09-06 19:05:05,956 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : customerMobileNumber 
[2017-09-06 19:05:05,956 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : purchaseDate 
[2017-09-06 19:05:05,956 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : amount 
[2017-09-06 19:05:05,956 - DEBUG - FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java::76] - Building LoadPlan... 
[2017-09-06 19:05:05,956 - DEBUG - LoadQueryJoinAndFetchProcessor.java::95] - processing queryspace <gen:0> 
[2017-09-06 19:05:05,956 - DEBUG - LoadPlanTreePrinter.java::55] - LoadPlan(entity=com.book.store.entity.Purchase)
    - Returns
       - EntityReturnImpl(entity=com.book.store.entity.Purchase, querySpaceUid=<gen:0>, path=com.book.store.entity.Purchase)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.book.store.entity.Purchase)
          - SQL table alias mapping - purchase0_
          - alias suffix - 0_
          - suffixed key columns - {Purchase1_1_0_}
 
[2017-09-06 19:05:05,956 - DEBUG - EntityLoader.java::128] - Static select for entity com.book.store.entity.Purchase [UPGRADE_SKIPLOCKED]: select purchase0_.Purchase_no as Purchase1_1_0_, purchase0_.Book_id as Book_id2_1_0_, purchase0_.Customer_name as Customer3_1_0_, purchase0_.Customer_mobileno as Customer4_1_0_, purchase0_.Purchase_date as Purchase5_1_0_, purchase0_.Amount as Amount6_1_0_ from Purchase purchase0_ where purchase0_.Purchase_no=? for update 
[2017-09-06 19:05:05,956 - DEBUG - QuerySpacesImpl.java::174] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7bc58891] 
[2017-09-06 19:05:05,956 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : bookId 
[2017-09-06 19:05:05,957 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : customerName 
[2017-09-06 19:05:05,957 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : customerMobileNumber 
[2017-09-06 19:05:05,957 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : purchaseDate 
[2017-09-06 19:05:05,957 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : amount 
[2017-09-06 19:05:05,957 - DEBUG - FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java::76] - Building LoadPlan... 
[2017-09-06 19:05:05,957 - DEBUG - LoadQueryJoinAndFetchProcessor.java::95] - processing queryspace <gen:0> 
[2017-09-06 19:05:05,957 - DEBUG - LoadPlanTreePrinter.java::55] - LoadPlan(entity=com.book.store.entity.Purchase)
    - Returns
       - EntityReturnImpl(entity=com.book.store.entity.Purchase, querySpaceUid=<gen:0>, path=com.book.store.entity.Purchase)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.book.store.entity.Purchase)
          - SQL table alias mapping - purchase0_
          - alias suffix - 0_
          - suffixed key columns - {Purchase1_1_0_}
 
[2017-09-06 19:05:05,957 - DEBUG - EntityLoader.java::128] - Static select for entity com.book.store.entity.Purchase [FORCE]: select purchase0_.Purchase_no as Purchase1_1_0_, purchase0_.Book_id as Book_id2_1_0_, purchase0_.Customer_name as Customer3_1_0_, purchase0_.Customer_mobileno as Customer4_1_0_, purchase0_.Purchase_date as Purchase5_1_0_, purchase0_.Amount as Amount6_1_0_ from Purchase purchase0_ where purchase0_.Purchase_no=? for update 
[2017-09-06 19:05:05,957 - DEBUG - QuerySpacesImpl.java::174] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@554188ac] 
[2017-09-06 19:05:05,958 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : bookId 
[2017-09-06 19:05:05,958 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : customerName 
[2017-09-06 19:05:05,958 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : customerMobileNumber 
[2017-09-06 19:05:05,958 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : purchaseDate 
[2017-09-06 19:05:05,958 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : amount 
[2017-09-06 19:05:05,958 - DEBUG - FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java::76] - Building LoadPlan... 
[2017-09-06 19:05:05,958 - DEBUG - LoadQueryJoinAndFetchProcessor.java::95] - processing queryspace <gen:0> 
[2017-09-06 19:05:05,958 - DEBUG - LoadPlanTreePrinter.java::55] - LoadPlan(entity=com.book.store.entity.Purchase)
    - Returns
       - EntityReturnImpl(entity=com.book.store.entity.Purchase, querySpaceUid=<gen:0>, path=com.book.store.entity.Purchase)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.book.store.entity.Purchase)
          - SQL table alias mapping - purchase0_
          - alias suffix - 0_
          - suffixed key columns - {Purchase1_1_0_}
 
[2017-09-06 19:05:05,958 - DEBUG - EntityLoader.java::128] - Static select for entity com.book.store.entity.Purchase [PESSIMISTIC_READ]: select purchase0_.Purchase_no as Purchase1_1_0_, purchase0_.Book_id as Book_id2_1_0_, purchase0_.Customer_name as Customer3_1_0_, purchase0_.Customer_mobileno as Customer4_1_0_, purchase0_.Purchase_date as Purchase5_1_0_, purchase0_.Amount as Amount6_1_0_ from Purchase purchase0_ where purchase0_.Purchase_no=? lock in share mode 
[2017-09-06 19:05:05,959 - DEBUG - QuerySpacesImpl.java::174] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@481558ce] 
[2017-09-06 19:05:05,959 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : bookId 
[2017-09-06 19:05:05,959 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : customerName 
[2017-09-06 19:05:05,959 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : customerMobileNumber 
[2017-09-06 19:05:05,959 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : purchaseDate 
[2017-09-06 19:05:05,959 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : amount 
[2017-09-06 19:05:05,959 - DEBUG - FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java::76] - Building LoadPlan... 
[2017-09-06 19:05:05,959 - DEBUG - LoadQueryJoinAndFetchProcessor.java::95] - processing queryspace <gen:0> 
[2017-09-06 19:05:05,959 - DEBUG - LoadPlanTreePrinter.java::55] - LoadPlan(entity=com.book.store.entity.Purchase)
    - Returns
       - EntityReturnImpl(entity=com.book.store.entity.Purchase, querySpaceUid=<gen:0>, path=com.book.store.entity.Purchase)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.book.store.entity.Purchase)
          - SQL table alias mapping - purchase0_
          - alias suffix - 0_
          - suffixed key columns - {Purchase1_1_0_}
 
[2017-09-06 19:05:05,960 - DEBUG - EntityLoader.java::128] - Static select for entity com.book.store.entity.Purchase [PESSIMISTIC_WRITE]: select purchase0_.Purchase_no as Purchase1_1_0_, purchase0_.Book_id as Book_id2_1_0_, purchase0_.Customer_name as Customer3_1_0_, purchase0_.Customer_mobileno as Customer4_1_0_, purchase0_.Purchase_date as Purchase5_1_0_, purchase0_.Amount as Amount6_1_0_ from Purchase purchase0_ where purchase0_.Purchase_no=? for update 
[2017-09-06 19:05:05,960 - DEBUG - QuerySpacesImpl.java::174] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7f353a0f] 
[2017-09-06 19:05:05,960 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : bookId 
[2017-09-06 19:05:05,960 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : customerName 
[2017-09-06 19:05:05,960 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : customerMobileNumber 
[2017-09-06 19:05:05,960 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : purchaseDate 
[2017-09-06 19:05:05,960 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : amount 
[2017-09-06 19:05:05,960 - DEBUG - FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java::76] - Building LoadPlan... 
[2017-09-06 19:05:05,960 - DEBUG - LoadQueryJoinAndFetchProcessor.java::95] - processing queryspace <gen:0> 
[2017-09-06 19:05:05,961 - DEBUG - LoadPlanTreePrinter.java::55] - LoadPlan(entity=com.book.store.entity.Purchase)
    - Returns
       - EntityReturnImpl(entity=com.book.store.entity.Purchase, querySpaceUid=<gen:0>, path=com.book.store.entity.Purchase)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.book.store.entity.Purchase)
          - SQL table alias mapping - purchase0_
          - alias suffix - 0_
          - suffixed key columns - {Purchase1_1_0_}
 
[2017-09-06 19:05:05,961 - DEBUG - EntityLoader.java::128] - Static select for entity com.book.store.entity.Purchase [PESSIMISTIC_FORCE_INCREMENT]: select purchase0_.Purchase_no as Purchase1_1_0_, purchase0_.Book_id as Book_id2_1_0_, purchase0_.Customer_name as Customer3_1_0_, purchase0_.Customer_mobileno as Customer4_1_0_, purchase0_.Purchase_date as Purchase5_1_0_, purchase0_.Amount as Amount6_1_0_ from Purchase purchase0_ where purchase0_.Purchase_no=? for update 
[2017-09-06 19:05:05,961 - DEBUG - QuerySpacesImpl.java::174] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1c93b51e] 
[2017-09-06 19:05:05,961 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : bookId 
[2017-09-06 19:05:05,961 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : customerName 
[2017-09-06 19:05:05,961 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : customerMobileNumber 
[2017-09-06 19:05:05,961 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : purchaseDate 
[2017-09-06 19:05:05,961 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : amount 
[2017-09-06 19:05:05,961 - DEBUG - FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java::76] - Building LoadPlan... 
[2017-09-06 19:05:05,961 - DEBUG - LoadQueryJoinAndFetchProcessor.java::95] - processing queryspace <gen:0> 
[2017-09-06 19:05:05,962 - DEBUG - LoadPlanTreePrinter.java::55] - LoadPlan(entity=com.book.store.entity.Purchase)
    - Returns
       - EntityReturnImpl(entity=com.book.store.entity.Purchase, querySpaceUid=<gen:0>, path=com.book.store.entity.Purchase)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.book.store.entity.Purchase)
          - SQL table alias mapping - purchase0_
          - alias suffix - 0_
          - suffixed key columns - {Purchase1_1_0_}
 
[2017-09-06 19:05:05,962 - DEBUG - EntityLoader.java::128] - Static select for entity com.book.store.entity.Purchase [OPTIMISTIC]: select purchase0_.Purchase_no as Purchase1_1_0_, purchase0_.Book_id as Book_id2_1_0_, purchase0_.Customer_name as Customer3_1_0_, purchase0_.Customer_mobileno as Customer4_1_0_, purchase0_.Purchase_date as Purchase5_1_0_, purchase0_.Amount as Amount6_1_0_ from Purchase purchase0_ where purchase0_.Purchase_no=? 
[2017-09-06 19:05:05,962 - DEBUG - QuerySpacesImpl.java::174] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2abc8034] 
[2017-09-06 19:05:05,962 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : bookId 
[2017-09-06 19:05:05,962 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : customerName 
[2017-09-06 19:05:05,962 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : customerMobileNumber 
[2017-09-06 19:05:05,962 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : purchaseDate 
[2017-09-06 19:05:05,962 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : amount 
[2017-09-06 19:05:05,962 - DEBUG - FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java::76] - Building LoadPlan... 
[2017-09-06 19:05:05,963 - DEBUG - LoadQueryJoinAndFetchProcessor.java::95] - processing queryspace <gen:0> 
[2017-09-06 19:05:05,963 - DEBUG - LoadPlanTreePrinter.java::55] - LoadPlan(entity=com.book.store.entity.Purchase)
    - Returns
       - EntityReturnImpl(entity=com.book.store.entity.Purchase, querySpaceUid=<gen:0>, path=com.book.store.entity.Purchase)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.book.store.entity.Purchase)
          - SQL table alias mapping - purchase0_
          - alias suffix - 0_
          - suffixed key columns - {Purchase1_1_0_}
 
[2017-09-06 19:05:05,963 - DEBUG - EntityLoader.java::128] - Static select for entity com.book.store.entity.Purchase [OPTIMISTIC_FORCE_INCREMENT]: select purchase0_.Purchase_no as Purchase1_1_0_, purchase0_.Book_id as Book_id2_1_0_, purchase0_.Customer_name as Customer3_1_0_, purchase0_.Customer_mobileno as Customer4_1_0_, purchase0_.Purchase_date as Purchase5_1_0_, purchase0_.Amount as Amount6_1_0_ from Purchase purchase0_ where purchase0_.Purchase_no=? 
[2017-09-06 19:05:05,963 - DEBUG - CascadeEntityLoader.java::38] - Static select for action ACTION_MERGE on entity com.book.store.entity.Purchase: select purchase0_.Purchase_no as Purchase1_1_0_, purchase0_.Book_id as Book_id2_1_0_, purchase0_.Customer_name as Customer3_1_0_, purchase0_.Customer_mobileno as Customer4_1_0_, purchase0_.Purchase_date as Purchase5_1_0_, purchase0_.Amount as Amount6_1_0_ from Purchase purchase0_ where purchase0_.Purchase_no=? 
[2017-09-06 19:05:05,963 - DEBUG - CascadeEntityLoader.java::38] - Static select for action ACTION_REFRESH on entity com.book.store.entity.Purchase: select purchase0_.Purchase_no as Purchase1_1_0_, purchase0_.Book_id as Book_id2_1_0_, purchase0_.Customer_name as Customer3_1_0_, purchase0_.Customer_mobileno as Customer4_1_0_, purchase0_.Purchase_date as Purchase5_1_0_, purchase0_.Amount as Amount6_1_0_ from Purchase purchase0_ where purchase0_.Purchase_no=? 
[2017-09-06 19:05:05,963 - DEBUG - SessionFactoryImpl.java::462] - Instantiated session factory 
[2017-09-06 19:05:05,963 - INFO - SchemaUpdate.java::101] - HHH000228: Running hbm2ddl schema update 
[2017-09-06 19:05:05,981 - DEBUG - Table.java::478] - No alter strings for table : Book 
[2017-09-06 19:05:05,990 - DEBUG - Table.java::478] - No alter strings for table : Purchase 
[2017-09-06 19:05:05,992 - DEBUG - JtaPlatformInitiator.java::42] - No JtaPlatform was specified, checking resolver 
[2017-09-06 19:05:05,992 - DEBUG - JtaPlatformResolverInitiator.java::33] - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver] 
[2017-09-06 19:05:05,993 - DEBUG - StandardJtaPlatformResolver.java::101] - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform] 
[2017-09-06 19:05:05,993 - DEBUG - NamedQueryRepository.java::149] - Checking 0 named HQL queries 
[2017-09-06 19:05:05,994 - DEBUG - NamedQueryRepository.java::165] - Checking 0 named SQL queries 
[2017-09-06 19:05:05,994 - DEBUG - SessionFactoryRegistry.java::74] - Registering SessionFactory: 5fcd83d2-1e69-4ad7-b13a-378200e6fda9 (<unnamed>) 
[2017-09-06 19:05:05,994 - DEBUG - SessionFactoryRegistry.java::81] - Not binding SessionFactory to JNDI, no JNDI name configured 
[2017-09-06 19:05:05,994 - DEBUG - StatisticsInitiator.java::82] - Statistics initialized [enabled=false] 
[2017-09-06 19:05:05,994 - DEBUG - QueryTranslatorFactoryInitiator.java::45] - QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@d2387c8 
[2017-09-06 19:05:05,995 - INFO - QueryTranslatorFactoryInitiator.java::47] - HHH000397: Using ASTQueryTranslatorFactory 
[2017-09-06 19:05:05,995 - DEBUG - QueryTranslatorImpl.java::278] - parse() - HQL: select bookId from com.book.store.entity.Book 
[2017-09-06 19:05:05,996 - DEBUG - QueryTranslatorImpl.java::296] - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     \-[DOT] Node: '.'
       |        +-[DOT] Node: '.'
       |        |  +-[DOT] Node: '.'
       |        |  |  +-[DOT] Node: '.'
       |        |  |  |  +-[IDENT] Node: 'com'
       |        |  |  |  \-[IDENT] Node: 'book'
       |        |  |  \-[IDENT] Node: 'store'
       |        |  \-[IDENT] Node: 'entity'
       |        \-[IDENT] Node: 'Book'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'bookId'
 
[2017-09-06 19:05:05,996 - DEBUG - ErrorCounter.java::95] - throwQueryException() : no errors 
[2017-09-06 19:05:05,996 - DEBUG - HqlSqlBaseWalker.java::121] - select << begin [level=1, statement=select] 
[2017-09-06 19:05:05,997 - DEBUG - FromElement.java::145] - FromClause{level=1} : com.book.store.entity.Book (<no alias>) -> book0_ 
[2017-09-06 19:05:05,997 - DEBUG - FromReferenceNode.java::60] - Resolved : {synthetic-alias} -> {synthetic-alias} 
[2017-09-06 19:05:05,997 - DEBUG - DotNode.java::654] - getDataType() : bookId -> org.hibernate.type.IntegerType@793f29ff 
[2017-09-06 19:05:05,997 - DEBUG - FromReferenceNode.java::60] - Resolved : {synthetic-alias}.bookId -> book0_.Book_id 
[2017-09-06 19:05:05,997 - DEBUG - HqlSqlBaseWalker.java::125] - select : finishing up [level=1, statement=select] 
[2017-09-06 19:05:05,997 - DEBUG - HqlSqlWalker.java::654] - processQuery() :  ( SELECT ( {select clause} ( book0_.Book_id {synthetic-alias} bookId ) ) ( FromClause{level=1} Book book0_ ) ) 
[2017-09-06 19:05:05,997 - DEBUG - JoinProcessor.java::169] - Using FROM fragment [Book book0_] 
[2017-09-06 19:05:05,998 - DEBUG - HqlSqlBaseWalker.java::129] - select >> end [level=1, statement=select] 
[2017-09-06 19:05:05,998 - DEBUG - QueryTranslatorImpl.java::265] - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Book)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'book0_.Book_id' {propertyName=bookId,dereferenceType=PRIMITIVE,getPropertyPath=bookId,path={synthetic-alias}.bookId,tableAlias=book0_,className=com.book.store.entity.Book,classAlias=null}
    |  |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
    |  |  \-[IDENT] IdentNode: 'bookId' {originalText=bookId}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[book0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Book book0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Book,tableAlias=book0_,origin=null,columns={,className=com.book.store.entity.Book}}
 
[2017-09-06 19:05:05,998 - DEBUG - ErrorCounter.java::95] - throwQueryException() : no errors 
[2017-09-06 19:05:05,998 - DEBUG - QueryTranslatorImpl.java::247] - HQL: select bookId from com.book.store.entity.Book 
[2017-09-06 19:05:05,998 - DEBUG - QueryTranslatorImpl.java::248] - SQL: select book0_.Book_id as col_0_0_ from Book book0_ 
[2017-09-06 19:05:05,998 - DEBUG - ErrorCounter.java::95] - throwQueryException() : no errors 
[2017-09-06 19:05:05,998 - DEBUG - SqlStatementLogger.java::92] - select book0_.Book_id as col_0_0_ from Book book0_ 
[2017-09-06 19:05:05,999 - DEBUG - DelegatingBasicLogger.java::384] - Result set row: 0 
[2017-09-06 19:05:05,999 - DEBUG - Loader.java::1514] - Result row:  
[2017-09-06 19:05:05,999 - DEBUG - DelegatingBasicLogger.java::384] - Result set row: 1 
[2017-09-06 19:05:05,999 - DEBUG - Loader.java::1514] - Result row:  
[2017-09-06 19:05:06,000 - DEBUG - DelegatingBasicLogger.java::384] - Result set row: 2 
[2017-09-06 19:05:06,000 - DEBUG - Loader.java::1514] - Result row:  
[2017-09-06 19:05:06,000 - DEBUG - DelegatingBasicLogger.java::384] - Result set row: 3 
[2017-09-06 19:05:06,000 - DEBUG - Loader.java::1514] - Result row:  
[2017-09-06 19:05:06,000 - DEBUG - DelegatingBasicLogger.java::384] - Result set row: 4 
[2017-09-06 19:05:06,000 - DEBUG - Loader.java::1514] - Result row:  
[2017-09-06 19:05:06,003 - DEBUG - DelegatingBasicLogger.java::384] - Result set row: 5 
[2017-09-06 19:05:06,003 - DEBUG - Loader.java::1514] - Result row:  
[2017-09-06 19:05:06,003 - DEBUG - IntegratorServiceImpl.java::46] - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator]. 
[2017-09-06 19:05:06,003 - DEBUG - IntegratorServiceImpl.java::46] - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator]. 
[2017-09-06 19:05:06,004 - DEBUG - IntegratorServiceImpl.java::46] - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator]. 
[2017-09-06 19:05:06,005 - DEBUG - LocalXmlResourceResolver.java::57] - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd createDatabaseIfNotExist=true] 
[2017-09-06 19:05:06,006 - WARN - LocalXmlResourceResolver.java::91] - HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-configuration. Use namespace http://www.hibernate.org/dtd/hibernate-configuration instead.  Support for obsolete DTD/XSD namespaces may be removed at any time. 
[2017-09-06 19:05:06,006 - DEBUG - LocalXmlResourceResolver.java::95] - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/ 
[2017-09-06 19:05:06,006 - DEBUG - JaxbCfgProcessor.java::116] - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information 
[2017-09-06 19:05:06,017 - DEBUG - Configuration.java::722] - Building session factory using internal StandardServiceRegistryBuilder 
[2017-09-06 19:05:06,017 - DEBUG - ServiceBinding.java::68] - Overriding existing service binding [org.hibernate.secure.spi.JaccService] 
[2017-09-06 19:05:06,017 - DEBUG - Configuration.java::653] - Building session factory using provided StandardServiceRegistry 
[2017-09-06 19:05:06,018 - DEBUG - RegionFactoryInitiator.java::88] - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory 
[2017-09-06 19:05:06,019 - DEBUG - LocalXmlResourceResolver.java::57] - Interpreting public/system identifier : [-//Hibernate/Hibernate Mapping DTD 5.0//EN] - [http://hibernate.sourceforge.net/hibernate-mapping-5.0.dtd] 
[2017-09-06 19:05:06,019 - WARN - LocalXmlResourceResolver.java::75] - HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-mapping. Use namespace http://www.hibernate.org/dtd/hibernate-mapping instead.  Support for obsolete DTD/XSD namespaces may be removed at any time. 
[2017-09-06 19:05:06,019 - DEBUG - LocalXmlResourceResolver.java::79] - Recognized legacy hibernate-mapping identifier; attempting to resolve on classpath under org/hibernate/ 
[2017-09-06 19:05:06,021 - DEBUG - MappingBinder.java::54] - Performing JAXB binding of hbm.xml document : Origin(name=bookstore.hbm.xml,type=RESOURCE) 
[2017-09-06 19:05:06,143 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration boolean -> org.hibernate.type.BooleanType@f0c8a99 
[2017-09-06 19:05:06,143 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration boolean -> org.hibernate.type.BooleanType@f0c8a99 
[2017-09-06 19:05:06,143 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@f0c8a99 
[2017-09-06 19:05:06,143 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@7526515b 
[2017-09-06 19:05:06,143 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration true_false -> org.hibernate.type.TrueFalseType@6e6f2380 
[2017-09-06 19:05:06,143 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration yes_no -> org.hibernate.type.YesNoType@53fe15ff 
[2017-09-06 19:05:06,143 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration byte -> org.hibernate.type.ByteType@15bb5034 
[2017-09-06 19:05:06,143 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration byte -> org.hibernate.type.ByteType@15bb5034 
[2017-09-06 19:05:06,143 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@15bb5034 
[2017-09-06 19:05:06,144 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration character -> org.hibernate.type.CharacterType@2cf3d63b 
[2017-09-06 19:05:06,144 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration char -> org.hibernate.type.CharacterType@2cf3d63b 
[2017-09-06 19:05:06,144 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2cf3d63b 
[2017-09-06 19:05:06,144 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration short -> org.hibernate.type.ShortType@76b1e9b8 
[2017-09-06 19:05:06,144 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration short -> org.hibernate.type.ShortType@76b1e9b8 
[2017-09-06 19:05:06,144 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@76b1e9b8 
[2017-09-06 19:05:06,144 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration integer -> org.hibernate.type.IntegerType@793f29ff 
[2017-09-06 19:05:06,144 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration int -> org.hibernate.type.IntegerType@793f29ff 
[2017-09-06 19:05:06,144 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@793f29ff 
[2017-09-06 19:05:06,144 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration long -> org.hibernate.type.LongType@7ef82753 
[2017-09-06 19:05:06,144 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration long -> org.hibernate.type.LongType@7ef82753 
[2017-09-06 19:05:06,144 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.lang.Long -> org.hibernate.type.LongType@7ef82753 
[2017-09-06 19:05:06,145 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration float -> org.hibernate.type.FloatType@7161d8d1 
[2017-09-06 19:05:06,145 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration float -> org.hibernate.type.FloatType@7161d8d1 
[2017-09-06 19:05:06,145 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7161d8d1 
[2017-09-06 19:05:06,145 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration double -> org.hibernate.type.DoubleType@5149d738 
[2017-09-06 19:05:06,145 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration double -> org.hibernate.type.DoubleType@5149d738 
[2017-09-06 19:05:06,145 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@5149d738 
[2017-09-06 19:05:06,145 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@712625fd 
[2017-09-06 19:05:06,145 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@712625fd 
[2017-09-06 19:05:06,145 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1c5920df 
[2017-09-06 19:05:06,145 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1c5920df 
[2017-09-06 19:05:06,145 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration string -> org.hibernate.type.StringType@15043a2f 
[2017-09-06 19:05:06,145 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.lang.String -> org.hibernate.type.StringType@15043a2f 
[2017-09-06 19:05:06,146 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@28261e8e 
[2017-09-06 19:05:06,146 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@3ba987b8 
[2017-09-06 19:05:06,146 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration url -> org.hibernate.type.UrlType@72035809 
[2017-09-06 19:05:06,146 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.net.URL -> org.hibernate.type.UrlType@72035809 
[2017-09-06 19:05:06,146 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration date -> org.hibernate.type.DateType@2cb4893b 
[2017-09-06 19:05:06,146 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.sql.Date -> org.hibernate.type.DateType@2cb4893b 
[2017-09-06 19:05:06,146 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration time -> org.hibernate.type.TimeType@273444fe 
[2017-09-06 19:05:06,146 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@273444fe 
[2017-09-06 19:05:06,146 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration timestamp -> org.hibernate.type.TimestampType@4681c175 
[2017-09-06 19:05:06,146 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@4681c175 
[2017-09-06 19:05:06,146 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@4681c175 
[2017-09-06 19:05:06,146 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@6fa51cd4 
[2017-09-06 19:05:06,147 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration calendar -> org.hibernate.type.CalendarType@cecf639 
[2017-09-06 19:05:06,147 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@cecf639 
[2017-09-06 19:05:06,147 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@cecf639 
[2017-09-06 19:05:06,147 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7ce69770 
[2017-09-06 19:05:06,147 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration locale -> org.hibernate.type.LocaleType@6c284af 
[2017-09-06 19:05:06,147 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@6c284af 
[2017-09-06 19:05:06,147 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration currency -> org.hibernate.type.CurrencyType@183ec003 
[2017-09-06 19:05:06,147 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@183ec003 
[2017-09-06 19:05:06,147 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration timezone -> org.hibernate.type.TimeZoneType@4d1c005e 
[2017-09-06 19:05:06,147 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@4d1c005e 
[2017-09-06 19:05:06,147 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration class -> org.hibernate.type.ClassType@496bc455 
[2017-09-06 19:05:06,147 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@496bc455 
[2017-09-06 19:05:06,148 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@4a003cbe 
[2017-09-06 19:05:06,148 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@4a003cbe 
[2017-09-06 19:05:06,148 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2b30a42c 
[2017-09-06 19:05:06,148 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration binary -> org.hibernate.type.BinaryType@792b749c 
[2017-09-06 19:05:06,148 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration byte[] -> org.hibernate.type.BinaryType@792b749c 
[2017-09-06 19:05:06,148 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration [B -> org.hibernate.type.BinaryType@792b749c 
[2017-09-06 19:05:06,148 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@302c971f 
[2017-09-06 19:05:06,148 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@302c971f 
[2017-09-06 19:05:06,148 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@302c971f 
[2017-09-06 19:05:06,148 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration image -> org.hibernate.type.ImageType@6f10d5b6 
[2017-09-06 19:05:06,149 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration characters -> org.hibernate.type.CharArrayType@7fd50002 
[2017-09-06 19:05:06,149 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration char[] -> org.hibernate.type.CharArrayType@7fd50002 
[2017-09-06 19:05:06,149 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration [C -> org.hibernate.type.CharArrayType@7fd50002 
[2017-09-06 19:05:06,149 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@45d84a20 
[2017-09-06 19:05:06,149 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@45d84a20 
[2017-09-06 19:05:06,149 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@45d84a20 
[2017-09-06 19:05:06,149 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration text -> org.hibernate.type.TextType@c430e6c 
[2017-09-06 19:05:06,149 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration ntext -> org.hibernate.type.NTextType@70cf32e3 
[2017-09-06 19:05:06,149 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration blob -> org.hibernate.type.BlobType@43f02ef2 
[2017-09-06 19:05:06,149 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@43f02ef2 
[2017-09-06 19:05:06,149 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@6f204a1a 
[2017-09-06 19:05:06,150 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration clob -> org.hibernate.type.ClobType@57bc27f5 
[2017-09-06 19:05:06,150 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@57bc27f5 
[2017-09-06 19:05:06,150 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration nclob -> org.hibernate.type.NClobType@25df00a0 
[2017-09-06 19:05:06,150 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@25df00a0 
[2017-09-06 19:05:06,150 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@5884a914 
[2017-09-06 19:05:06,150 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@79207381 
[2017-09-06 19:05:06,150 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration serializable -> org.hibernate.type.SerializableType@97e93f1 
[2017-09-06 19:05:06,150 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration object -> org.hibernate.type.ObjectType@20b2475a 
[2017-09-06 19:05:06,150 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@20b2475a 
[2017-09-06 19:05:06,150 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@7a1a3468 
[2017-09-06 19:05:06,150 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@59d0cdb6 
[2017-09-06 19:05:06,150 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@2dfeb141 
[2017-09-06 19:05:06,151 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@629e8212 
[2017-09-06 19:05:06,151 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@498c535d 
[2017-09-06 19:05:06,151 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@16ee9aa7 
[2017-09-06 19:05:06,151 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@4e424582 
[2017-09-06 19:05:06,151 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@58dad04a 
[2017-09-06 19:05:06,151 - WARN - DriverManagerConnectionProviderImpl.java::76] - HHH000402: Using Hibernate built-in connection pool (not for production use!) 
[2017-09-06 19:05:06,151 - INFO - DriverManagerConnectionProviderImpl.java::149] - HHH000401: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/bookstore?createDatabaseIfNotExist=true&useSSL=false] 
[2017-09-06 19:05:06,152 - INFO - DriverManagerConnectionProviderImpl.java::155] - HHH000046: Connection properties: {user=neelakanta, password=Welcome@123, autocommit=true} 
[2017-09-06 19:05:06,152 - INFO - DriverManagerConnectionProviderImpl.java::163] - HHH000006: Autocommit mode: true 
[2017-09-06 19:05:06,152 - INFO - DriverManagerConnectionProviderImpl.java::85] - HHH000115: Hibernate connection pool size: 20 (min=1) 
[2017-09-06 19:05:06,152 - DEBUG - DelegatingBasicLogger.java::384] - Initializing Connection pool with 1 Connections 
[2017-09-06 19:05:06,163 - DEBUG - JdbcEnvironmentInitiator.java::72] - Database ->
       name : MySQL
    version : 5.5.55-0ubuntu0.14.04.1
      major : 5
      minor : 5 
[2017-09-06 19:05:06,163 - DEBUG - JdbcEnvironmentInitiator.java::83] - Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-6.0.5 ( Revision: 6e477e32dff18fb4dc102e53f5a68037a9f8762e )
      major : 6
      minor : 0 
[2017-09-06 19:05:06,163 - DEBUG - DelegatingBasicLogger.java::389] - JDBC version : 4.1 
[2017-09-06 19:05:06,164 - INFO - Dialect.java::154] - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect 
[2017-09-06 19:05:06,164 - DEBUG - StandardRefCursorSupport.java::170] - Unexpected error trying to gauge level of JDBC REF_CURSOR support : null 
[2017-09-06 19:05:06,165 - DEBUG - IdentifierHelperBuilder.java::116] - JDBC driver metadata reported database stores quoted identifiers in more than one case 
[2017-09-06 19:05:06,166 - DEBUG - IdentifierHelperBuilder.java::182] - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers 
[2017-09-06 19:05:06,167 - DEBUG - DefaultIdentifierGeneratorFactory.java::78] - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator] 
[2017-09-06 19:05:06,167 - DEBUG - DefaultIdentifierGeneratorFactory.java::78] - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator] 
[2017-09-06 19:05:06,167 - DEBUG - DefaultIdentifierGeneratorFactory.java::78] - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator] 
[2017-09-06 19:05:06,167 - DEBUG - DefaultIdentifierGeneratorFactory.java::78] - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator] 
[2017-09-06 19:05:06,167 - DEBUG - DefaultIdentifierGeneratorFactory.java::78] - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned] 
[2017-09-06 19:05:06,168 - DEBUG - DefaultIdentifierGeneratorFactory.java::78] - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator] 
[2017-09-06 19:05:06,168 - DEBUG - DefaultIdentifierGeneratorFactory.java::78] - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator] 
[2017-09-06 19:05:06,168 - DEBUG - DefaultIdentifierGeneratorFactory.java::78] - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator] 
[2017-09-06 19:05:06,168 - DEBUG - DefaultIdentifierGeneratorFactory.java::78] - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator] 
[2017-09-06 19:05:06,168 - DEBUG - DefaultIdentifierGeneratorFactory.java::78] - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator] 
[2017-09-06 19:05:06,168 - DEBUG - DefaultIdentifierGeneratorFactory.java::78] - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator] 
[2017-09-06 19:05:06,168 - DEBUG - DefaultIdentifierGeneratorFactory.java::78] - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator] 
[2017-09-06 19:05:06,168 - DEBUG - DefaultIdentifierGeneratorFactory.java::78] - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator] 
[2017-09-06 19:05:06,168 - DEBUG - DefaultIdentifierGeneratorFactory.java::78] - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator] 
[2017-09-06 19:05:06,182 - DEBUG - Namespace.java::47] - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}] 
[2017-09-06 19:05:06,182 - DEBUG - ModelBinder.java::230] - Mapping class: com.book.store.entity.Book -> Book 
[2017-09-06 19:05:06,183 - WARN - ModelBinder.java::2441] - HHH90000003: Use of DOM4J entity-mode is considered deprecated 
[2017-09-06 19:05:06,183 - DEBUG - ModelBinder.java::2538] - Mapped property: bookId -> [Book_id] 
[2017-09-06 19:05:06,183 - WARN - ModelBinder.java::2441] - HHH90000003: Use of DOM4J entity-mode is considered deprecated 
[2017-09-06 19:05:06,183 - DEBUG - ModelBinder.java::2538] - Mapped property: bookName -> [Book_name] 
[2017-09-06 19:05:06,183 - WARN - ModelBinder.java::2441] - HHH90000003: Use of DOM4J entity-mode is considered deprecated 
[2017-09-06 19:05:06,183 - DEBUG - ModelBinder.java::2538] - Mapped property: authorName -> [Author_name] 
[2017-09-06 19:05:06,184 - WARN - ModelBinder.java::2441] - HHH90000003: Use of DOM4J entity-mode is considered deprecated 
[2017-09-06 19:05:06,184 - DEBUG - ModelBinder.java::2538] - Mapped property: publisherName -> [Publisher] 
[2017-09-06 19:05:06,184 - WARN - ModelBinder.java::2441] - HHH90000003: Use of DOM4J entity-mode is considered deprecated 
[2017-09-06 19:05:06,184 - DEBUG - ModelBinder.java::2538] - Mapped property: categoryName -> [Category] 
[2017-09-06 19:05:06,184 - WARN - ModelBinder.java::2441] - HHH90000003: Use of DOM4J entity-mode is considered deprecated 
[2017-09-06 19:05:06,184 - DEBUG - ModelBinder.java::2538] - Mapped property: price -> [price] 
[2017-09-06 19:05:06,184 - DEBUG - ModelBinder.java::230] - Mapping class: com.book.store.entity.Purchase -> Purchase 
[2017-09-06 19:05:06,184 - WARN - ModelBinder.java::2441] - HHH90000003: Use of DOM4J entity-mode is considered deprecated 
[2017-09-06 19:05:06,184 - DEBUG - ModelBinder.java::2538] - Mapped property: purchaseNumber -> [Purchase_no] 
[2017-09-06 19:05:06,185 - WARN - ModelBinder.java::2441] - HHH90000003: Use of DOM4J entity-mode is considered deprecated 
[2017-09-06 19:05:06,185 - DEBUG - ModelBinder.java::2538] - Mapped property: bookId -> [Book_id] 
[2017-09-06 19:05:06,185 - WARN - ModelBinder.java::2441] - HHH90000003: Use of DOM4J entity-mode is considered deprecated 
[2017-09-06 19:05:06,185 - DEBUG - ModelBinder.java::2538] - Mapped property: customerName -> [Customer_name] 
[2017-09-06 19:05:06,185 - WARN - ModelBinder.java::2441] - HHH90000003: Use of DOM4J entity-mode is considered deprecated 
[2017-09-06 19:05:06,185 - DEBUG - ModelBinder.java::2538] - Mapped property: customerMobileNumber -> [Customer_mobileno] 
[2017-09-06 19:05:06,185 - WARN - ModelBinder.java::2441] - HHH90000003: Use of DOM4J entity-mode is considered deprecated 
[2017-09-06 19:05:06,185 - DEBUG - ModelBinder.java::2538] - Mapped property: purchaseDate -> [Purchase_date] 
[2017-09-06 19:05:06,185 - WARN - ModelBinder.java::2441] - HHH90000003: Use of DOM4J entity-mode is considered deprecated 
[2017-09-06 19:05:06,186 - DEBUG - ModelBinder.java::2538] - Mapped property: amount -> [Amount] 
[2017-09-06 19:05:06,186 - DEBUG - SessionFactoryImpl.java::210] - Building session factory 
[2017-09-06 19:05:06,186 - DEBUG - Settings.java::69] - SessionFactory name : null 
[2017-09-06 19:05:06,187 - DEBUG - Settings.java::70] - Automatic flush during beforeCompletion(): disabled 
[2017-09-06 19:05:06,187 - DEBUG - Settings.java::71] - Automatic session close at end of transaction: disabled 
[2017-09-06 19:05:06,187 - DEBUG - Settings.java::73] - Statistics: disabled 
[2017-09-06 19:05:06,187 - DEBUG - Settings.java::75] - Deleted entity synthetic identifier rollback: disabled 
[2017-09-06 19:05:06,187 - DEBUG - Settings.java::76] - Default entity-mode: pojo 
[2017-09-06 19:05:06,187 - DEBUG - Settings.java::77] - Check Nullability in Core (should be disabled when Bean Validation is on): enabled 
[2017-09-06 19:05:06,187 - DEBUG - Settings.java::78] - Allow initialization of lazy state outside session : disabled 
[2017-09-06 19:05:06,187 - DEBUG - Settings.java::80] - Using BatchFetchStyle : LEGACY 
[2017-09-06 19:05:06,187 - DEBUG - Settings.java::81] - Default batch fetch size: -1 
[2017-09-06 19:05:06,187 - DEBUG - Settings.java::82] - Maximum outer join fetch depth: 2 
[2017-09-06 19:05:06,187 - DEBUG - Settings.java::83] - Default null ordering: NONE 
[2017-09-06 19:05:06,187 - DEBUG - Settings.java::84] - Order SQL updates by primary key: disabled 
[2017-09-06 19:05:06,187 - DEBUG - Settings.java::85] - Order SQL inserts for batching: disabled 
[2017-09-06 19:05:06,188 - DEBUG - Settings.java::87] - multi-tenancy strategy : NONE 
[2017-09-06 19:05:06,188 - DEBUG - Settings.java::89] - JTA Track by Thread: enabled 
[2017-09-06 19:05:06,188 - DEBUG - Settings.java::91] - Query language substitutions: {} 
[2017-09-06 19:05:06,188 - DEBUG - Settings.java::92] - JPA query language strict compliance: disabled 
[2017-09-06 19:05:06,188 - DEBUG - Settings.java::93] - Named query checking : enabled 
[2017-09-06 19:05:06,188 - DEBUG - Settings.java::95] - Second-level cache: enabled 
[2017-09-06 19:05:06,188 - DEBUG - Settings.java::96] - Second-level query cache: disabled 
[2017-09-06 19:05:06,188 - DEBUG - Settings.java::97] - Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@74a6a609 
[2017-09-06 19:05:06,188 - DEBUG - Settings.java::98] - Second-level cache region prefix: null 
[2017-09-06 19:05:06,188 - DEBUG - Settings.java::99] - Optimize second-level cache for minimal puts: disabled 
[2017-09-06 19:05:06,188 - DEBUG - Settings.java::100] - Structured second-level cache entries: disabled 
[2017-09-06 19:05:06,188 - DEBUG - Settings.java::101] - Second-level cache direct-reference entries: disabled 
[2017-09-06 19:05:06,188 - DEBUG - Settings.java::102] - Automatic eviction of collection cache: disabled 
[2017-09-06 19:05:06,188 - DEBUG - Settings.java::104] - JDBC batch size: 15 
[2017-09-06 19:05:06,189 - DEBUG - Settings.java::105] - JDBC batch updates for versioned data: enabled 
[2017-09-06 19:05:06,189 - DEBUG - Settings.java::106] - Scrollable result sets: enabled 
[2017-09-06 19:05:06,189 - DEBUG - Settings.java::107] - Wrap result sets: disabled 
[2017-09-06 19:05:06,189 - DEBUG - Settings.java::108] - JDBC3 getGeneratedKeys(): enabled 
[2017-09-06 19:05:06,189 - DEBUG - Settings.java::109] - JDBC result set fetch size: null 
[2017-09-06 19:05:06,189 - DEBUG - Settings.java::110] - Connection release mode: ON_CLOSE 
[2017-09-06 19:05:06,189 - DEBUG - Settings.java::111] - Generate SQL with comments: disabled 
[2017-09-06 19:05:06,190 - DEBUG - SessionFactoryImpl.java::255] - Session factory constructed with filter configurations : {} 
[2017-09-06 19:05:06,190 - DEBUG - SessionFactoryImpl.java::256] - Instantiating session factory with properties: {hibernate.connection.password=Welcome@123, java.runtime.name=Java(TM) SE Runtime Environment, java.vm.version=25.45-b02, sun.boot.library.path=/usr/java/jdk1.8.0_45/jre/lib/amd64, hibernate.connection.username=neelakanta, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@2415e4c7, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=:, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, sun.os.patch.level=unknown, user.country=US, sun.java.launcher=SUN_STANDARD, java.vm.specification.name=Java Virtual Machine Specification, user.dir=/home/neelakanta/Documents/Eclipse Documents/Mars Documents/BookStore, java.runtime.version=1.8.0_45-b14, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, basedir=/home/neelakanta/Documents/Eclipse Documents/Mars Documents/BookStore, os.arch=amd64, java.endorsed.dirs=/usr/java/jdk1.8.0_45/jre/lib/endorsed, surefire.real.class.path=/home/neelakanta/Documents/Eclipse Documents/Mars Documents/BookStore/target/surefire/surefirebooter5232880889481838645.jar, hibernate.connection.autocommit=true, java.io.tmpdir=/tmp, line.separator=
, java.vm.specification.vendor=Oracle Corporation, os.name=Linux, sun.jnu.encoding=UTF-8, java.library.path=/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib, surefire.test.class.path=/home/neelakanta/Documents/Eclipse Documents/Mars Documents/BookStore/target/test-classes:/home/neelakanta/Documents/Eclipse Documents/Mars Documents/BookStore/target/classes:/home/neelakanta/.m2/repository/junit/junit/4.12/junit-4.12.jar:/home/neelakanta/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/neelakanta/.m2/repository/org/hibernate/hibernate-core/5.0.1.Final/hibernate-core-5.0.1.Final.jar:/home/neelakanta/.m2/repository/org/jboss/logging/jboss-logging/3.3.0.Final/jboss-logging-3.3.0.Final.jar:/home/neelakanta/.m2/repository/org/apache/geronimo/specs/geronimo-jta_1.1_spec/1.1.1/geronimo-jta_1.1_spec-1.1.1.jar:/home/neelakanta/.m2/repository/org/hibernate/javax/persistence/hibernate-jpa-2.1-api/1.0.0.Final/hibernate-jpa-2.1-api-1.0.0.Final.jar:/home/neelakanta/.m2/repository/org/javassist/javassist/3.18.1-GA/javassist-3.18.1-GA.jar:/home/neelakanta/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/home/neelakanta/.m2/repository/org/jboss/jandex/1.2.2.Final/jandex-1.2.2.Final.jar:/home/neelakanta/.m2/repository/dom4j/dom4j/1.6.1/dom4j-1.6.1.jar:/home/neelakanta/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.0.0.Final/hibernate-commons-annotations-5.0.0.Final.jar:/home/neelakanta/.m2/repository/org/hibernate/hibernate-validator/5.0.1.Final/hibernate-validator-5.0.1.Final.jar:/home/neelakanta/.m2/repository/javax/validation/validation-api/1.1.0.Final/validation-api-1.1.0.Final.jar:/home/neelakanta/.m2/repository/com/fasterxml/classmate/0.8.0/classmate-0.8.0.jar:/home/neelakanta/.m2/repository/org/hibernate/hibernate-annotations/3.3.0.ga/hibernate-annotations-3.3.0.ga.jar:/home/neelakanta/.m2/repository/org/hibernate/hibernate/3.2.1.ga/hibernate-3.2.1.ga.jar:/home/neelakanta/.m2/repository/net/sf/ehcache/ehcache/1.2.3/ehcache-1.2.3.jar:/home/neelakanta/.m2/repository/commons-logging/commons-logging/1.0.4/commons-logging-1.0.4.jar:/home/neelakanta/.m2/repository/asm/asm-attrs/1.5.3/asm-attrs-1.5.3.jar:/home/neelakanta/.m2/repository/cglib/cglib/2.1_3/cglib-2.1_3.jar:/home/neelakanta/.m2/repository/asm/asm/1.5.3/asm-1.5.3.jar:/home/neelakanta/.m2/repository/commons-collections/commons-collections/2.1.1/commons-collections-2.1.1.jar:/home/neelakanta/.m2/repository/javax/persistence/persistence-api/1.0/persistence-api-1.0.jar:/home/neelakanta/.m2/repository/org/hibernate/hibernate-commons-annotations/3.3.0.ga/hibernate-commons-annotations-3.3.0.ga.jar:/home/neelakanta/.m2/repository/javax/transaction/jta/1.1/jta-1.1.jar:/home/neelakanta/.m2/repository/mysql/mysql-connector-java/6.0.5/mysql-connector-java-6.0.5.jar:/home/neelakanta/.m2/repository/c3p0/c3p0/0.9.0.4/c3p0-0.9.0.4.jar:/home/neelakanta/.m2/repository/org/hibernate/hibernate-entitymanager/4.3.1.Final/hibernate-entitymanager-4.3.1.Final.jar:/home/neelakanta/.m2/repository/org/jboss/logging/jboss-logging-annotations/1.2.0.Beta1/jboss-logging-annotations-1.2.0.Beta1.jar:/home/neelakanta/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.0.0.Final/jboss-transaction-api_1.2_spec-1.0.0.Final.jar:/home/neelakanta/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar:, java.class.version=52.0, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=3.13.0-119-generic, user.home=/home/neelakanta, user.timezone=Asia/Kolkata, java.awt.printerjob=sun.print.PSPrinterJob, file.encoding=UTF-8, java.specification.version=1.8, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, user.name=neelakanta, java.class.path=/home/neelakanta/Documents/Eclipse Documents/Mars Documents/BookStore/target/test-classes:/home/neelakanta/Documents/Eclipse Documents/Mars Documents/BookStore/target/classes:/home/neelakanta/.m2/repository/junit/junit/4.12/junit-4.12.jar:/home/neelakanta/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/neelakanta/.m2/repository/org/hibernate/hibernate-core/5.0.1.Final/hibernate-core-5.0.1.Final.jar:/home/neelakanta/.m2/repository/org/jboss/logging/jboss-logging/3.3.0.Final/jboss-logging-3.3.0.Final.jar:/home/neelakanta/.m2/repository/org/apache/geronimo/specs/geronimo-jta_1.1_spec/1.1.1/geronimo-jta_1.1_spec-1.1.1.jar:/home/neelakanta/.m2/repository/org/hibernate/javax/persistence/hibernate-jpa-2.1-api/1.0.0.Final/hibernate-jpa-2.1-api-1.0.0.Final.jar:/home/neelakanta/.m2/repository/org/javassist/javassist/3.18.1-GA/javassist-3.18.1-GA.jar:/home/neelakanta/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/home/neelakanta/.m2/repository/org/jboss/jandex/1.2.2.Final/jandex-1.2.2.Final.jar:/home/neelakanta/.m2/repository/dom4j/dom4j/1.6.1/dom4j-1.6.1.jar:/home/neelakanta/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.0.0.Final/hibernate-commons-annotations-5.0.0.Final.jar:/home/neelakanta/.m2/repository/org/hibernate/hibernate-validator/5.0.1.Final/hibernate-validator-5.0.1.Final.jar:/home/neelakanta/.m2/repository/javax/validation/validation-api/1.1.0.Final/validation-api-1.1.0.Final.jar:/home/neelakanta/.m2/repository/com/fasterxml/classmate/0.8.0/classmate-0.8.0.jar:/home/neelakanta/.m2/repository/org/hibernate/hibernate-annotations/3.3.0.ga/hibernate-annotations-3.3.0.ga.jar:/home/neelakanta/.m2/repository/org/hibernate/hibernate/3.2.1.ga/hibernate-3.2.1.ga.jar:/home/neelakanta/.m2/repository/net/sf/ehcache/ehcache/1.2.3/ehcache-1.2.3.jar:/home/neelakanta/.m2/repository/commons-logging/commons-logging/1.0.4/commons-logging-1.0.4.jar:/home/neelakanta/.m2/repository/asm/asm-attrs/1.5.3/asm-attrs-1.5.3.jar:/home/neelakanta/.m2/repository/cglib/cglib/2.1_3/cglib-2.1_3.jar:/home/neelakanta/.m2/repository/asm/asm/1.5.3/asm-1.5.3.jar:/home/neelakanta/.m2/repository/commons-collections/commons-collections/2.1.1/commons-collections-2.1.1.jar:/home/neelakanta/.m2/repository/javax/persistence/persistence-api/1.0/persistence-api-1.0.jar:/home/neelakanta/.m2/repository/org/hibernate/hibernate-commons-annotations/3.3.0.ga/hibernate-commons-annotations-3.3.0.ga.jar:/home/neelakanta/.m2/repository/javax/transaction/jta/1.1/jta-1.1.jar:/home/neelakanta/.m2/repository/mysql/mysql-connector-java/6.0.5/mysql-connector-java-6.0.5.jar:/home/neelakanta/.m2/repository/c3p0/c3p0/0.9.0.4/c3p0-0.9.0.4.jar:/home/neelakanta/.m2/repository/org/hibernate/hibernate-entitymanager/4.3.1.Final/hibernate-entitymanager-4.3.1.Final.jar:/home/neelakanta/.m2/repository/org/jboss/logging/jboss-logging-annotations/1.2.0.Beta1/jboss-logging-annotations-1.2.0.Beta1.jar:/home/neelakanta/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.0.0.Final/jboss-transaction-api_1.2_spec-1.0.0.Final.jar:/home/neelakanta/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar:, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=false, java.vm.specification.version=1.8, sun.arch.data.model=64, sun.java.command=/home/neelakanta/Documents/Eclipse Documents/Mars Documents/BookStore/target/surefire/surefirebooter5232880889481838645.jar /home/neelakanta/Documents/Eclipse Documents/Mars Documents/BookStore/target/surefire/surefire7552053918813552354tmp /home/neelakanta/Documents/Eclipse Documents/Mars Documents/BookStore/target/surefire/surefire_03604179774586556801tmp, java.home=/usr/java/jdk1.8.0_45/jre, hibernate.connection.url=jdbc:mysql://localhost:3306/bookstore?createDatabaseIfNotExist=true&useSSL=false, hibernate.dialect=org.hibernate.dialect.MySQLDialect, user.language=en, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.X11.XToolkit, java.vm.info=mixed mode, java.version=1.8.0_45, java.ext.dirs=/usr/java/jdk1.8.0_45/jre/lib/ext:/usr/java/packages/lib/ext, sun.boot.class.path=/usr/java/jdk1.8.0_45/jre/lib/resources.jar:/usr/java/jdk1.8.0_45/jre/lib/rt.jar:/usr/java/jdk1.8.0_45/jre/lib/sunrsasign.jar:/usr/java/jdk1.8.0_45/jre/lib/jsse.jar:/usr/java/jdk1.8.0_45/jre/lib/jce.jar:/usr/java/jdk1.8.0_45/jre/lib/charsets.jar:/usr/java/jdk1.8.0_45/jre/lib/jfr.jar:/usr/java/jdk1.8.0_45/jre/classes, java.vendor=Oracle Corporation, localRepository=/home/neelakanta/.m2/repository, file.separator=/, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, sun.desktop=gnome, sun.cpu.isalist=} 
[2017-09-06 19:05:06,190 - DEBUG - DefaultTraversableResolver.java::106] - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver 
[2017-09-06 19:05:06,190 - DEBUG - DefaultTraversableResolver.java::117] - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. 
[2017-09-06 19:05:06,190 - DEBUG - ValidationXmlParser.java::88] - Trying to load META-INF/validation.xml for XML based Validator configuration. 
[2017-09-06 19:05:06,191 - DEBUG - ValidationXmlParser.java::95] - No META-INF/validation.xml found. Using annotation based configuration only. 
[2017-09-06 19:05:06,191 - DEBUG - ClassLoaderAccessImpl.java::55] - Not known whether passed class name [com.book.store.entity.Book] is safe 
[2017-09-06 19:05:06,191 - DEBUG - ClassLoaderAccessImpl.java::57] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.book.store.entity.Book 
[2017-09-06 19:05:06,194 - DEBUG - ClassLoaderAccessImpl.java::55] - Not known whether passed class name [com.book.store.entity.Purchase] is safe 
[2017-09-06 19:05:06,194 - DEBUG - ClassLoaderAccessImpl.java::57] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.book.store.entity.Purchase 
[2017-09-06 19:05:06,195 - DEBUG - JaccIntegrator.java::80] - Skipping JACC integration as it was not enabled 
[2017-09-06 19:05:06,196 - DEBUG - ClassLoaderAccessImpl.java::55] - Not known whether passed class name [com.book.store.entity.Book] is safe 
[2017-09-06 19:05:06,196 - DEBUG - ClassLoaderAccessImpl.java::57] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.book.store.entity.Book 
[2017-09-06 19:05:06,196 - DEBUG - ClassLoaderAccessImpl.java::55] - Not known whether passed class name [com.book.store.entity.Book] is safe 
[2017-09-06 19:05:06,196 - DEBUG - ClassLoaderAccessImpl.java::57] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.book.store.entity.Book 
[2017-09-06 19:05:06,197 - DEBUG - ClassLoaderAccessImpl.java::55] - Not known whether passed class name [com.book.store.entity.Purchase] is safe 
[2017-09-06 19:05:06,197 - DEBUG - ClassLoaderAccessImpl.java::57] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.book.store.entity.Purchase 
[2017-09-06 19:05:06,197 - DEBUG - ClassLoaderAccessImpl.java::55] - Not known whether passed class name [com.book.store.entity.Purchase] is safe 
[2017-09-06 19:05:06,198 - DEBUG - ClassLoaderAccessImpl.java::57] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.book.store.entity.Purchase 
[2017-09-06 19:05:06,199 - DEBUG - AbstractEntityPersister.java::3418] - Static SQL for entity: com.book.store.entity.Book 
[2017-09-06 19:05:06,199 - DEBUG - AbstractEntityPersister.java::3423] -  Version select: select Book_id from Book where Book_id =? 
[2017-09-06 19:05:06,199 - DEBUG - AbstractEntityPersister.java::3426] -  Snapshot select: select book_.Book_id, book_.Book_name as Book_nam2_0_, book_.Author_name as Author_n3_0_, book_.Publisher as Publishe4_0_, book_.Category as Category5_0_, book_.price as price6_0_ from Book book_ where book_.Book_id=? 
[2017-09-06 19:05:06,199 - DEBUG - DelegatingBasicLogger.java::394] -  Insert 0: insert into Book (Book_name, Author_name, Publisher, Category, price, Book_id) values (?, ?, ?, ?, ?, ?) 
[2017-09-06 19:05:06,199 - DEBUG - DelegatingBasicLogger.java::394] -  Update 0: update Book set Book_name=?, Author_name=?, Publisher=?, Category=?, price=? where Book_id=? 
[2017-09-06 19:05:06,199 - DEBUG - DelegatingBasicLogger.java::394] -  Delete 0: delete from Book where Book_id=? 
[2017-09-06 19:05:06,199 - DEBUG - QuerySpacesImpl.java::174] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@613f7eb7] 
[2017-09-06 19:05:06,199 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : bookName 
[2017-09-06 19:05:06,199 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : authorName 
[2017-09-06 19:05:06,200 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : publisherName 
[2017-09-06 19:05:06,200 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : categoryName 
[2017-09-06 19:05:06,200 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : price 
[2017-09-06 19:05:06,200 - DEBUG - FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java::76] - Building LoadPlan... 
[2017-09-06 19:05:06,200 - DEBUG - LoadQueryJoinAndFetchProcessor.java::95] - processing queryspace <gen:0> 
[2017-09-06 19:05:06,200 - DEBUG - LoadPlanTreePrinter.java::55] - LoadPlan(entity=com.book.store.entity.Book)
    - Returns
       - EntityReturnImpl(entity=com.book.store.entity.Book, querySpaceUid=<gen:0>, path=com.book.store.entity.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.book.store.entity.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {Book_id1_0_0_}
 
[2017-09-06 19:05:06,200 - DEBUG - EntityLoader.java::128] - Static select for entity com.book.store.entity.Book [NONE]: select book0_.Book_id as Book_id1_0_0_, book0_.Book_name as Book_nam2_0_0_, book0_.Author_name as Author_n3_0_0_, book0_.Publisher as Publishe4_0_0_, book0_.Category as Category5_0_0_, book0_.price as price6_0_0_ from Book book0_ where book0_.Book_id=? 
[2017-09-06 19:05:06,200 - DEBUG - QuerySpacesImpl.java::174] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@587c5c1] 
[2017-09-06 19:05:06,201 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : bookName 
[2017-09-06 19:05:06,201 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : authorName 
[2017-09-06 19:05:06,201 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : publisherName 
[2017-09-06 19:05:06,201 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : categoryName 
[2017-09-06 19:05:06,201 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : price 
[2017-09-06 19:05:06,201 - DEBUG - FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java::76] - Building LoadPlan... 
[2017-09-06 19:05:06,201 - DEBUG - LoadQueryJoinAndFetchProcessor.java::95] - processing queryspace <gen:0> 
[2017-09-06 19:05:06,201 - DEBUG - LoadPlanTreePrinter.java::55] - LoadPlan(entity=com.book.store.entity.Book)
    - Returns
       - EntityReturnImpl(entity=com.book.store.entity.Book, querySpaceUid=<gen:0>, path=com.book.store.entity.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.book.store.entity.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {Book_id1_0_0_}
 
[2017-09-06 19:05:06,201 - DEBUG - EntityLoader.java::128] - Static select for entity com.book.store.entity.Book [READ]: select book0_.Book_id as Book_id1_0_0_, book0_.Book_name as Book_nam2_0_0_, book0_.Author_name as Author_n3_0_0_, book0_.Publisher as Publishe4_0_0_, book0_.Category as Category5_0_0_, book0_.price as price6_0_0_ from Book book0_ where book0_.Book_id=? 
[2017-09-06 19:05:06,201 - DEBUG - QuerySpacesImpl.java::174] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1f78d415] 
[2017-09-06 19:05:06,202 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : bookName 
[2017-09-06 19:05:06,202 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : authorName 
[2017-09-06 19:05:06,202 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : publisherName 
[2017-09-06 19:05:06,202 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : categoryName 
[2017-09-06 19:05:06,202 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : price 
[2017-09-06 19:05:06,202 - DEBUG - FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java::76] - Building LoadPlan... 
[2017-09-06 19:05:06,202 - DEBUG - LoadQueryJoinAndFetchProcessor.java::95] - processing queryspace <gen:0> 
[2017-09-06 19:05:06,202 - DEBUG - LoadPlanTreePrinter.java::55] - LoadPlan(entity=com.book.store.entity.Book)
    - Returns
       - EntityReturnImpl(entity=com.book.store.entity.Book, querySpaceUid=<gen:0>, path=com.book.store.entity.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.book.store.entity.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {Book_id1_0_0_}
 
[2017-09-06 19:05:06,202 - DEBUG - EntityLoader.java::128] - Static select for entity com.book.store.entity.Book [UPGRADE]: select book0_.Book_id as Book_id1_0_0_, book0_.Book_name as Book_nam2_0_0_, book0_.Author_name as Author_n3_0_0_, book0_.Publisher as Publishe4_0_0_, book0_.Category as Category5_0_0_, book0_.price as price6_0_0_ from Book book0_ where book0_.Book_id=? for update 
[2017-09-06 19:05:06,203 - DEBUG - QuerySpacesImpl.java::174] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@27960b1e] 
[2017-09-06 19:05:06,203 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : bookName 
[2017-09-06 19:05:06,203 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : authorName 
[2017-09-06 19:05:06,203 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : publisherName 
[2017-09-06 19:05:06,203 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : categoryName 
[2017-09-06 19:05:06,203 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : price 
[2017-09-06 19:05:06,203 - DEBUG - FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java::76] - Building LoadPlan... 
[2017-09-06 19:05:06,203 - DEBUG - LoadQueryJoinAndFetchProcessor.java::95] - processing queryspace <gen:0> 
[2017-09-06 19:05:06,203 - DEBUG - LoadPlanTreePrinter.java::55] - LoadPlan(entity=com.book.store.entity.Book)
    - Returns
       - EntityReturnImpl(entity=com.book.store.entity.Book, querySpaceUid=<gen:0>, path=com.book.store.entity.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.book.store.entity.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {Book_id1_0_0_}
 
[2017-09-06 19:05:06,204 - DEBUG - EntityLoader.java::128] - Static select for entity com.book.store.entity.Book [UPGRADE_NOWAIT]: select book0_.Book_id as Book_id1_0_0_, book0_.Book_name as Book_nam2_0_0_, book0_.Author_name as Author_n3_0_0_, book0_.Publisher as Publishe4_0_0_, book0_.Category as Category5_0_0_, book0_.price as price6_0_0_ from Book book0_ where book0_.Book_id=? for update 
[2017-09-06 19:05:06,204 - DEBUG - QuerySpacesImpl.java::174] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3d3a1903] 
[2017-09-06 19:05:06,204 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : bookName 
[2017-09-06 19:05:06,204 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : authorName 
[2017-09-06 19:05:06,204 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : publisherName 
[2017-09-06 19:05:06,204 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : categoryName 
[2017-09-06 19:05:06,204 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : price 
[2017-09-06 19:05:06,204 - DEBUG - FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java::76] - Building LoadPlan... 
[2017-09-06 19:05:06,204 - DEBUG - LoadQueryJoinAndFetchProcessor.java::95] - processing queryspace <gen:0> 
[2017-09-06 19:05:06,205 - DEBUG - LoadPlanTreePrinter.java::55] - LoadPlan(entity=com.book.store.entity.Book)
    - Returns
       - EntityReturnImpl(entity=com.book.store.entity.Book, querySpaceUid=<gen:0>, path=com.book.store.entity.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.book.store.entity.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {Book_id1_0_0_}
 
[2017-09-06 19:05:06,205 - DEBUG - EntityLoader.java::128] - Static select for entity com.book.store.entity.Book [UPGRADE_SKIPLOCKED]: select book0_.Book_id as Book_id1_0_0_, book0_.Book_name as Book_nam2_0_0_, book0_.Author_name as Author_n3_0_0_, book0_.Publisher as Publishe4_0_0_, book0_.Category as Category5_0_0_, book0_.price as price6_0_0_ from Book book0_ where book0_.Book_id=? for update 
[2017-09-06 19:05:06,205 - DEBUG - QuerySpacesImpl.java::174] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@153cb763] 
[2017-09-06 19:05:06,205 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : bookName 
[2017-09-06 19:05:06,205 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : authorName 
[2017-09-06 19:05:06,205 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : publisherName 
[2017-09-06 19:05:06,205 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : categoryName 
[2017-09-06 19:05:06,205 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : price 
[2017-09-06 19:05:06,205 - DEBUG - FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java::76] - Building LoadPlan... 
[2017-09-06 19:05:06,205 - DEBUG - LoadQueryJoinAndFetchProcessor.java::95] - processing queryspace <gen:0> 
[2017-09-06 19:05:06,206 - DEBUG - LoadPlanTreePrinter.java::55] - LoadPlan(entity=com.book.store.entity.Book)
    - Returns
       - EntityReturnImpl(entity=com.book.store.entity.Book, querySpaceUid=<gen:0>, path=com.book.store.entity.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.book.store.entity.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {Book_id1_0_0_}
 
[2017-09-06 19:05:06,206 - DEBUG - EntityLoader.java::128] - Static select for entity com.book.store.entity.Book [FORCE]: select book0_.Book_id as Book_id1_0_0_, book0_.Book_name as Book_nam2_0_0_, book0_.Author_name as Author_n3_0_0_, book0_.Publisher as Publishe4_0_0_, book0_.Category as Category5_0_0_, book0_.price as price6_0_0_ from Book book0_ where book0_.Book_id=? for update 
[2017-09-06 19:05:06,206 - DEBUG - QuerySpacesImpl.java::174] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@412ebe64] 
[2017-09-06 19:05:06,206 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : bookName 
[2017-09-06 19:05:06,206 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : authorName 
[2017-09-06 19:05:06,206 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : publisherName 
[2017-09-06 19:05:06,206 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : categoryName 
[2017-09-06 19:05:06,206 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : price 
[2017-09-06 19:05:06,206 - DEBUG - FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java::76] - Building LoadPlan... 
[2017-09-06 19:05:06,207 - DEBUG - LoadQueryJoinAndFetchProcessor.java::95] - processing queryspace <gen:0> 
[2017-09-06 19:05:06,207 - DEBUG - LoadPlanTreePrinter.java::55] - LoadPlan(entity=com.book.store.entity.Book)
    - Returns
       - EntityReturnImpl(entity=com.book.store.entity.Book, querySpaceUid=<gen:0>, path=com.book.store.entity.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.book.store.entity.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {Book_id1_0_0_}
 
[2017-09-06 19:05:06,207 - DEBUG - EntityLoader.java::128] - Static select for entity com.book.store.entity.Book [PESSIMISTIC_READ]: select book0_.Book_id as Book_id1_0_0_, book0_.Book_name as Book_nam2_0_0_, book0_.Author_name as Author_n3_0_0_, book0_.Publisher as Publishe4_0_0_, book0_.Category as Category5_0_0_, book0_.price as price6_0_0_ from Book book0_ where book0_.Book_id=? lock in share mode 
[2017-09-06 19:05:06,207 - DEBUG - QuerySpacesImpl.java::174] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1f84327b] 
[2017-09-06 19:05:06,207 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : bookName 
[2017-09-06 19:05:06,207 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : authorName 
[2017-09-06 19:05:06,207 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : publisherName 
[2017-09-06 19:05:06,207 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : categoryName 
[2017-09-06 19:05:06,207 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : price 
[2017-09-06 19:05:06,207 - DEBUG - FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java::76] - Building LoadPlan... 
[2017-09-06 19:05:06,208 - DEBUG - LoadQueryJoinAndFetchProcessor.java::95] - processing queryspace <gen:0> 
[2017-09-06 19:05:06,208 - DEBUG - LoadPlanTreePrinter.java::55] - LoadPlan(entity=com.book.store.entity.Book)
    - Returns
       - EntityReturnImpl(entity=com.book.store.entity.Book, querySpaceUid=<gen:0>, path=com.book.store.entity.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.book.store.entity.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {Book_id1_0_0_}
 
[2017-09-06 19:05:06,208 - DEBUG - EntityLoader.java::128] - Static select for entity com.book.store.entity.Book [PESSIMISTIC_WRITE]: select book0_.Book_id as Book_id1_0_0_, book0_.Book_name as Book_nam2_0_0_, book0_.Author_name as Author_n3_0_0_, book0_.Publisher as Publishe4_0_0_, book0_.Category as Category5_0_0_, book0_.price as price6_0_0_ from Book book0_ where book0_.Book_id=? for update 
[2017-09-06 19:05:06,208 - DEBUG - QuerySpacesImpl.java::174] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@dbddbe3] 
[2017-09-06 19:05:06,208 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : bookName 
[2017-09-06 19:05:06,208 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : authorName 
[2017-09-06 19:05:06,208 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : publisherName 
[2017-09-06 19:05:06,208 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : categoryName 
[2017-09-06 19:05:06,208 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : price 
[2017-09-06 19:05:06,209 - DEBUG - FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java::76] - Building LoadPlan... 
[2017-09-06 19:05:06,209 - DEBUG - LoadQueryJoinAndFetchProcessor.java::95] - processing queryspace <gen:0> 
[2017-09-06 19:05:06,209 - DEBUG - LoadPlanTreePrinter.java::55] - LoadPlan(entity=com.book.store.entity.Book)
    - Returns
       - EntityReturnImpl(entity=com.book.store.entity.Book, querySpaceUid=<gen:0>, path=com.book.store.entity.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.book.store.entity.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {Book_id1_0_0_}
 
[2017-09-06 19:05:06,209 - DEBUG - EntityLoader.java::128] - Static select for entity com.book.store.entity.Book [PESSIMISTIC_FORCE_INCREMENT]: select book0_.Book_id as Book_id1_0_0_, book0_.Book_name as Book_nam2_0_0_, book0_.Author_name as Author_n3_0_0_, book0_.Publisher as Publishe4_0_0_, book0_.Category as Category5_0_0_, book0_.price as price6_0_0_ from Book book0_ where book0_.Book_id=? for update 
[2017-09-06 19:05:06,209 - DEBUG - QuerySpacesImpl.java::174] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@44aa2e13] 
[2017-09-06 19:05:06,209 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : bookName 
[2017-09-06 19:05:06,209 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : authorName 
[2017-09-06 19:05:06,209 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : publisherName 
[2017-09-06 19:05:06,209 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : categoryName 
[2017-09-06 19:05:06,210 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : price 
[2017-09-06 19:05:06,210 - DEBUG - FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java::76] - Building LoadPlan... 
[2017-09-06 19:05:06,210 - DEBUG - LoadQueryJoinAndFetchProcessor.java::95] - processing queryspace <gen:0> 
[2017-09-06 19:05:06,210 - DEBUG - LoadPlanTreePrinter.java::55] - LoadPlan(entity=com.book.store.entity.Book)
    - Returns
       - EntityReturnImpl(entity=com.book.store.entity.Book, querySpaceUid=<gen:0>, path=com.book.store.entity.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.book.store.entity.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {Book_id1_0_0_}
 
[2017-09-06 19:05:06,210 - DEBUG - EntityLoader.java::128] - Static select for entity com.book.store.entity.Book [OPTIMISTIC]: select book0_.Book_id as Book_id1_0_0_, book0_.Book_name as Book_nam2_0_0_, book0_.Author_name as Author_n3_0_0_, book0_.Publisher as Publishe4_0_0_, book0_.Category as Category5_0_0_, book0_.price as price6_0_0_ from Book book0_ where book0_.Book_id=? 
[2017-09-06 19:05:06,210 - DEBUG - QuerySpacesImpl.java::174] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3a1b36a1] 
[2017-09-06 19:05:06,210 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : bookName 
[2017-09-06 19:05:06,210 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : authorName 
[2017-09-06 19:05:06,210 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : publisherName 
[2017-09-06 19:05:06,210 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : categoryName 
[2017-09-06 19:05:06,211 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : price 
[2017-09-06 19:05:06,211 - DEBUG - FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java::76] - Building LoadPlan... 
[2017-09-06 19:05:06,211 - DEBUG - LoadQueryJoinAndFetchProcessor.java::95] - processing queryspace <gen:0> 
[2017-09-06 19:05:06,211 - DEBUG - LoadPlanTreePrinter.java::55] - LoadPlan(entity=com.book.store.entity.Book)
    - Returns
       - EntityReturnImpl(entity=com.book.store.entity.Book, querySpaceUid=<gen:0>, path=com.book.store.entity.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.book.store.entity.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {Book_id1_0_0_}
 
[2017-09-06 19:05:06,211 - DEBUG - EntityLoader.java::128] - Static select for entity com.book.store.entity.Book [OPTIMISTIC_FORCE_INCREMENT]: select book0_.Book_id as Book_id1_0_0_, book0_.Book_name as Book_nam2_0_0_, book0_.Author_name as Author_n3_0_0_, book0_.Publisher as Publishe4_0_0_, book0_.Category as Category5_0_0_, book0_.price as price6_0_0_ from Book book0_ where book0_.Book_id=? 
[2017-09-06 19:05:06,211 - DEBUG - CascadeEntityLoader.java::38] - Static select for action ACTION_MERGE on entity com.book.store.entity.Book: select book0_.Book_id as Book_id1_0_0_, book0_.Book_name as Book_nam2_0_0_, book0_.Author_name as Author_n3_0_0_, book0_.Publisher as Publishe4_0_0_, book0_.Category as Category5_0_0_, book0_.price as price6_0_0_ from Book book0_ where book0_.Book_id=? 
[2017-09-06 19:05:06,211 - DEBUG - CascadeEntityLoader.java::38] - Static select for action ACTION_REFRESH on entity com.book.store.entity.Book: select book0_.Book_id as Book_id1_0_0_, book0_.Book_name as Book_nam2_0_0_, book0_.Author_name as Author_n3_0_0_, book0_.Publisher as Publishe4_0_0_, book0_.Category as Category5_0_0_, book0_.price as price6_0_0_ from Book book0_ where book0_.Book_id=? 
[2017-09-06 19:05:06,212 - DEBUG - AbstractEntityPersister.java::3418] - Static SQL for entity: com.book.store.entity.Purchase 
[2017-09-06 19:05:06,212 - DEBUG - AbstractEntityPersister.java::3423] -  Version select: select Purchase_no from Purchase where Purchase_no =? 
[2017-09-06 19:05:06,212 - DEBUG - AbstractEntityPersister.java::3426] -  Snapshot select: select purchase_.Purchase_no, purchase_.Book_id as Book_id2_1_, purchase_.Customer_name as Customer3_1_, purchase_.Customer_mobileno as Customer4_1_, purchase_.Purchase_date as Purchase5_1_, purchase_.Amount as Amount6_1_ from Purchase purchase_ where purchase_.Purchase_no=? 
[2017-09-06 19:05:06,212 - DEBUG - DelegatingBasicLogger.java::394] -  Insert 0: insert into Purchase (Book_id, Customer_name, Customer_mobileno, Purchase_date, Amount, Purchase_no) values (?, ?, ?, ?, ?, ?) 
[2017-09-06 19:05:06,212 - DEBUG - DelegatingBasicLogger.java::394] -  Update 0: update Purchase set Book_id=?, Customer_name=?, Customer_mobileno=?, Purchase_date=?, Amount=? where Purchase_no=? 
[2017-09-06 19:05:06,212 - DEBUG - DelegatingBasicLogger.java::394] -  Delete 0: delete from Purchase where Purchase_no=? 
[2017-09-06 19:05:06,212 - DEBUG - AbstractEntityPersister.java::3434] -  Identity insert: insert into Purchase (Book_id, Customer_name, Customer_mobileno, Purchase_date, Amount) values (?, ?, ?, ?, ?) 
[2017-09-06 19:05:06,212 - DEBUG - QuerySpacesImpl.java::174] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4b55ff0a] 
[2017-09-06 19:05:06,212 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : bookId 
[2017-09-06 19:05:06,212 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : customerName 
[2017-09-06 19:05:06,213 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : customerMobileNumber 
[2017-09-06 19:05:06,213 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : purchaseDate 
[2017-09-06 19:05:06,213 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : amount 
[2017-09-06 19:05:06,213 - DEBUG - FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java::76] - Building LoadPlan... 
[2017-09-06 19:05:06,213 - DEBUG - LoadQueryJoinAndFetchProcessor.java::95] - processing queryspace <gen:0> 
[2017-09-06 19:05:06,213 - DEBUG - LoadPlanTreePrinter.java::55] - LoadPlan(entity=com.book.store.entity.Purchase)
    - Returns
       - EntityReturnImpl(entity=com.book.store.entity.Purchase, querySpaceUid=<gen:0>, path=com.book.store.entity.Purchase)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.book.store.entity.Purchase)
          - SQL table alias mapping - purchase0_
          - alias suffix - 0_
          - suffixed key columns - {Purchase1_1_0_}
 
[2017-09-06 19:05:06,213 - DEBUG - EntityLoader.java::128] - Static select for entity com.book.store.entity.Purchase [NONE]: select purchase0_.Purchase_no as Purchase1_1_0_, purchase0_.Book_id as Book_id2_1_0_, purchase0_.Customer_name as Customer3_1_0_, purchase0_.Customer_mobileno as Customer4_1_0_, purchase0_.Purchase_date as Purchase5_1_0_, purchase0_.Amount as Amount6_1_0_ from Purchase purchase0_ where purchase0_.Purchase_no=? 
[2017-09-06 19:05:06,213 - DEBUG - QuerySpacesImpl.java::174] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@256a0d95] 
[2017-09-06 19:05:06,214 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : bookId 
[2017-09-06 19:05:06,214 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : customerName 
[2017-09-06 19:05:06,214 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : customerMobileNumber 
[2017-09-06 19:05:06,214 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : purchaseDate 
[2017-09-06 19:05:06,214 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : amount 
[2017-09-06 19:05:06,214 - DEBUG - FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java::76] - Building LoadPlan... 
[2017-09-06 19:05:06,215 - DEBUG - LoadQueryJoinAndFetchProcessor.java::95] - processing queryspace <gen:0> 
[2017-09-06 19:05:06,215 - DEBUG - LoadPlanTreePrinter.java::55] - LoadPlan(entity=com.book.store.entity.Purchase)
    - Returns
       - EntityReturnImpl(entity=com.book.store.entity.Purchase, querySpaceUid=<gen:0>, path=com.book.store.entity.Purchase)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.book.store.entity.Purchase)
          - SQL table alias mapping - purchase0_
          - alias suffix - 0_
          - suffixed key columns - {Purchase1_1_0_}
 
[2017-09-06 19:05:06,215 - DEBUG - EntityLoader.java::128] - Static select for entity com.book.store.entity.Purchase [READ]: select purchase0_.Purchase_no as Purchase1_1_0_, purchase0_.Book_id as Book_id2_1_0_, purchase0_.Customer_name as Customer3_1_0_, purchase0_.Customer_mobileno as Customer4_1_0_, purchase0_.Purchase_date as Purchase5_1_0_, purchase0_.Amount as Amount6_1_0_ from Purchase purchase0_ where purchase0_.Purchase_no=? 
[2017-09-06 19:05:06,215 - DEBUG - QuerySpacesImpl.java::174] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4bf03fee] 
[2017-09-06 19:05:06,215 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : bookId 
[2017-09-06 19:05:06,215 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : customerName 
[2017-09-06 19:05:06,215 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : customerMobileNumber 
[2017-09-06 19:05:06,215 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : purchaseDate 
[2017-09-06 19:05:06,216 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : amount 
[2017-09-06 19:05:06,216 - DEBUG - FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java::76] - Building LoadPlan... 
[2017-09-06 19:05:06,216 - DEBUG - LoadQueryJoinAndFetchProcessor.java::95] - processing queryspace <gen:0> 
[2017-09-06 19:05:06,216 - DEBUG - LoadPlanTreePrinter.java::55] - LoadPlan(entity=com.book.store.entity.Purchase)
    - Returns
       - EntityReturnImpl(entity=com.book.store.entity.Purchase, querySpaceUid=<gen:0>, path=com.book.store.entity.Purchase)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.book.store.entity.Purchase)
          - SQL table alias mapping - purchase0_
          - alias suffix - 0_
          - suffixed key columns - {Purchase1_1_0_}
 
[2017-09-06 19:05:06,217 - DEBUG - EntityLoader.java::128] - Static select for entity com.book.store.entity.Purchase [UPGRADE]: select purchase0_.Purchase_no as Purchase1_1_0_, purchase0_.Book_id as Book_id2_1_0_, purchase0_.Customer_name as Customer3_1_0_, purchase0_.Customer_mobileno as Customer4_1_0_, purchase0_.Purchase_date as Purchase5_1_0_, purchase0_.Amount as Amount6_1_0_ from Purchase purchase0_ where purchase0_.Purchase_no=? for update 
[2017-09-06 19:05:06,217 - DEBUG - QuerySpacesImpl.java::174] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@44f0ff2b] 
[2017-09-06 19:05:06,217 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : bookId 
[2017-09-06 19:05:06,217 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : customerName 
[2017-09-06 19:05:06,217 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : customerMobileNumber 
[2017-09-06 19:05:06,217 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : purchaseDate 
[2017-09-06 19:05:06,217 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : amount 
[2017-09-06 19:05:06,217 - DEBUG - FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java::76] - Building LoadPlan... 
[2017-09-06 19:05:06,218 - DEBUG - LoadQueryJoinAndFetchProcessor.java::95] - processing queryspace <gen:0> 
[2017-09-06 19:05:06,218 - DEBUG - LoadPlanTreePrinter.java::55] - LoadPlan(entity=com.book.store.entity.Purchase)
    - Returns
       - EntityReturnImpl(entity=com.book.store.entity.Purchase, querySpaceUid=<gen:0>, path=com.book.store.entity.Purchase)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.book.store.entity.Purchase)
          - SQL table alias mapping - purchase0_
          - alias suffix - 0_
          - suffixed key columns - {Purchase1_1_0_}
 
[2017-09-06 19:05:06,218 - DEBUG - EntityLoader.java::128] - Static select for entity com.book.store.entity.Purchase [UPGRADE_NOWAIT]: select purchase0_.Purchase_no as Purchase1_1_0_, purchase0_.Book_id as Book_id2_1_0_, purchase0_.Customer_name as Customer3_1_0_, purchase0_.Customer_mobileno as Customer4_1_0_, purchase0_.Purchase_date as Purchase5_1_0_, purchase0_.Amount as Amount6_1_0_ from Purchase purchase0_ where purchase0_.Purchase_no=? for update 
[2017-09-06 19:05:06,218 - DEBUG - QuerySpacesImpl.java::174] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@68af87ad] 
[2017-09-06 19:05:06,218 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : bookId 
[2017-09-06 19:05:06,218 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : customerName 
[2017-09-06 19:05:06,218 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : customerMobileNumber 
[2017-09-06 19:05:06,218 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : purchaseDate 
[2017-09-06 19:05:06,219 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : amount 
[2017-09-06 19:05:06,219 - DEBUG - FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java::76] - Building LoadPlan... 
[2017-09-06 19:05:06,219 - DEBUG - LoadQueryJoinAndFetchProcessor.java::95] - processing queryspace <gen:0> 
[2017-09-06 19:05:06,219 - DEBUG - LoadPlanTreePrinter.java::55] - LoadPlan(entity=com.book.store.entity.Purchase)
    - Returns
       - EntityReturnImpl(entity=com.book.store.entity.Purchase, querySpaceUid=<gen:0>, path=com.book.store.entity.Purchase)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.book.store.entity.Purchase)
          - SQL table alias mapping - purchase0_
          - alias suffix - 0_
          - suffixed key columns - {Purchase1_1_0_}
 
[2017-09-06 19:05:06,219 - DEBUG - EntityLoader.java::128] - Static select for entity com.book.store.entity.Purchase [UPGRADE_SKIPLOCKED]: select purchase0_.Purchase_no as Purchase1_1_0_, purchase0_.Book_id as Book_id2_1_0_, purchase0_.Customer_name as Customer3_1_0_, purchase0_.Customer_mobileno as Customer4_1_0_, purchase0_.Purchase_date as Purchase5_1_0_, purchase0_.Amount as Amount6_1_0_ from Purchase purchase0_ where purchase0_.Purchase_no=? for update 
[2017-09-06 19:05:06,219 - DEBUG - QuerySpacesImpl.java::174] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@9cfc77] 
[2017-09-06 19:05:06,219 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : bookId 
[2017-09-06 19:05:06,220 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : customerName 
[2017-09-06 19:05:06,220 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : customerMobileNumber 
[2017-09-06 19:05:06,220 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : purchaseDate 
[2017-09-06 19:05:06,220 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : amount 
[2017-09-06 19:05:06,220 - DEBUG - FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java::76] - Building LoadPlan... 
[2017-09-06 19:05:06,220 - DEBUG - LoadQueryJoinAndFetchProcessor.java::95] - processing queryspace <gen:0> 
[2017-09-06 19:05:06,220 - DEBUG - LoadPlanTreePrinter.java::55] - LoadPlan(entity=com.book.store.entity.Purchase)
    - Returns
       - EntityReturnImpl(entity=com.book.store.entity.Purchase, querySpaceUid=<gen:0>, path=com.book.store.entity.Purchase)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.book.store.entity.Purchase)
          - SQL table alias mapping - purchase0_
          - alias suffix - 0_
          - suffixed key columns - {Purchase1_1_0_}
 
[2017-09-06 19:05:06,220 - DEBUG - EntityLoader.java::128] - Static select for entity com.book.store.entity.Purchase [FORCE]: select purchase0_.Purchase_no as Purchase1_1_0_, purchase0_.Book_id as Book_id2_1_0_, purchase0_.Customer_name as Customer3_1_0_, purchase0_.Customer_mobileno as Customer4_1_0_, purchase0_.Purchase_date as Purchase5_1_0_, purchase0_.Amount as Amount6_1_0_ from Purchase purchase0_ where purchase0_.Purchase_no=? for update 
[2017-09-06 19:05:06,220 - DEBUG - QuerySpacesImpl.java::174] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@601eb4af] 
[2017-09-06 19:05:06,221 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : bookId 
[2017-09-06 19:05:06,221 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : customerName 
[2017-09-06 19:05:06,221 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : customerMobileNumber 
[2017-09-06 19:05:06,221 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : purchaseDate 
[2017-09-06 19:05:06,222 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : amount 
[2017-09-06 19:05:06,222 - DEBUG - FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java::76] - Building LoadPlan... 
[2017-09-06 19:05:06,222 - DEBUG - LoadQueryJoinAndFetchProcessor.java::95] - processing queryspace <gen:0> 
[2017-09-06 19:05:06,222 - DEBUG - LoadPlanTreePrinter.java::55] - LoadPlan(entity=com.book.store.entity.Purchase)
    - Returns
       - EntityReturnImpl(entity=com.book.store.entity.Purchase, querySpaceUid=<gen:0>, path=com.book.store.entity.Purchase)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.book.store.entity.Purchase)
          - SQL table alias mapping - purchase0_
          - alias suffix - 0_
          - suffixed key columns - {Purchase1_1_0_}
 
[2017-09-06 19:05:06,222 - DEBUG - EntityLoader.java::128] - Static select for entity com.book.store.entity.Purchase [PESSIMISTIC_READ]: select purchase0_.Purchase_no as Purchase1_1_0_, purchase0_.Book_id as Book_id2_1_0_, purchase0_.Customer_name as Customer3_1_0_, purchase0_.Customer_mobileno as Customer4_1_0_, purchase0_.Purchase_date as Purchase5_1_0_, purchase0_.Amount as Amount6_1_0_ from Purchase purchase0_ where purchase0_.Purchase_no=? lock in share mode 
[2017-09-06 19:05:06,223 - DEBUG - QuerySpacesImpl.java::174] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7675c171] 
[2017-09-06 19:05:06,223 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : bookId 
[2017-09-06 19:05:06,223 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : customerName 
[2017-09-06 19:05:06,223 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : customerMobileNumber 
[2017-09-06 19:05:06,223 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : purchaseDate 
[2017-09-06 19:05:06,223 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : amount 
[2017-09-06 19:05:06,223 - DEBUG - FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java::76] - Building LoadPlan... 
[2017-09-06 19:05:06,223 - DEBUG - LoadQueryJoinAndFetchProcessor.java::95] - processing queryspace <gen:0> 
[2017-09-06 19:05:06,224 - DEBUG - LoadPlanTreePrinter.java::55] - LoadPlan(entity=com.book.store.entity.Purchase)
    - Returns
       - EntityReturnImpl(entity=com.book.store.entity.Purchase, querySpaceUid=<gen:0>, path=com.book.store.entity.Purchase)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.book.store.entity.Purchase)
          - SQL table alias mapping - purchase0_
          - alias suffix - 0_
          - suffixed key columns - {Purchase1_1_0_}
 
[2017-09-06 19:05:06,224 - DEBUG - EntityLoader.java::128] - Static select for entity com.book.store.entity.Purchase [PESSIMISTIC_WRITE]: select purchase0_.Purchase_no as Purchase1_1_0_, purchase0_.Book_id as Book_id2_1_0_, purchase0_.Customer_name as Customer3_1_0_, purchase0_.Customer_mobileno as Customer4_1_0_, purchase0_.Purchase_date as Purchase5_1_0_, purchase0_.Amount as Amount6_1_0_ from Purchase purchase0_ where purchase0_.Purchase_no=? for update 
[2017-09-06 19:05:06,224 - DEBUG - QuerySpacesImpl.java::174] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@51cab489] 
[2017-09-06 19:05:06,224 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : bookId 
[2017-09-06 19:05:06,224 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : customerName 
[2017-09-06 19:05:06,224 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : customerMobileNumber 
[2017-09-06 19:05:06,224 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : purchaseDate 
[2017-09-06 19:05:06,224 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : amount 
[2017-09-06 19:05:06,224 - DEBUG - FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java::76] - Building LoadPlan... 
[2017-09-06 19:05:06,224 - DEBUG - LoadQueryJoinAndFetchProcessor.java::95] - processing queryspace <gen:0> 
[2017-09-06 19:05:06,225 - DEBUG - LoadPlanTreePrinter.java::55] - LoadPlan(entity=com.book.store.entity.Purchase)
    - Returns
       - EntityReturnImpl(entity=com.book.store.entity.Purchase, querySpaceUid=<gen:0>, path=com.book.store.entity.Purchase)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.book.store.entity.Purchase)
          - SQL table alias mapping - purchase0_
          - alias suffix - 0_
          - suffixed key columns - {Purchase1_1_0_}
 
[2017-09-06 19:05:06,225 - DEBUG - EntityLoader.java::128] - Static select for entity com.book.store.entity.Purchase [PESSIMISTIC_FORCE_INCREMENT]: select purchase0_.Purchase_no as Purchase1_1_0_, purchase0_.Book_id as Book_id2_1_0_, purchase0_.Customer_name as Customer3_1_0_, purchase0_.Customer_mobileno as Customer4_1_0_, purchase0_.Purchase_date as Purchase5_1_0_, purchase0_.Amount as Amount6_1_0_ from Purchase purchase0_ where purchase0_.Purchase_no=? for update 
[2017-09-06 19:05:06,225 - DEBUG - QuerySpacesImpl.java::174] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@773c2214] 
[2017-09-06 19:05:06,225 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : bookId 
[2017-09-06 19:05:06,225 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : customerName 
[2017-09-06 19:05:06,225 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : customerMobileNumber 
[2017-09-06 19:05:06,225 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : purchaseDate 
[2017-09-06 19:05:06,225 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : amount 
[2017-09-06 19:05:06,225 - DEBUG - FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java::76] - Building LoadPlan... 
[2017-09-06 19:05:06,225 - DEBUG - LoadQueryJoinAndFetchProcessor.java::95] - processing queryspace <gen:0> 
[2017-09-06 19:05:06,226 - DEBUG - LoadPlanTreePrinter.java::55] - LoadPlan(entity=com.book.store.entity.Purchase)
    - Returns
       - EntityReturnImpl(entity=com.book.store.entity.Purchase, querySpaceUid=<gen:0>, path=com.book.store.entity.Purchase)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.book.store.entity.Purchase)
          - SQL table alias mapping - purchase0_
          - alias suffix - 0_
          - suffixed key columns - {Purchase1_1_0_}
 
[2017-09-06 19:05:06,226 - DEBUG - EntityLoader.java::128] - Static select for entity com.book.store.entity.Purchase [OPTIMISTIC]: select purchase0_.Purchase_no as Purchase1_1_0_, purchase0_.Book_id as Book_id2_1_0_, purchase0_.Customer_name as Customer3_1_0_, purchase0_.Customer_mobileno as Customer4_1_0_, purchase0_.Purchase_date as Purchase5_1_0_, purchase0_.Amount as Amount6_1_0_ from Purchase purchase0_ where purchase0_.Purchase_no=? 
[2017-09-06 19:05:06,226 - DEBUG - QuerySpacesImpl.java::174] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@110b7837] 
[2017-09-06 19:05:06,226 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : bookId 
[2017-09-06 19:05:06,226 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : customerName 
[2017-09-06 19:05:06,226 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : customerMobileNumber 
[2017-09-06 19:05:06,226 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : purchaseDate 
[2017-09-06 19:05:06,226 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : amount 
[2017-09-06 19:05:06,226 - DEBUG - FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java::76] - Building LoadPlan... 
[2017-09-06 19:05:06,227 - DEBUG - LoadQueryJoinAndFetchProcessor.java::95] - processing queryspace <gen:0> 
[2017-09-06 19:05:06,227 - DEBUG - LoadPlanTreePrinter.java::55] - LoadPlan(entity=com.book.store.entity.Purchase)
    - Returns
       - EntityReturnImpl(entity=com.book.store.entity.Purchase, querySpaceUid=<gen:0>, path=com.book.store.entity.Purchase)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.book.store.entity.Purchase)
          - SQL table alias mapping - purchase0_
          - alias suffix - 0_
          - suffixed key columns - {Purchase1_1_0_}
 
[2017-09-06 19:05:06,227 - DEBUG - EntityLoader.java::128] - Static select for entity com.book.store.entity.Purchase [OPTIMISTIC_FORCE_INCREMENT]: select purchase0_.Purchase_no as Purchase1_1_0_, purchase0_.Book_id as Book_id2_1_0_, purchase0_.Customer_name as Customer3_1_0_, purchase0_.Customer_mobileno as Customer4_1_0_, purchase0_.Purchase_date as Purchase5_1_0_, purchase0_.Amount as Amount6_1_0_ from Purchase purchase0_ where purchase0_.Purchase_no=? 
[2017-09-06 19:05:06,227 - DEBUG - CascadeEntityLoader.java::38] - Static select for action ACTION_MERGE on entity com.book.store.entity.Purchase: select purchase0_.Purchase_no as Purchase1_1_0_, purchase0_.Book_id as Book_id2_1_0_, purchase0_.Customer_name as Customer3_1_0_, purchase0_.Customer_mobileno as Customer4_1_0_, purchase0_.Purchase_date as Purchase5_1_0_, purchase0_.Amount as Amount6_1_0_ from Purchase purchase0_ where purchase0_.Purchase_no=? 
[2017-09-06 19:05:06,227 - DEBUG - CascadeEntityLoader.java::38] - Static select for action ACTION_REFRESH on entity com.book.store.entity.Purchase: select purchase0_.Purchase_no as Purchase1_1_0_, purchase0_.Book_id as Book_id2_1_0_, purchase0_.Customer_name as Customer3_1_0_, purchase0_.Customer_mobileno as Customer4_1_0_, purchase0_.Purchase_date as Purchase5_1_0_, purchase0_.Amount as Amount6_1_0_ from Purchase purchase0_ where purchase0_.Purchase_no=? 
[2017-09-06 19:05:06,227 - DEBUG - SessionFactoryImpl.java::462] - Instantiated session factory 
[2017-09-06 19:05:06,227 - INFO - SchemaUpdate.java::101] - HHH000228: Running hbm2ddl schema update 
[2017-09-06 19:05:06,244 - DEBUG - Table.java::478] - No alter strings for table : Book 
[2017-09-06 19:05:06,257 - DEBUG - Table.java::478] - No alter strings for table : Purchase 
[2017-09-06 19:05:06,258 - DEBUG - JtaPlatformInitiator.java::42] - No JtaPlatform was specified, checking resolver 
[2017-09-06 19:05:06,258 - DEBUG - JtaPlatformResolverInitiator.java::33] - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver] 
[2017-09-06 19:05:06,259 - DEBUG - StandardJtaPlatformResolver.java::101] - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform] 
[2017-09-06 19:05:06,260 - DEBUG - NamedQueryRepository.java::149] - Checking 0 named HQL queries 
[2017-09-06 19:05:06,260 - DEBUG - NamedQueryRepository.java::165] - Checking 0 named SQL queries 
[2017-09-06 19:05:06,260 - DEBUG - SessionFactoryRegistry.java::74] - Registering SessionFactory: 034b7187-f48c-41d2-a261-39796015dca0 (<unnamed>) 
[2017-09-06 19:05:06,260 - DEBUG - SessionFactoryRegistry.java::81] - Not binding SessionFactory to JNDI, no JNDI name configured 
[2017-09-06 19:05:06,260 - DEBUG - StatisticsInitiator.java::82] - Statistics initialized [enabled=false] 
[2017-09-06 19:05:06,260 - DEBUG - QueryTranslatorFactoryInitiator.java::45] - QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@d2387c8 
[2017-09-06 19:05:06,261 - INFO - QueryTranslatorFactoryInitiator.java::47] - HHH000397: Using ASTQueryTranslatorFactory 
[2017-09-06 19:05:06,261 - DEBUG - QueryTranslatorImpl.java::278] - parse() - HQL: select bookId from com.book.store.entity.Book 
[2017-09-06 19:05:06,261 - DEBUG - QueryTranslatorImpl.java::296] - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     \-[DOT] Node: '.'
       |        +-[DOT] Node: '.'
       |        |  +-[DOT] Node: '.'
       |        |  |  +-[DOT] Node: '.'
       |        |  |  |  +-[IDENT] Node: 'com'
       |        |  |  |  \-[IDENT] Node: 'book'
       |        |  |  \-[IDENT] Node: 'store'
       |        |  \-[IDENT] Node: 'entity'
       |        \-[IDENT] Node: 'Book'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'bookId'
 
[2017-09-06 19:05:06,262 - DEBUG - ErrorCounter.java::95] - throwQueryException() : no errors 
[2017-09-06 19:05:06,262 - DEBUG - HqlSqlBaseWalker.java::121] - select << begin [level=1, statement=select] 
[2017-09-06 19:05:06,262 - DEBUG - FromElement.java::145] - FromClause{level=1} : com.book.store.entity.Book (<no alias>) -> book0_ 
[2017-09-06 19:05:06,262 - DEBUG - FromReferenceNode.java::60] - Resolved : {synthetic-alias} -> {synthetic-alias} 
[2017-09-06 19:05:06,263 - DEBUG - DotNode.java::654] - getDataType() : bookId -> org.hibernate.type.IntegerType@793f29ff 
[2017-09-06 19:05:06,263 - DEBUG - FromReferenceNode.java::60] - Resolved : {synthetic-alias}.bookId -> book0_.Book_id 
[2017-09-06 19:05:06,263 - DEBUG - HqlSqlBaseWalker.java::125] - select : finishing up [level=1, statement=select] 
[2017-09-06 19:05:06,263 - DEBUG - HqlSqlWalker.java::654] - processQuery() :  ( SELECT ( {select clause} ( book0_.Book_id {synthetic-alias} bookId ) ) ( FromClause{level=1} Book book0_ ) ) 
[2017-09-06 19:05:06,263 - DEBUG - JoinProcessor.java::169] - Using FROM fragment [Book book0_] 
[2017-09-06 19:05:06,263 - DEBUG - HqlSqlBaseWalker.java::129] - select >> end [level=1, statement=select] 
[2017-09-06 19:05:06,264 - DEBUG - QueryTranslatorImpl.java::265] - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Book)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'book0_.Book_id' {propertyName=bookId,dereferenceType=PRIMITIVE,getPropertyPath=bookId,path={synthetic-alias}.bookId,tableAlias=book0_,className=com.book.store.entity.Book,classAlias=null}
    |  |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
    |  |  \-[IDENT] IdentNode: 'bookId' {originalText=bookId}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[book0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Book book0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Book,tableAlias=book0_,origin=null,columns={,className=com.book.store.entity.Book}}
 
[2017-09-06 19:05:06,264 - DEBUG - ErrorCounter.java::95] - throwQueryException() : no errors 
[2017-09-06 19:05:06,264 - DEBUG - QueryTranslatorImpl.java::247] - HQL: select bookId from com.book.store.entity.Book 
[2017-09-06 19:05:06,264 - DEBUG - QueryTranslatorImpl.java::248] - SQL: select book0_.Book_id as col_0_0_ from Book book0_ 
[2017-09-06 19:05:06,264 - DEBUG - ErrorCounter.java::95] - throwQueryException() : no errors 
[2017-09-06 19:05:06,264 - DEBUG - SqlStatementLogger.java::92] - select book0_.Book_id as col_0_0_ from Book book0_ 
[2017-09-06 19:05:06,265 - DEBUG - DelegatingBasicLogger.java::384] - Result set row: 0 
[2017-09-06 19:05:06,265 - DEBUG - Loader.java::1514] - Result row:  
[2017-09-06 19:05:06,265 - DEBUG - DelegatingBasicLogger.java::384] - Result set row: 1 
[2017-09-06 19:05:06,265 - DEBUG - Loader.java::1514] - Result row:  
[2017-09-06 19:05:06,265 - DEBUG - DelegatingBasicLogger.java::384] - Result set row: 2 
[2017-09-06 19:05:06,265 - DEBUG - Loader.java::1514] - Result row:  
[2017-09-06 19:05:06,265 - DEBUG - DelegatingBasicLogger.java::384] - Result set row: 3 
[2017-09-06 19:05:06,265 - DEBUG - Loader.java::1514] - Result row:  
[2017-09-06 19:05:06,266 - DEBUG - DelegatingBasicLogger.java::384] - Result set row: 4 
[2017-09-06 19:05:06,266 - DEBUG - Loader.java::1514] - Result row:  
[2017-09-06 19:05:06,266 - DEBUG - DelegatingBasicLogger.java::384] - Result set row: 5 
[2017-09-06 19:05:06,266 - DEBUG - Loader.java::1514] - Result row:  
[2017-09-19 14:47:30,402 - DEBUG - CoreLogging.java::28] - Logging Provider: org.jboss.logging.Log4jLoggerProvider 
[2017-09-19 14:47:30,412 - DEBUG - IntegratorServiceImpl.java::46] - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator]. 
[2017-09-19 14:47:30,418 - DEBUG - IntegratorServiceImpl.java::46] - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator]. 
[2017-09-19 14:47:30,419 - DEBUG - IntegratorServiceImpl.java::46] - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator]. 
[2017-09-19 14:47:30,487 - INFO - Version.java::37] - HHH000412: Hibernate Core {5.0.1.Final} 
[2017-09-19 14:47:30,488 - INFO - Environment.java::213] - HHH000206: hibernate.properties not found 
[2017-09-19 14:47:30,489 - INFO - Environment.java::317] - HHH000021: Bytecode provider name : javassist 
[2017-09-19 14:47:30,512 - DEBUG - LocalXmlResourceResolver.java::57] - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd createDatabaseIfNotExist=true] 
[2017-09-19 14:47:30,513 - WARN - LocalXmlResourceResolver.java::91] - HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-configuration. Use namespace http://www.hibernate.org/dtd/hibernate-configuration instead.  Support for obsolete DTD/XSD namespaces may be removed at any time. 
[2017-09-19 14:47:30,514 - DEBUG - LocalXmlResourceResolver.java::95] - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/ 
[2017-09-19 14:47:30,518 - DEBUG - JaxbCfgProcessor.java::116] - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information 
[2017-09-19 14:47:30,670 - DEBUG - Configuration.java::722] - Building session factory using internal StandardServiceRegistryBuilder 
[2017-09-19 14:47:30,676 - DEBUG - ServiceBinding.java::68] - Overriding existing service binding [org.hibernate.secure.spi.JaccService] 
[2017-09-19 14:47:30,676 - DEBUG - Configuration.java::653] - Building session factory using provided StandardServiceRegistry 
[2017-09-19 14:47:30,688 - DEBUG - RegionFactoryInitiator.java::88] - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory 
[2017-09-19 14:47:30,695 - INFO - JavaReflectionManager.java::66] - HCANN000001: Hibernate Commons Annotations {5.0.0.Final} 
[2017-09-19 14:47:30,713 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration boolean -> org.hibernate.type.BooleanType@5f3a4b84 
[2017-09-19 14:47:30,713 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration boolean -> org.hibernate.type.BooleanType@5f3a4b84 
[2017-09-19 14:47:30,713 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@5f3a4b84 
[2017-09-19 14:47:30,714 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@7b69c6ba 
[2017-09-19 14:47:30,715 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration true_false -> org.hibernate.type.TrueFalseType@50d0686 
[2017-09-19 14:47:30,716 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration yes_no -> org.hibernate.type.YesNoType@77ec78b9 
[2017-09-19 14:47:30,717 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration byte -> org.hibernate.type.ByteType@4d3167f4 
[2017-09-19 14:47:30,717 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration byte -> org.hibernate.type.ByteType@4d3167f4 
[2017-09-19 14:47:30,717 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@4d3167f4 
[2017-09-19 14:47:30,718 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration character -> org.hibernate.type.CharacterType@eafc191 
[2017-09-19 14:47:30,718 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration char -> org.hibernate.type.CharacterType@eafc191 
[2017-09-19 14:47:30,718 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@eafc191 
[2017-09-19 14:47:30,719 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration short -> org.hibernate.type.ShortType@491cc5c9 
[2017-09-19 14:47:30,720 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration short -> org.hibernate.type.ShortType@491cc5c9 
[2017-09-19 14:47:30,720 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@491cc5c9 
[2017-09-19 14:47:30,721 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration integer -> org.hibernate.type.IntegerType@757942a1 
[2017-09-19 14:47:30,721 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration int -> org.hibernate.type.IntegerType@757942a1 
[2017-09-19 14:47:30,721 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@757942a1 
[2017-09-19 14:47:30,722 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration long -> org.hibernate.type.LongType@6950e31 
[2017-09-19 14:47:30,722 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration long -> org.hibernate.type.LongType@6950e31 
[2017-09-19 14:47:30,722 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.lang.Long -> org.hibernate.type.LongType@6950e31 
[2017-09-19 14:47:30,724 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration float -> org.hibernate.type.FloatType@33723e30 
[2017-09-19 14:47:30,724 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration float -> org.hibernate.type.FloatType@33723e30 
[2017-09-19 14:47:30,724 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@33723e30 
[2017-09-19 14:47:30,725 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration double -> org.hibernate.type.DoubleType@74a10858 
[2017-09-19 14:47:30,725 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration double -> org.hibernate.type.DoubleType@74a10858 
[2017-09-19 14:47:30,725 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@74a10858 
[2017-09-19 14:47:30,727 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@7403c468 
[2017-09-19 14:47:30,727 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@7403c468 
[2017-09-19 14:47:30,727 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@2a70a3d8 
[2017-09-19 14:47:30,728 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@2a70a3d8 
[2017-09-19 14:47:30,728 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration string -> org.hibernate.type.StringType@78ac1102 
[2017-09-19 14:47:30,728 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.lang.String -> org.hibernate.type.StringType@78ac1102 
[2017-09-19 14:47:30,729 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@7e0e6aa2 
[2017-09-19 14:47:30,730 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@782663d3 
[2017-09-19 14:47:30,730 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration url -> org.hibernate.type.UrlType@7276c8cd 
[2017-09-19 14:47:30,731 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.net.URL -> org.hibernate.type.UrlType@7276c8cd 
[2017-09-19 14:47:30,732 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration date -> org.hibernate.type.DateType@43a0cee9 
[2017-09-19 14:47:30,732 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.sql.Date -> org.hibernate.type.DateType@43a0cee9 
[2017-09-19 14:47:30,734 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration time -> org.hibernate.type.TimeType@67b467e9 
[2017-09-19 14:47:30,734 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@67b467e9 
[2017-09-19 14:47:30,735 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration timestamp -> org.hibernate.type.TimestampType@646007f4 
[2017-09-19 14:47:30,735 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@646007f4 
[2017-09-19 14:47:30,735 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@646007f4 
[2017-09-19 14:47:30,737 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@306279ee 
[2017-09-19 14:47:30,737 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration calendar -> org.hibernate.type.CalendarType@4c762604 
[2017-09-19 14:47:30,738 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4c762604 
[2017-09-19 14:47:30,738 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4c762604 
[2017-09-19 14:47:30,738 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@704921a5 
[2017-09-19 14:47:30,739 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration locale -> org.hibernate.type.LocaleType@fcd6521 
[2017-09-19 14:47:30,739 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@fcd6521 
[2017-09-19 14:47:30,740 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration currency -> org.hibernate.type.CurrencyType@4fcd19b3 
[2017-09-19 14:47:30,740 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@4fcd19b3 
[2017-09-19 14:47:30,741 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration timezone -> org.hibernate.type.TimeZoneType@b3d7190 
[2017-09-19 14:47:30,741 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@b3d7190 
[2017-09-19 14:47:30,741 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration class -> org.hibernate.type.ClassType@6dde5c8c 
[2017-09-19 14:47:30,742 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@6dde5c8c 
[2017-09-19 14:47:30,742 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@103f852 
[2017-09-19 14:47:30,743 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@103f852 
[2017-09-19 14:47:30,743 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4ae82894 
[2017-09-19 14:47:30,744 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration binary -> org.hibernate.type.BinaryType@7e9a5fbe 
[2017-09-19 14:47:30,744 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration byte[] -> org.hibernate.type.BinaryType@7e9a5fbe 
[2017-09-19 14:47:30,744 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration [B -> org.hibernate.type.BinaryType@7e9a5fbe 
[2017-09-19 14:47:30,745 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@61ca2dfa 
[2017-09-19 14:47:30,745 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@61ca2dfa 
[2017-09-19 14:47:30,745 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@61ca2dfa 
[2017-09-19 14:47:30,745 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration image -> org.hibernate.type.ImageType@2f8f5f62 
[2017-09-19 14:47:30,746 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration characters -> org.hibernate.type.CharArrayType@6483f5ae 
[2017-09-19 14:47:30,746 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration char[] -> org.hibernate.type.CharArrayType@6483f5ae 
[2017-09-19 14:47:30,746 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration [C -> org.hibernate.type.CharArrayType@6483f5ae 
[2017-09-19 14:47:30,747 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@15bfd87 
[2017-09-19 14:47:30,747 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@15bfd87 
[2017-09-19 14:47:30,747 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@15bfd87 
[2017-09-19 14:47:30,748 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration text -> org.hibernate.type.TextType@44f75083 
[2017-09-19 14:47:30,748 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration ntext -> org.hibernate.type.NTextType@27fe3806 
[2017-09-19 14:47:30,752 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration blob -> org.hibernate.type.BlobType@530612ba 
[2017-09-19 14:47:30,752 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@530612ba 
[2017-09-19 14:47:30,752 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@3bd94634 
[2017-09-19 14:47:30,755 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration clob -> org.hibernate.type.ClobType@679b62af 
[2017-09-19 14:47:30,755 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@679b62af 
[2017-09-19 14:47:30,757 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration nclob -> org.hibernate.type.NClobType@71a794e5 
[2017-09-19 14:47:30,757 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@71a794e5 
[2017-09-19 14:47:30,758 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4df828d7 
[2017-09-19 14:47:30,758 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@11e21d0e 
[2017-09-19 14:47:30,759 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration serializable -> org.hibernate.type.SerializableType@23bb8443 
[2017-09-19 14:47:30,761 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration object -> org.hibernate.type.ObjectType@12405818 
[2017-09-19 14:47:30,761 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@12405818 
[2017-09-19 14:47:30,761 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@6b67034 
[2017-09-19 14:47:30,761 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@16267862 
[2017-09-19 14:47:30,761 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@453da22c 
[2017-09-19 14:47:30,761 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@71248c21 
[2017-09-19 14:47:30,762 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@442675e1 
[2017-09-19 14:47:30,762 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@6166e06f 
[2017-09-19 14:47:30,762 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@49e202ad 
[2017-09-19 14:47:30,762 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@1c72da34 
[2017-09-19 14:47:30,772 - WARN - DriverManagerConnectionProviderImpl.java::76] - HHH000402: Using Hibernate built-in connection pool (not for production use!) 
[2017-09-19 14:47:30,776 - INFO - DriverManagerConnectionProviderImpl.java::149] - HHH000401: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/bookstore?createDatabaseIfNotExist=true&useSSL=false] 
[2017-09-19 14:47:30,777 - INFO - DriverManagerConnectionProviderImpl.java::155] - HHH000046: Connection properties: {user=neelakanta, password=Welcome@123, autocommit=true} 
[2017-09-19 14:47:30,777 - INFO - DriverManagerConnectionProviderImpl.java::163] - HHH000006: Autocommit mode: true 
[2017-09-19 14:47:30,778 - INFO - DriverManagerConnectionProviderImpl.java::85] - HHH000115: Hibernate connection pool size: 20 (min=1) 
[2017-09-19 14:47:30,778 - DEBUG - DelegatingBasicLogger.java::384] - Initializing Connection pool with 1 Connections 
[2017-09-19 14:47:31,054 - DEBUG - JdbcEnvironmentInitiator.java::72] - Database ->
       name : MySQL
    version : 5.5.55-0ubuntu0.14.04.1
      major : 5
      minor : 5 
[2017-09-19 14:47:31,055 - DEBUG - JdbcEnvironmentInitiator.java::83] - Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-6.0.5 ( Revision: 6e477e32dff18fb4dc102e53f5a68037a9f8762e )
      major : 6
      minor : 0 
[2017-09-19 14:47:31,055 - DEBUG - DelegatingBasicLogger.java::389] - JDBC version : 4.1 
[2017-09-19 14:47:31,077 - INFO - Dialect.java::154] - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect 
[2017-09-19 14:47:31,088 - DEBUG - StandardRefCursorSupport.java::170] - Unexpected error trying to gauge level of JDBC REF_CURSOR support : null 
[2017-09-19 14:47:31,103 - DEBUG - IdentifierHelperBuilder.java::116] - JDBC driver metadata reported database stores quoted identifiers in more than one case 
[2017-09-19 14:47:31,106 - DEBUG - IdentifierHelperBuilder.java::182] - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers 
[2017-09-19 14:47:31,128 - DEBUG - DefaultIdentifierGeneratorFactory.java::78] - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator] 
[2017-09-19 14:47:31,128 - DEBUG - DefaultIdentifierGeneratorFactory.java::78] - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator] 
[2017-09-19 14:47:31,129 - DEBUG - DefaultIdentifierGeneratorFactory.java::78] - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator] 
[2017-09-19 14:47:31,129 - DEBUG - DefaultIdentifierGeneratorFactory.java::78] - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator] 
[2017-09-19 14:47:31,130 - DEBUG - DefaultIdentifierGeneratorFactory.java::78] - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned] 
[2017-09-19 14:47:31,130 - DEBUG - DefaultIdentifierGeneratorFactory.java::78] - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator] 
[2017-09-19 14:47:31,131 - DEBUG - DefaultIdentifierGeneratorFactory.java::78] - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator] 
[2017-09-19 14:47:31,131 - DEBUG - DefaultIdentifierGeneratorFactory.java::78] - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator] 
[2017-09-19 14:47:31,132 - DEBUG - DefaultIdentifierGeneratorFactory.java::78] - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator] 
[2017-09-19 14:47:31,132 - DEBUG - DefaultIdentifierGeneratorFactory.java::78] - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator] 
[2017-09-19 14:47:31,133 - DEBUG - DefaultIdentifierGeneratorFactory.java::78] - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator] 
[2017-09-19 14:47:31,133 - DEBUG - DefaultIdentifierGeneratorFactory.java::78] - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator] 
[2017-09-19 14:47:31,133 - DEBUG - DefaultIdentifierGeneratorFactory.java::78] - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator] 
[2017-09-19 14:47:31,134 - DEBUG - DefaultIdentifierGeneratorFactory.java::78] - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator] 
[2017-09-19 14:47:31,153 - DEBUG - Namespace.java::47] - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}] 
[2017-09-19 14:47:31,170 - DEBUG - AnnotationBinder.java::509] - Binding entity from annotated class: com.book.store.entity.Book 
[2017-09-19 14:47:31,185 - DEBUG - Ejb3Column.java::213] - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'} 
[2017-09-19 14:47:31,189 - DEBUG - EntityBinder.java::389] - Import with entity name Book 
[2017-09-19 14:47:31,192 - DEBUG - EntityBinder.java::665] - Bind entity com.book.store.entity.Book on table Book 
[2017-09-19 14:47:31,207 - DEBUG - Ejb3Column.java::213] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=Book_id, insertable=true, updatable=true, unique=false} 
[2017-09-19 14:47:31,210 - DEBUG - PropertyBinder.java::169] - MetadataSourceProcessor property bookId with lazy=false 
[2017-09-19 14:47:31,211 - DEBUG - AbstractPropertyHolder.java::90] - Attempting to locate auto-apply AttributeConverter for property [com.book.store.entity.Book:bookId] 
[2017-09-19 14:47:31,212 - DEBUG - SimpleValueBinder.java::384] - building SimpleValue for bookId 
[2017-09-19 14:47:31,213 - DEBUG - PropertyBinder.java::260] - Building property bookId 
[2017-09-19 14:47:31,216 - DEBUG - Ejb3Column.java::213] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=Author_name, insertable=true, updatable=true, unique=false} 
[2017-09-19 14:47:31,216 - DEBUG - PropertyBinder.java::169] - MetadataSourceProcessor property authorName with lazy=false 
[2017-09-19 14:47:31,216 - DEBUG - AbstractPropertyHolder.java::90] - Attempting to locate auto-apply AttributeConverter for property [com.book.store.entity.Book:authorName] 
[2017-09-19 14:47:31,216 - DEBUG - SimpleValueBinder.java::384] - building SimpleValue for authorName 
[2017-09-19 14:47:31,217 - DEBUG - PropertyBinder.java::260] - Building property authorName 
[2017-09-19 14:47:31,217 - DEBUG - Ejb3Column.java::213] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=Book_name, insertable=true, updatable=true, unique=false} 
[2017-09-19 14:47:31,217 - DEBUG - PropertyBinder.java::169] - MetadataSourceProcessor property bookName with lazy=false 
[2017-09-19 14:47:31,217 - DEBUG - AbstractPropertyHolder.java::90] - Attempting to locate auto-apply AttributeConverter for property [com.book.store.entity.Book:bookName] 
[2017-09-19 14:47:31,217 - DEBUG - SimpleValueBinder.java::384] - building SimpleValue for bookName 
[2017-09-19 14:47:31,217 - DEBUG - PropertyBinder.java::260] - Building property bookName 
[2017-09-19 14:47:31,217 - DEBUG - Ejb3Column.java::213] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=Category, insertable=true, updatable=true, unique=false} 
[2017-09-19 14:47:31,218 - DEBUG - PropertyBinder.java::169] - MetadataSourceProcessor property categoryName with lazy=false 
[2017-09-19 14:47:31,218 - DEBUG - AbstractPropertyHolder.java::90] - Attempting to locate auto-apply AttributeConverter for property [com.book.store.entity.Book:categoryName] 
[2017-09-19 14:47:31,218 - DEBUG - SimpleValueBinder.java::384] - building SimpleValue for categoryName 
[2017-09-19 14:47:31,218 - DEBUG - PropertyBinder.java::260] - Building property categoryName 
[2017-09-19 14:47:31,218 - DEBUG - Ejb3Column.java::213] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=price, insertable=true, updatable=true, unique=false} 
[2017-09-19 14:47:31,218 - DEBUG - PropertyBinder.java::169] - MetadataSourceProcessor property price with lazy=false 
[2017-09-19 14:47:31,218 - DEBUG - AbstractPropertyHolder.java::90] - Attempting to locate auto-apply AttributeConverter for property [com.book.store.entity.Book:price] 
[2017-09-19 14:47:31,219 - DEBUG - SimpleValueBinder.java::384] - building SimpleValue for price 
[2017-09-19 14:47:31,219 - DEBUG - PropertyBinder.java::260] - Building property price 
[2017-09-19 14:47:31,219 - DEBUG - Ejb3Column.java::213] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=Publisher, insertable=true, updatable=true, unique=false} 
[2017-09-19 14:47:31,219 - DEBUG - PropertyBinder.java::169] - MetadataSourceProcessor property publisherName with lazy=false 
[2017-09-19 14:47:31,219 - DEBUG - AbstractPropertyHolder.java::90] - Attempting to locate auto-apply AttributeConverter for property [com.book.store.entity.Book:publisherName] 
[2017-09-19 14:47:31,219 - DEBUG - SimpleValueBinder.java::384] - building SimpleValue for publisherName 
[2017-09-19 14:47:31,219 - DEBUG - PropertyBinder.java::260] - Building property publisherName 
[2017-09-19 14:47:31,220 - DEBUG - AnnotationBinder.java::509] - Binding entity from annotated class: com.book.store.entity.Purchase 
[2017-09-19 14:47:31,220 - DEBUG - Ejb3Column.java::213] - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'} 
[2017-09-19 14:47:31,220 - DEBUG - EntityBinder.java::389] - Import with entity name Purchase 
[2017-09-19 14:47:31,220 - DEBUG - EntityBinder.java::665] - Bind entity com.book.store.entity.Purchase on table Purchase 
[2017-09-19 14:51:19,631 - DEBUG - CoreLogging.java::28] - Logging Provider: org.jboss.logging.Log4jLoggerProvider 
[2017-09-19 14:51:19,640 - DEBUG - IntegratorServiceImpl.java::46] - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator]. 
[2017-09-19 14:51:19,643 - DEBUG - IntegratorServiceImpl.java::46] - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator]. 
[2017-09-19 14:51:19,645 - DEBUG - IntegratorServiceImpl.java::46] - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator]. 
[2017-09-19 14:51:19,714 - INFO - Version.java::37] - HHH000412: Hibernate Core {5.0.1.Final} 
[2017-09-19 14:51:19,715 - INFO - Environment.java::213] - HHH000206: hibernate.properties not found 
[2017-09-19 14:51:19,716 - INFO - Environment.java::317] - HHH000021: Bytecode provider name : javassist 
[2017-09-19 14:51:19,740 - DEBUG - LocalXmlResourceResolver.java::57] - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd createDatabaseIfNotExist=true] 
[2017-09-19 14:51:19,741 - WARN - LocalXmlResourceResolver.java::91] - HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-configuration. Use namespace http://www.hibernate.org/dtd/hibernate-configuration instead.  Support for obsolete DTD/XSD namespaces may be removed at any time. 
[2017-09-19 14:51:19,741 - DEBUG - LocalXmlResourceResolver.java::95] - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/ 
[2017-09-19 14:51:19,746 - DEBUG - JaxbCfgProcessor.java::116] - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information 
[2017-09-19 14:51:19,875 - DEBUG - Configuration.java::722] - Building session factory using internal StandardServiceRegistryBuilder 
[2017-09-19 14:51:19,881 - DEBUG - ServiceBinding.java::68] - Overriding existing service binding [org.hibernate.secure.spi.JaccService] 
[2017-09-19 14:51:19,881 - DEBUG - Configuration.java::653] - Building session factory using provided StandardServiceRegistry 
[2017-09-19 14:51:19,893 - DEBUG - RegionFactoryInitiator.java::88] - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory 
[2017-09-19 14:51:19,899 - INFO - JavaReflectionManager.java::66] - HCANN000001: Hibernate Commons Annotations {5.0.0.Final} 
[2017-09-19 14:51:19,918 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration boolean -> org.hibernate.type.BooleanType@5f3a4b84 
[2017-09-19 14:51:19,918 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration boolean -> org.hibernate.type.BooleanType@5f3a4b84 
[2017-09-19 14:51:19,918 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@5f3a4b84 
[2017-09-19 14:51:19,919 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@7b69c6ba 
[2017-09-19 14:51:19,920 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration true_false -> org.hibernate.type.TrueFalseType@50d0686 
[2017-09-19 14:51:19,921 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration yes_no -> org.hibernate.type.YesNoType@77ec78b9 
[2017-09-19 14:51:19,922 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration byte -> org.hibernate.type.ByteType@4d3167f4 
[2017-09-19 14:51:19,922 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration byte -> org.hibernate.type.ByteType@4d3167f4 
[2017-09-19 14:51:19,922 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@4d3167f4 
[2017-09-19 14:51:19,923 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration character -> org.hibernate.type.CharacterType@eafc191 
[2017-09-19 14:51:19,923 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration char -> org.hibernate.type.CharacterType@eafc191 
[2017-09-19 14:51:19,923 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@eafc191 
[2017-09-19 14:51:19,924 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration short -> org.hibernate.type.ShortType@491cc5c9 
[2017-09-19 14:51:19,924 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration short -> org.hibernate.type.ShortType@491cc5c9 
[2017-09-19 14:51:19,924 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@491cc5c9 
[2017-09-19 14:51:19,925 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration integer -> org.hibernate.type.IntegerType@757942a1 
[2017-09-19 14:51:19,925 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration int -> org.hibernate.type.IntegerType@757942a1 
[2017-09-19 14:51:19,926 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@757942a1 
[2017-09-19 14:51:19,926 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration long -> org.hibernate.type.LongType@6950e31 
[2017-09-19 14:51:19,927 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration long -> org.hibernate.type.LongType@6950e31 
[2017-09-19 14:51:19,927 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.lang.Long -> org.hibernate.type.LongType@6950e31 
[2017-09-19 14:51:19,928 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration float -> org.hibernate.type.FloatType@33723e30 
[2017-09-19 14:51:19,928 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration float -> org.hibernate.type.FloatType@33723e30 
[2017-09-19 14:51:19,929 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@33723e30 
[2017-09-19 14:51:19,930 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration double -> org.hibernate.type.DoubleType@74a10858 
[2017-09-19 14:51:19,930 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration double -> org.hibernate.type.DoubleType@74a10858 
[2017-09-19 14:51:19,930 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@74a10858 
[2017-09-19 14:51:19,931 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@7403c468 
[2017-09-19 14:51:19,931 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@7403c468 
[2017-09-19 14:51:19,932 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@2a70a3d8 
[2017-09-19 14:51:19,932 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@2a70a3d8 
[2017-09-19 14:51:19,933 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration string -> org.hibernate.type.StringType@78ac1102 
[2017-09-19 14:51:19,933 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.lang.String -> org.hibernate.type.StringType@78ac1102 
[2017-09-19 14:51:19,934 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@7e0e6aa2 
[2017-09-19 14:51:19,934 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@782663d3 
[2017-09-19 14:51:19,935 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration url -> org.hibernate.type.UrlType@7276c8cd 
[2017-09-19 14:51:19,935 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.net.URL -> org.hibernate.type.UrlType@7276c8cd 
[2017-09-19 14:51:19,936 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration date -> org.hibernate.type.DateType@43a0cee9 
[2017-09-19 14:51:19,936 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.sql.Date -> org.hibernate.type.DateType@43a0cee9 
[2017-09-19 14:51:19,938 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration time -> org.hibernate.type.TimeType@67b467e9 
[2017-09-19 14:51:19,938 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@67b467e9 
[2017-09-19 14:51:19,939 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration timestamp -> org.hibernate.type.TimestampType@646007f4 
[2017-09-19 14:51:19,939 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@646007f4 
[2017-09-19 14:51:19,939 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@646007f4 
[2017-09-19 14:51:19,940 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@306279ee 
[2017-09-19 14:51:19,941 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration calendar -> org.hibernate.type.CalendarType@4c762604 
[2017-09-19 14:51:19,941 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4c762604 
[2017-09-19 14:51:19,941 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4c762604 
[2017-09-19 14:51:19,942 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@704921a5 
[2017-09-19 14:51:19,942 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration locale -> org.hibernate.type.LocaleType@fcd6521 
[2017-09-19 14:51:19,942 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@fcd6521 
[2017-09-19 14:51:19,943 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration currency -> org.hibernate.type.CurrencyType@4fcd19b3 
[2017-09-19 14:51:19,943 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@4fcd19b3 
[2017-09-19 14:51:19,944 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration timezone -> org.hibernate.type.TimeZoneType@b3d7190 
[2017-09-19 14:51:19,944 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@b3d7190 
[2017-09-19 14:51:19,944 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration class -> org.hibernate.type.ClassType@6dde5c8c 
[2017-09-19 14:51:19,945 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@6dde5c8c 
[2017-09-19 14:51:19,945 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@103f852 
[2017-09-19 14:51:19,946 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@103f852 
[2017-09-19 14:51:19,946 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4ae82894 
[2017-09-19 14:51:19,946 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration binary -> org.hibernate.type.BinaryType@7e9a5fbe 
[2017-09-19 14:51:19,947 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration byte[] -> org.hibernate.type.BinaryType@7e9a5fbe 
[2017-09-19 14:51:19,947 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration [B -> org.hibernate.type.BinaryType@7e9a5fbe 
[2017-09-19 14:51:19,947 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@61ca2dfa 
[2017-09-19 14:51:19,947 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@61ca2dfa 
[2017-09-19 14:51:19,948 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@61ca2dfa 
[2017-09-19 14:51:19,948 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration image -> org.hibernate.type.ImageType@2f8f5f62 
[2017-09-19 14:51:19,949 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration characters -> org.hibernate.type.CharArrayType@6483f5ae 
[2017-09-19 14:51:19,949 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration char[] -> org.hibernate.type.CharArrayType@6483f5ae 
[2017-09-19 14:51:19,949 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration [C -> org.hibernate.type.CharArrayType@6483f5ae 
[2017-09-19 14:51:19,949 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@15bfd87 
[2017-09-19 14:51:19,950 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@15bfd87 
[2017-09-19 14:51:19,950 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@15bfd87 
[2017-09-19 14:51:19,950 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration text -> org.hibernate.type.TextType@44f75083 
[2017-09-19 14:51:19,950 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration ntext -> org.hibernate.type.NTextType@27fe3806 
[2017-09-19 14:51:19,954 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration blob -> org.hibernate.type.BlobType@530612ba 
[2017-09-19 14:51:19,954 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@530612ba 
[2017-09-19 14:51:19,954 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@3bd94634 
[2017-09-19 14:51:19,957 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration clob -> org.hibernate.type.ClobType@679b62af 
[2017-09-19 14:51:19,957 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@679b62af 
[2017-09-19 14:51:19,959 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration nclob -> org.hibernate.type.NClobType@71a794e5 
[2017-09-19 14:51:19,959 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@71a794e5 
[2017-09-19 14:51:19,959 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4df828d7 
[2017-09-19 14:51:19,960 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@11e21d0e 
[2017-09-19 14:51:19,960 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration serializable -> org.hibernate.type.SerializableType@23bb8443 
[2017-09-19 14:51:19,962 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration object -> org.hibernate.type.ObjectType@12405818 
[2017-09-19 14:51:19,962 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@12405818 
[2017-09-19 14:51:19,963 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@6b67034 
[2017-09-19 14:51:19,963 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@16267862 
[2017-09-19 14:51:19,963 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@453da22c 
[2017-09-19 14:51:19,963 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@71248c21 
[2017-09-19 14:51:19,963 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@442675e1 
[2017-09-19 14:51:19,963 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@6166e06f 
[2017-09-19 14:51:19,963 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@49e202ad 
[2017-09-19 14:51:19,963 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@1c72da34 
[2017-09-19 14:51:19,969 - WARN - DriverManagerConnectionProviderImpl.java::76] - HHH000402: Using Hibernate built-in connection pool (not for production use!) 
[2017-09-19 14:51:19,973 - INFO - DriverManagerConnectionProviderImpl.java::149] - HHH000401: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/bookstore?createDatabaseIfNotExist=true&useSSL=false] 
[2017-09-19 14:51:19,973 - INFO - DriverManagerConnectionProviderImpl.java::155] - HHH000046: Connection properties: {user=neelakanta, password=Welcome@123, autocommit=true} 
[2017-09-19 14:51:19,973 - INFO - DriverManagerConnectionProviderImpl.java::163] - HHH000006: Autocommit mode: true 
[2017-09-19 14:51:19,974 - INFO - DriverManagerConnectionProviderImpl.java::85] - HHH000115: Hibernate connection pool size: 20 (min=1) 
[2017-09-19 14:51:19,974 - DEBUG - DelegatingBasicLogger.java::384] - Initializing Connection pool with 1 Connections 
[2017-09-19 14:51:20,207 - DEBUG - JdbcEnvironmentInitiator.java::72] - Database ->
       name : MySQL
    version : 5.5.55-0ubuntu0.14.04.1
      major : 5
      minor : 5 
[2017-09-19 14:51:20,208 - DEBUG - JdbcEnvironmentInitiator.java::83] - Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-6.0.5 ( Revision: 6e477e32dff18fb4dc102e53f5a68037a9f8762e )
      major : 6
      minor : 0 
[2017-09-19 14:51:20,208 - DEBUG - DelegatingBasicLogger.java::389] - JDBC version : 4.1 
[2017-09-19 14:51:20,215 - INFO - Dialect.java::154] - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect 
[2017-09-19 14:51:20,224 - DEBUG - StandardRefCursorSupport.java::170] - Unexpected error trying to gauge level of JDBC REF_CURSOR support : null 
[2017-09-19 14:51:20,240 - DEBUG - IdentifierHelperBuilder.java::116] - JDBC driver metadata reported database stores quoted identifiers in more than one case 
[2017-09-19 14:51:20,242 - DEBUG - IdentifierHelperBuilder.java::182] - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers 
[2017-09-19 14:51:20,264 - DEBUG - DefaultIdentifierGeneratorFactory.java::78] - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator] 
[2017-09-19 14:51:20,264 - DEBUG - DefaultIdentifierGeneratorFactory.java::78] - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator] 
[2017-09-19 14:51:20,265 - DEBUG - DefaultIdentifierGeneratorFactory.java::78] - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator] 
[2017-09-19 14:51:20,265 - DEBUG - DefaultIdentifierGeneratorFactory.java::78] - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator] 
[2017-09-19 14:51:20,265 - DEBUG - DefaultIdentifierGeneratorFactory.java::78] - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned] 
[2017-09-19 14:51:20,266 - DEBUG - DefaultIdentifierGeneratorFactory.java::78] - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator] 
[2017-09-19 14:51:20,266 - DEBUG - DefaultIdentifierGeneratorFactory.java::78] - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator] 
[2017-09-19 14:51:20,267 - DEBUG - DefaultIdentifierGeneratorFactory.java::78] - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator] 
[2017-09-19 14:51:20,268 - DEBUG - DefaultIdentifierGeneratorFactory.java::78] - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator] 
[2017-09-19 14:51:20,268 - DEBUG - DefaultIdentifierGeneratorFactory.java::78] - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator] 
[2017-09-19 14:51:20,268 - DEBUG - DefaultIdentifierGeneratorFactory.java::78] - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator] 
[2017-09-19 14:51:20,268 - DEBUG - DefaultIdentifierGeneratorFactory.java::78] - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator] 
[2017-09-19 14:51:20,269 - DEBUG - DefaultIdentifierGeneratorFactory.java::78] - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator] 
[2017-09-19 14:51:20,269 - DEBUG - DefaultIdentifierGeneratorFactory.java::78] - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator] 
[2017-09-19 14:51:20,288 - DEBUG - Namespace.java::47] - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}] 
[2017-09-19 14:51:20,305 - DEBUG - AnnotationBinder.java::509] - Binding entity from annotated class: com.book.store.entity.Book 
[2017-09-19 14:51:20,320 - DEBUG - Ejb3Column.java::213] - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'} 
[2017-09-19 14:51:20,324 - DEBUG - EntityBinder.java::389] - Import with entity name Book 
[2017-09-19 14:51:20,326 - DEBUG - EntityBinder.java::665] - Bind entity com.book.store.entity.Book on table Book 
[2017-09-19 14:51:20,342 - DEBUG - Ejb3Column.java::213] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=Book_id, insertable=true, updatable=true, unique=false} 
[2017-09-19 14:51:20,344 - DEBUG - PropertyBinder.java::169] - MetadataSourceProcessor property bookId with lazy=false 
[2017-09-19 14:51:20,346 - DEBUG - AbstractPropertyHolder.java::90] - Attempting to locate auto-apply AttributeConverter for property [com.book.store.entity.Book:bookId] 
[2017-09-19 14:51:20,347 - DEBUG - SimpleValueBinder.java::384] - building SimpleValue for bookId 
[2017-09-19 14:51:20,348 - DEBUG - PropertyBinder.java::260] - Building property bookId 
[2017-09-19 14:51:20,351 - DEBUG - Ejb3Column.java::213] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=Author_name, insertable=true, updatable=true, unique=false} 
[2017-09-19 14:51:20,351 - DEBUG - PropertyBinder.java::169] - MetadataSourceProcessor property authorName with lazy=false 
[2017-09-19 14:51:20,352 - DEBUG - AbstractPropertyHolder.java::90] - Attempting to locate auto-apply AttributeConverter for property [com.book.store.entity.Book:authorName] 
[2017-09-19 14:51:20,352 - DEBUG - SimpleValueBinder.java::384] - building SimpleValue for authorName 
[2017-09-19 14:51:20,352 - DEBUG - PropertyBinder.java::260] - Building property authorName 
[2017-09-19 14:51:20,352 - DEBUG - Ejb3Column.java::213] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=Book_name, insertable=true, updatable=true, unique=false} 
[2017-09-19 14:51:20,352 - DEBUG - PropertyBinder.java::169] - MetadataSourceProcessor property bookName with lazy=false 
[2017-09-19 14:51:20,352 - DEBUG - AbstractPropertyHolder.java::90] - Attempting to locate auto-apply AttributeConverter for property [com.book.store.entity.Book:bookName] 
[2017-09-19 14:51:20,353 - DEBUG - SimpleValueBinder.java::384] - building SimpleValue for bookName 
[2017-09-19 14:51:20,353 - DEBUG - PropertyBinder.java::260] - Building property bookName 
[2017-09-19 14:51:20,353 - DEBUG - Ejb3Column.java::213] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=Category, insertable=true, updatable=true, unique=false} 
[2017-09-19 14:51:20,353 - DEBUG - PropertyBinder.java::169] - MetadataSourceProcessor property categoryName with lazy=false 
[2017-09-19 14:51:20,353 - DEBUG - AbstractPropertyHolder.java::90] - Attempting to locate auto-apply AttributeConverter for property [com.book.store.entity.Book:categoryName] 
[2017-09-19 14:51:20,353 - DEBUG - SimpleValueBinder.java::384] - building SimpleValue for categoryName 
[2017-09-19 14:51:20,353 - DEBUG - PropertyBinder.java::260] - Building property categoryName 
[2017-09-19 14:51:20,354 - DEBUG - Ejb3Column.java::213] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=price, insertable=true, updatable=true, unique=false} 
[2017-09-19 14:51:20,354 - DEBUG - PropertyBinder.java::169] - MetadataSourceProcessor property price with lazy=false 
[2017-09-19 14:51:20,354 - DEBUG - AbstractPropertyHolder.java::90] - Attempting to locate auto-apply AttributeConverter for property [com.book.store.entity.Book:price] 
[2017-09-19 14:51:20,354 - DEBUG - SimpleValueBinder.java::384] - building SimpleValue for price 
[2017-09-19 14:51:20,354 - DEBUG - PropertyBinder.java::260] - Building property price 
[2017-09-19 14:51:20,354 - DEBUG - Ejb3Column.java::213] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=Publisher, insertable=true, updatable=true, unique=false} 
[2017-09-19 14:51:20,354 - DEBUG - PropertyBinder.java::169] - MetadataSourceProcessor property publisherName with lazy=false 
[2017-09-19 14:51:20,355 - DEBUG - AbstractPropertyHolder.java::90] - Attempting to locate auto-apply AttributeConverter for property [com.book.store.entity.Book:publisherName] 
[2017-09-19 14:51:20,355 - DEBUG - SimpleValueBinder.java::384] - building SimpleValue for publisherName 
[2017-09-19 14:51:20,355 - DEBUG - PropertyBinder.java::260] - Building property publisherName 
[2017-09-19 14:51:20,355 - DEBUG - AnnotationBinder.java::509] - Binding entity from annotated class: com.book.store.entity.Purchase 
[2017-09-19 14:51:20,356 - DEBUG - Ejb3Column.java::213] - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'} 
[2017-09-19 14:51:20,356 - DEBUG - EntityBinder.java::389] - Import with entity name Purchase 
[2017-09-19 14:51:20,356 - DEBUG - EntityBinder.java::665] - Bind entity com.book.store.entity.Purchase on table Purchase 
[2017-09-19 14:53:08,091 - DEBUG - CoreLogging.java::28] - Logging Provider: org.jboss.logging.Log4jLoggerProvider 
[2017-09-19 14:53:08,100 - DEBUG - IntegratorServiceImpl.java::46] - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator]. 
[2017-09-19 14:53:08,103 - DEBUG - IntegratorServiceImpl.java::46] - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator]. 
[2017-09-19 14:53:08,104 - DEBUG - IntegratorServiceImpl.java::46] - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator]. 
[2017-09-19 14:53:08,173 - INFO - Version.java::37] - HHH000412: Hibernate Core {5.0.1.Final} 
[2017-09-19 14:53:08,174 - INFO - Environment.java::213] - HHH000206: hibernate.properties not found 
[2017-09-19 14:53:08,175 - INFO - Environment.java::317] - HHH000021: Bytecode provider name : javassist 
[2017-09-19 14:53:08,198 - DEBUG - LocalXmlResourceResolver.java::57] - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd createDatabaseIfNotExist=true] 
[2017-09-19 14:53:08,200 - WARN - LocalXmlResourceResolver.java::91] - HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-configuration. Use namespace http://www.hibernate.org/dtd/hibernate-configuration instead.  Support for obsolete DTD/XSD namespaces may be removed at any time. 
[2017-09-19 14:53:08,200 - DEBUG - LocalXmlResourceResolver.java::95] - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/ 
[2017-09-19 14:53:08,204 - DEBUG - JaxbCfgProcessor.java::116] - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information 
[2017-09-19 14:53:08,337 - DEBUG - Configuration.java::722] - Building session factory using internal StandardServiceRegistryBuilder 
[2017-09-19 14:53:08,343 - DEBUG - ServiceBinding.java::68] - Overriding existing service binding [org.hibernate.secure.spi.JaccService] 
[2017-09-19 14:53:08,343 - DEBUG - Configuration.java::653] - Building session factory using provided StandardServiceRegistry 
[2017-09-19 14:53:08,355 - DEBUG - RegionFactoryInitiator.java::88] - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory 
[2017-09-19 14:53:08,362 - INFO - JavaReflectionManager.java::66] - HCANN000001: Hibernate Commons Annotations {5.0.0.Final} 
[2017-09-19 14:53:08,371 - DEBUG - LocalXmlResourceResolver.java::57] - Interpreting public/system identifier : [-//Hibernate/Hibernate Mapping DTD 5.0//EN] - [http://hibernate.sourceforge.net/hibernate-mapping-5.0.dtd] 
[2017-09-19 14:53:08,371 - WARN - LocalXmlResourceResolver.java::75] - HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-mapping. Use namespace http://www.hibernate.org/dtd/hibernate-mapping instead.  Support for obsolete DTD/XSD namespaces may be removed at any time. 
[2017-09-19 14:53:08,372 - DEBUG - LocalXmlResourceResolver.java::79] - Recognized legacy hibernate-mapping identifier; attempting to resolve on classpath under org/hibernate/ 
[2017-09-19 14:53:08,391 - DEBUG - MappingBinder.java::54] - Performing JAXB binding of hbm.xml document : Origin(name=bookstore.hbm.xml,type=RESOURCE) 
[2017-09-19 14:53:08,862 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration boolean -> org.hibernate.type.BooleanType@2f8dad04 
[2017-09-19 14:53:08,862 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration boolean -> org.hibernate.type.BooleanType@2f8dad04 
[2017-09-19 14:53:08,863 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@2f8dad04 
[2017-09-19 14:53:08,863 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@44821a96 
[2017-09-19 14:53:08,864 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration true_false -> org.hibernate.type.TrueFalseType@625732 
[2017-09-19 14:53:08,864 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration yes_no -> org.hibernate.type.YesNoType@cad498c 
[2017-09-19 14:53:08,866 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration byte -> org.hibernate.type.ByteType@27ff5d15 
[2017-09-19 14:53:08,866 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration byte -> org.hibernate.type.ByteType@27ff5d15 
[2017-09-19 14:53:08,866 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@27ff5d15 
[2017-09-19 14:53:08,867 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration character -> org.hibernate.type.CharacterType@31e5415e 
[2017-09-19 14:53:08,867 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration char -> org.hibernate.type.CharacterType@31e5415e 
[2017-09-19 14:53:08,867 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@31e5415e 
[2017-09-19 14:53:08,868 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration short -> org.hibernate.type.ShortType@22e357dc 
[2017-09-19 14:53:08,868 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration short -> org.hibernate.type.ShortType@22e357dc 
[2017-09-19 14:53:08,868 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@22e357dc 
[2017-09-19 14:53:08,869 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration integer -> org.hibernate.type.IntegerType@550ee7e5 
[2017-09-19 14:53:08,869 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration int -> org.hibernate.type.IntegerType@550ee7e5 
[2017-09-19 14:53:08,869 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@550ee7e5 
[2017-09-19 14:53:08,870 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration long -> org.hibernate.type.LongType@223aa2f7 
[2017-09-19 14:53:08,870 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration long -> org.hibernate.type.LongType@223aa2f7 
[2017-09-19 14:53:08,870 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.lang.Long -> org.hibernate.type.LongType@223aa2f7 
[2017-09-19 14:53:08,871 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration float -> org.hibernate.type.FloatType@29d89d5d 
[2017-09-19 14:53:08,872 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration float -> org.hibernate.type.FloatType@29d89d5d 
[2017-09-19 14:53:08,872 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@29d89d5d 
[2017-09-19 14:53:08,873 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration double -> org.hibernate.type.DoubleType@37654521 
[2017-09-19 14:53:08,873 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration double -> org.hibernate.type.DoubleType@37654521 
[2017-09-19 14:53:08,873 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@37654521 
[2017-09-19 14:53:08,874 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@24fcf36f 
[2017-09-19 14:53:08,874 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@24fcf36f 
[2017-09-19 14:53:08,875 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@2b48a640 
[2017-09-19 14:53:08,875 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@2b48a640 
[2017-09-19 14:53:08,876 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration string -> org.hibernate.type.StringType@4bb33f74 
[2017-09-19 14:53:08,876 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.lang.String -> org.hibernate.type.StringType@4bb33f74 
[2017-09-19 14:53:08,876 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@73700b80 
[2017-09-19 14:53:08,877 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@4a7f959b 
[2017-09-19 14:53:08,878 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration url -> org.hibernate.type.UrlType@63a12c68 
[2017-09-19 14:53:08,878 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.net.URL -> org.hibernate.type.UrlType@63a12c68 
[2017-09-19 14:53:08,879 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration date -> org.hibernate.type.DateType@67c33749 
[2017-09-19 14:53:08,879 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.sql.Date -> org.hibernate.type.DateType@67c33749 
[2017-09-19 14:53:08,880 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration time -> org.hibernate.type.TimeType@3d6f0054 
[2017-09-19 14:53:08,880 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@3d6f0054 
[2017-09-19 14:53:08,881 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration timestamp -> org.hibernate.type.TimestampType@3bf9ce3e 
[2017-09-19 14:53:08,881 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@3bf9ce3e 
[2017-09-19 14:53:08,881 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@3bf9ce3e 
[2017-09-19 14:53:08,883 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@383bfa16 
[2017-09-19 14:53:08,884 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration calendar -> org.hibernate.type.CalendarType@4d0f2471 
[2017-09-19 14:53:08,884 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4d0f2471 
[2017-09-19 14:53:08,884 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4d0f2471 
[2017-09-19 14:53:08,884 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@73e22a3d 
[2017-09-19 14:53:08,885 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration locale -> org.hibernate.type.LocaleType@4229bb3f 
[2017-09-19 14:53:08,885 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@4229bb3f 
[2017-09-19 14:53:08,886 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration currency -> org.hibernate.type.CurrencyType@35aea049 
[2017-09-19 14:53:08,886 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@35aea049 
[2017-09-19 14:53:08,887 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration timezone -> org.hibernate.type.TimeZoneType@3f6b0be5 
[2017-09-19 14:53:08,887 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@3f6b0be5 
[2017-09-19 14:53:08,888 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration class -> org.hibernate.type.ClassType@a530d0a 
[2017-09-19 14:53:08,888 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@a530d0a 
[2017-09-19 14:53:08,889 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1af2d44a 
[2017-09-19 14:53:08,889 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1af2d44a 
[2017-09-19 14:53:08,889 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@58695725 
[2017-09-19 14:53:08,890 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration binary -> org.hibernate.type.BinaryType@25fb8912 
[2017-09-19 14:53:08,890 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration byte[] -> org.hibernate.type.BinaryType@25fb8912 
[2017-09-19 14:53:08,890 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration [B -> org.hibernate.type.BinaryType@25fb8912 
[2017-09-19 14:53:08,891 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@58d75e99 
[2017-09-19 14:53:08,891 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@58d75e99 
[2017-09-19 14:53:08,891 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@58d75e99 
[2017-09-19 14:53:08,892 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration image -> org.hibernate.type.ImageType@6fd83fc1 
[2017-09-19 14:53:08,892 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration characters -> org.hibernate.type.CharArrayType@6392827e 
[2017-09-19 14:53:08,893 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration char[] -> org.hibernate.type.CharArrayType@6392827e 
[2017-09-19 14:53:08,893 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration [C -> org.hibernate.type.CharArrayType@6392827e 
[2017-09-19 14:53:08,894 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@5d0a1059 
[2017-09-19 14:53:08,894 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@5d0a1059 
[2017-09-19 14:53:08,894 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@5d0a1059 
[2017-09-19 14:53:08,894 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration text -> org.hibernate.type.TextType@5a56cdac 
[2017-09-19 14:53:08,895 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration ntext -> org.hibernate.type.NTextType@434a63ab 
[2017-09-19 14:53:08,898 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration blob -> org.hibernate.type.BlobType@437da279 
[2017-09-19 14:53:08,898 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@437da279 
[2017-09-19 14:53:08,898 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@3cebbb30 
[2017-09-19 14:53:08,901 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration clob -> org.hibernate.type.ClobType@4c1909a3 
[2017-09-19 14:53:08,901 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4c1909a3 
[2017-09-19 14:53:08,903 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration nclob -> org.hibernate.type.NClobType@771a660 
[2017-09-19 14:53:08,903 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@771a660 
[2017-09-19 14:53:08,903 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3f6f6701 
[2017-09-19 14:53:08,903 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@1ed6388a 
[2017-09-19 14:53:08,904 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration serializable -> org.hibernate.type.SerializableType@121314f7 
[2017-09-19 14:53:08,906 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration object -> org.hibernate.type.ObjectType@4a883b15 
[2017-09-19 14:53:08,906 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@4a883b15 
[2017-09-19 14:53:08,906 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@5824a83d 
[2017-09-19 14:53:08,906 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@537f60bf 
[2017-09-19 14:53:08,907 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@5677323c 
[2017-09-19 14:53:08,907 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@18df8434 
[2017-09-19 14:53:08,907 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@65c7a252 
[2017-09-19 14:53:08,907 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@4d154ccd 
[2017-09-19 14:53:08,907 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@229c6181 
[2017-09-19 14:53:08,907 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4686afc2 
[2017-09-19 14:53:08,913 - WARN - DriverManagerConnectionProviderImpl.java::76] - HHH000402: Using Hibernate built-in connection pool (not for production use!) 
[2017-09-19 14:53:08,917 - INFO - DriverManagerConnectionProviderImpl.java::149] - HHH000401: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/bookstore?createDatabaseIfNotExist=true&useSSL=false] 
[2017-09-19 14:53:08,917 - INFO - DriverManagerConnectionProviderImpl.java::155] - HHH000046: Connection properties: {user=neelakanta, password=Welcome@123, autocommit=true} 
[2017-09-19 14:53:08,917 - INFO - DriverManagerConnectionProviderImpl.java::163] - HHH000006: Autocommit mode: true 
[2017-09-19 14:53:08,918 - INFO - DriverManagerConnectionProviderImpl.java::85] - HHH000115: Hibernate connection pool size: 20 (min=1) 
[2017-09-19 14:53:08,919 - DEBUG - DelegatingBasicLogger.java::384] - Initializing Connection pool with 1 Connections 
[2017-09-19 14:53:09,135 - DEBUG - JdbcEnvironmentInitiator.java::72] - Database ->
       name : MySQL
    version : 5.5.55-0ubuntu0.14.04.1
      major : 5
      minor : 5 
[2017-09-19 14:53:09,135 - DEBUG - JdbcEnvironmentInitiator.java::83] - Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-6.0.5 ( Revision: 6e477e32dff18fb4dc102e53f5a68037a9f8762e )
      major : 6
      minor : 0 
[2017-09-19 14:53:09,135 - DEBUG - DelegatingBasicLogger.java::389] - JDBC version : 4.1 
[2017-09-19 14:53:09,143 - INFO - Dialect.java::154] - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect 
[2017-09-19 14:53:09,153 - DEBUG - StandardRefCursorSupport.java::170] - Unexpected error trying to gauge level of JDBC REF_CURSOR support : null 
[2017-09-19 14:53:09,170 - DEBUG - IdentifierHelperBuilder.java::116] - JDBC driver metadata reported database stores quoted identifiers in more than one case 
[2017-09-19 14:53:09,172 - DEBUG - IdentifierHelperBuilder.java::182] - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers 
[2017-09-19 14:53:09,194 - DEBUG - DefaultIdentifierGeneratorFactory.java::78] - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator] 
[2017-09-19 14:53:09,194 - DEBUG - DefaultIdentifierGeneratorFactory.java::78] - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator] 
[2017-09-19 14:53:09,195 - DEBUG - DefaultIdentifierGeneratorFactory.java::78] - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator] 
[2017-09-19 14:53:09,195 - DEBUG - DefaultIdentifierGeneratorFactory.java::78] - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator] 
[2017-09-19 14:53:09,195 - DEBUG - DefaultIdentifierGeneratorFactory.java::78] - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned] 
[2017-09-19 14:53:09,196 - DEBUG - DefaultIdentifierGeneratorFactory.java::78] - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator] 
[2017-09-19 14:53:09,196 - DEBUG - DefaultIdentifierGeneratorFactory.java::78] - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator] 
[2017-09-19 14:53:09,197 - DEBUG - DefaultIdentifierGeneratorFactory.java::78] - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator] 
[2017-09-19 14:53:09,198 - DEBUG - DefaultIdentifierGeneratorFactory.java::78] - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator] 
[2017-09-19 14:53:09,198 - DEBUG - DefaultIdentifierGeneratorFactory.java::78] - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator] 
[2017-09-19 14:53:09,198 - DEBUG - DefaultIdentifierGeneratorFactory.java::78] - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator] 
[2017-09-19 14:53:09,199 - DEBUG - DefaultIdentifierGeneratorFactory.java::78] - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator] 
[2017-09-19 14:53:09,199 - DEBUG - DefaultIdentifierGeneratorFactory.java::78] - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator] 
[2017-09-19 14:53:09,200 - DEBUG - DefaultIdentifierGeneratorFactory.java::78] - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator] 
[2017-09-19 14:53:09,307 - DEBUG - Namespace.java::47] - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}] 
[2017-09-19 14:53:09,325 - DEBUG - ModelBinder.java::230] - Mapping class: com.book.store.entity.Purchase -> Purchase 
[2017-09-19 14:53:09,328 - WARN - ModelBinder.java::2441] - HHH90000003: Use of DOM4J entity-mode is considered deprecated 
[2017-09-19 14:53:09,329 - DEBUG - ModelBinder.java::2538] - Mapped property: purchaseNumber -> [Purchase_no] 
[2017-09-19 14:53:09,330 - WARN - ModelBinder.java::2441] - HHH90000003: Use of DOM4J entity-mode is considered deprecated 
[2017-09-19 14:53:09,330 - DEBUG - ModelBinder.java::2538] - Mapped property: bookId -> [Book_id] 
[2017-09-19 14:53:09,333 - WARN - ModelBinder.java::2441] - HHH90000003: Use of DOM4J entity-mode is considered deprecated 
[2017-09-19 14:53:09,333 - DEBUG - ModelBinder.java::2538] - Mapped property: customerName -> [Customer_name] 
[2017-09-19 14:53:09,333 - WARN - ModelBinder.java::2441] - HHH90000003: Use of DOM4J entity-mode is considered deprecated 
[2017-09-19 14:53:09,333 - DEBUG - ModelBinder.java::2538] - Mapped property: customerMobileNumber -> [Customer_mobileno] 
[2017-09-19 14:53:09,333 - WARN - ModelBinder.java::2441] - HHH90000003: Use of DOM4J entity-mode is considered deprecated 
[2017-09-19 14:53:09,333 - DEBUG - ModelBinder.java::2538] - Mapped property: purchaseDate -> [Purchase_date] 
[2017-09-19 14:53:09,333 - WARN - ModelBinder.java::2441] - HHH90000003: Use of DOM4J entity-mode is considered deprecated 
[2017-09-19 14:53:09,333 - DEBUG - ModelBinder.java::2538] - Mapped property: amount -> [Amount] 
[2017-09-19 14:53:09,335 - DEBUG - AnnotationBinder.java::509] - Binding entity from annotated class: com.book.store.entity.Book 
[2017-09-19 14:53:09,347 - DEBUG - Ejb3Column.java::213] - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'} 
[2017-09-19 14:53:09,351 - DEBUG - EntityBinder.java::389] - Import with entity name Book 
[2017-09-19 14:53:09,352 - DEBUG - EntityBinder.java::665] - Bind entity com.book.store.entity.Book on table Book 
[2017-09-19 14:53:09,367 - DEBUG - Ejb3Column.java::213] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=Book_id, insertable=true, updatable=true, unique=false} 
[2017-09-19 14:53:09,370 - DEBUG - PropertyBinder.java::169] - MetadataSourceProcessor property bookId with lazy=false 
[2017-09-19 14:53:09,371 - DEBUG - AbstractPropertyHolder.java::90] - Attempting to locate auto-apply AttributeConverter for property [com.book.store.entity.Book:bookId] 
[2017-09-19 14:53:09,372 - DEBUG - SimpleValueBinder.java::384] - building SimpleValue for bookId 
[2017-09-19 14:53:09,372 - DEBUG - PropertyBinder.java::260] - Building property bookId 
[2017-09-19 14:53:09,375 - DEBUG - Ejb3Column.java::213] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=Author_name, insertable=true, updatable=true, unique=false} 
[2017-09-19 14:53:09,375 - DEBUG - PropertyBinder.java::169] - MetadataSourceProcessor property authorName with lazy=false 
[2017-09-19 14:53:09,375 - DEBUG - AbstractPropertyHolder.java::90] - Attempting to locate auto-apply AttributeConverter for property [com.book.store.entity.Book:authorName] 
[2017-09-19 14:53:09,376 - DEBUG - SimpleValueBinder.java::384] - building SimpleValue for authorName 
[2017-09-19 14:53:09,376 - DEBUG - PropertyBinder.java::260] - Building property authorName 
[2017-09-19 14:53:09,376 - DEBUG - Ejb3Column.java::213] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=Book_name, insertable=true, updatable=true, unique=false} 
[2017-09-19 14:53:09,376 - DEBUG - PropertyBinder.java::169] - MetadataSourceProcessor property bookName with lazy=false 
[2017-09-19 14:53:09,376 - DEBUG - AbstractPropertyHolder.java::90] - Attempting to locate auto-apply AttributeConverter for property [com.book.store.entity.Book:bookName] 
[2017-09-19 14:53:09,376 - DEBUG - SimpleValueBinder.java::384] - building SimpleValue for bookName 
[2017-09-19 14:53:09,376 - DEBUG - PropertyBinder.java::260] - Building property bookName 
[2017-09-19 14:53:09,377 - DEBUG - Ejb3Column.java::213] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=Category, insertable=true, updatable=true, unique=false} 
[2017-09-19 14:53:09,377 - DEBUG - PropertyBinder.java::169] - MetadataSourceProcessor property categoryName with lazy=false 
[2017-09-19 14:53:09,377 - DEBUG - AbstractPropertyHolder.java::90] - Attempting to locate auto-apply AttributeConverter for property [com.book.store.entity.Book:categoryName] 
[2017-09-19 14:53:09,377 - DEBUG - SimpleValueBinder.java::384] - building SimpleValue for categoryName 
[2017-09-19 14:53:09,377 - DEBUG - PropertyBinder.java::260] - Building property categoryName 
[2017-09-19 14:53:09,377 - DEBUG - Ejb3Column.java::213] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=price, insertable=true, updatable=true, unique=false} 
[2017-09-19 14:53:09,377 - DEBUG - PropertyBinder.java::169] - MetadataSourceProcessor property price with lazy=false 
[2017-09-19 14:53:09,377 - DEBUG - AbstractPropertyHolder.java::90] - Attempting to locate auto-apply AttributeConverter for property [com.book.store.entity.Book:price] 
[2017-09-19 14:53:09,378 - DEBUG - SimpleValueBinder.java::384] - building SimpleValue for price 
[2017-09-19 14:53:09,378 - DEBUG - PropertyBinder.java::260] - Building property price 
[2017-09-19 14:53:09,378 - DEBUG - Ejb3Column.java::213] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=Publisher, insertable=true, updatable=true, unique=false} 
[2017-09-19 14:53:09,378 - DEBUG - PropertyBinder.java::169] - MetadataSourceProcessor property publisherName with lazy=false 
[2017-09-19 14:53:09,378 - DEBUG - AbstractPropertyHolder.java::90] - Attempting to locate auto-apply AttributeConverter for property [com.book.store.entity.Book:publisherName] 
[2017-09-19 14:53:09,378 - DEBUG - SimpleValueBinder.java::384] - building SimpleValue for publisherName 
[2017-09-19 14:53:09,378 - DEBUG - PropertyBinder.java::260] - Building property publisherName 
[2017-09-19 14:53:09,379 - DEBUG - SimpleValueBinder.java::423] - Starting fillSimpleValue for bookId 
[2017-09-19 14:53:09,380 - DEBUG - SimpleValueBinder.java::423] - Starting fillSimpleValue for authorName 
[2017-09-19 14:53:09,380 - DEBUG - SimpleValueBinder.java::423] - Starting fillSimpleValue for bookName 
[2017-09-19 14:53:09,380 - DEBUG - SimpleValueBinder.java::423] - Starting fillSimpleValue for categoryName 
[2017-09-19 14:53:09,380 - DEBUG - SimpleValueBinder.java::423] - Starting fillSimpleValue for price 
[2017-09-19 14:53:09,380 - DEBUG - SimpleValueBinder.java::423] - Starting fillSimpleValue for publisherName 
[2017-09-19 14:53:09,402 - DEBUG - SessionFactoryImpl.java::210] - Building session factory 
[2017-09-19 14:53:09,403 - DEBUG - Settings.java::69] - SessionFactory name : null 
[2017-09-19 14:53:09,403 - DEBUG - Settings.java::70] - Automatic flush during beforeCompletion(): disabled 
[2017-09-19 14:53:09,403 - DEBUG - Settings.java::71] - Automatic session close at end of transaction: disabled 
[2017-09-19 14:53:09,403 - DEBUG - Settings.java::73] - Statistics: disabled 
[2017-09-19 14:53:09,403 - DEBUG - Settings.java::75] - Deleted entity synthetic identifier rollback: disabled 
[2017-09-19 14:53:09,403 - DEBUG - Settings.java::76] - Default entity-mode: pojo 
[2017-09-19 14:53:09,403 - DEBUG - Settings.java::77] - Check Nullability in Core (should be disabled when Bean Validation is on): enabled 
[2017-09-19 14:53:09,403 - DEBUG - Settings.java::78] - Allow initialization of lazy state outside session : disabled 
[2017-09-19 14:53:09,403 - DEBUG - Settings.java::80] - Using BatchFetchStyle : LEGACY 
[2017-09-19 14:53:09,403 - DEBUG - Settings.java::81] - Default batch fetch size: -1 
[2017-09-19 14:53:09,404 - DEBUG - Settings.java::82] - Maximum outer join fetch depth: 2 
[2017-09-19 14:53:09,404 - DEBUG - Settings.java::83] - Default null ordering: NONE 
[2017-09-19 14:53:09,404 - DEBUG - Settings.java::84] - Order SQL updates by primary key: disabled 
[2017-09-19 14:53:09,404 - DEBUG - Settings.java::85] - Order SQL inserts for batching: disabled 
[2017-09-19 14:53:09,404 - DEBUG - Settings.java::87] - multi-tenancy strategy : NONE 
[2017-09-19 14:53:09,404 - DEBUG - Settings.java::89] - JTA Track by Thread: enabled 
[2017-09-19 14:53:09,404 - DEBUG - Settings.java::91] - Query language substitutions: {} 
[2017-09-19 14:53:09,404 - DEBUG - Settings.java::92] - JPA query language strict compliance: disabled 
[2017-09-19 14:53:09,404 - DEBUG - Settings.java::93] - Named query checking : enabled 
[2017-09-19 14:53:09,404 - DEBUG - Settings.java::95] - Second-level cache: enabled 
[2017-09-19 14:53:09,404 - DEBUG - Settings.java::96] - Second-level query cache: disabled 
[2017-09-19 14:53:09,404 - DEBUG - Settings.java::97] - Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@3dd1dc90 
[2017-09-19 14:53:09,405 - DEBUG - Settings.java::98] - Second-level cache region prefix: null 
[2017-09-19 14:53:09,405 - DEBUG - Settings.java::99] - Optimize second-level cache for minimal puts: disabled 
[2017-09-19 14:53:09,405 - DEBUG - Settings.java::100] - Structured second-level cache entries: disabled 
[2017-09-19 14:53:09,405 - DEBUG - Settings.java::101] - Second-level cache direct-reference entries: disabled 
[2017-09-19 14:53:09,405 - DEBUG - Settings.java::102] - Automatic eviction of collection cache: disabled 
[2017-09-19 14:53:09,405 - DEBUG - Settings.java::104] - JDBC batch size: 15 
[2017-09-19 14:53:09,405 - DEBUG - Settings.java::105] - JDBC batch updates for versioned data: enabled 
[2017-09-19 14:53:09,405 - DEBUG - Settings.java::106] - Scrollable result sets: enabled 
[2017-09-19 14:53:09,405 - DEBUG - Settings.java::107] - Wrap result sets: disabled 
[2017-09-19 14:53:09,405 - DEBUG - Settings.java::108] - JDBC3 getGeneratedKeys(): enabled 
[2017-09-19 14:53:09,405 - DEBUG - Settings.java::109] - JDBC result set fetch size: null 
[2017-09-19 14:53:09,405 - DEBUG - Settings.java::110] - Connection release mode: ON_CLOSE 
[2017-09-19 14:53:09,405 - DEBUG - Settings.java::111] - Generate SQL with comments: disabled 
[2017-09-19 14:53:09,431 - DEBUG - SessionFactoryImpl.java::255] - Session factory constructed with filter configurations : {} 
[2017-09-19 14:53:09,432 - DEBUG - SessionFactoryImpl.java::256] - Instantiating session factory with properties: {hibernate.connection.password=Welcome@123, java.runtime.name=Java(TM) SE Runtime Environment, java.vm.version=25.45-b02, sun.boot.library.path=/home/neelakanta/SetupFiles/jdk1.8.0_45/jre/lib/amd64, hibernate.connection.username=neelakanta, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@3f363cf5, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=:, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, sun.os.patch.level=unknown, user.country=US, sun.java.launcher=SUN_STANDARD, java.vm.specification.name=Java Virtual Machine Specification, user.dir=/home/neelakanta/Documents/Eclipse Documents/MWatchExperiment/BookStore, java.runtime.version=1.8.0_45-b14, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, os.arch=amd64, java.endorsed.dirs=/home/neelakanta/SetupFiles/jdk1.8.0_45/jre/lib/endorsed, hibernate.connection.autocommit=true, java.io.tmpdir=/tmp, line.separator=
, java.vm.specification.vendor=Oracle Corporation, os.name=Linux, sun.jnu.encoding=UTF-8, java.library.path=/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib, java.class.version=52.0, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=3.13.0-119-generic, user.home=/home/neelakanta, user.timezone=Asia/Kolkata, java.awt.printerjob=sun.print.PSPrinterJob, file.encoding=UTF-8, java.specification.version=1.8, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, user.name=neelakanta, java.class.path=/home/neelakanta/Documents/Eclipse Documents/MWatchExperiment/BookStore/target/classes:/home/neelakanta/.m2/repository/junit/junit/3.8.1/junit-3.8.1.jar:/home/neelakanta/SetupFiles/apache-tomcat-8.0.36/lib/catalina-ha.jar:/home/neelakanta/SetupFiles/apache-tomcat-8.0.36/lib/tomcat-dbcp.jar:/home/neelakanta/SetupFiles/apache-tomcat-8.0.36/lib/catalina-tribes.jar:/home/neelakanta/SetupFiles/apache-tomcat-8.0.36/lib/tomcat-i18n-fr.jar:/home/neelakanta/SetupFiles/apache-tomcat-8.0.36/lib/el-api.jar:/home/neelakanta/SetupFiles/apache-tomcat-8.0.36/lib/jsp-api.jar:/home/neelakanta/SetupFiles/apache-tomcat-8.0.36/lib/tomcat-i18n-es.jar:/home/neelakanta/SetupFiles/apache-tomcat-8.0.36/lib/annotations-api.jar:/home/neelakanta/SetupFiles/apache-tomcat-8.0.36/lib/tomcat-i18n-ja.jar:/home/neelakanta/SetupFiles/apache-tomcat-8.0.36/lib/jasper-el.jar:/home/neelakanta/SetupFiles/apache-tomcat-8.0.36/lib/tomcat-websocket.jar:/home/neelakanta/SetupFiles/apache-tomcat-8.0.36/lib/tomcat-jni.jar:/home/neelakanta/SetupFiles/apache-tomcat-8.0.36/lib/servlet-api.jar:/home/neelakanta/SetupFiles/apache-tomcat-8.0.36/lib/tomcat-api.jar:/home/neelakanta/SetupFiles/apache-tomcat-8.0.36/lib/ecj-4.5.jar:/home/neelakanta/SetupFiles/apache-tomcat-8.0.36/lib/tomcat-jdbc.jar:/home/neelakanta/SetupFiles/apache-tomcat-8.0.36/lib/catalina.jar:/home/neelakanta/SetupFiles/apache-tomcat-8.0.36/lib/tomcat-coyote.jar:/home/neelakanta/SetupFiles/apache-tomcat-8.0.36/lib/tomcat-util.jar:/home/neelakanta/SetupFiles/apache-tomcat-8.0.36/lib/catalina-storeconfig.jar:/home/neelakanta/SetupFiles/apache-tomcat-8.0.36/lib/tomcat-util-scan.jar:/home/neelakanta/SetupFiles/apache-tomcat-8.0.36/lib/websocket-api.jar:/home/neelakanta/SetupFiles/apache-tomcat-8.0.36/lib/catalina-ant.jar:/home/neelakanta/SetupFiles/apache-tomcat-8.0.36/lib/jasper.jar:/home/neelakanta/eclipseMars/plugins/org.junit_4.12.0.v201504281640/junit.jar:/home/neelakanta/eclipseMars/plugins/org.hamcrest.core_1.3.0.v201303031735.jar:/home/neelakanta/.m2/repository/org/hibernate/hibernate-core/5.0.1.Final/hibernate-core-5.0.1.Final.jar:/home/neelakanta/.m2/repository/org/jboss/logging/jboss-logging/3.3.0.Final/jboss-logging-3.3.0.Final.jar:/home/neelakanta/.m2/repository/org/apache/geronimo/specs/geronimo-jta_1.1_spec/1.1.1/geronimo-jta_1.1_spec-1.1.1.jar:/home/neelakanta/.m2/repository/org/hibernate/javax/persistence/hibernate-jpa-2.1-api/1.0.0.Final/hibernate-jpa-2.1-api-1.0.0.Final.jar:/home/neelakanta/.m2/repository/org/javassist/javassist/3.18.1-GA/javassist-3.18.1-GA.jar:/home/neelakanta/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/home/neelakanta/.m2/repository/org/jboss/jandex/1.2.2.Final/jandex-1.2.2.Final.jar:/home/neelakanta/.m2/repository/dom4j/dom4j/1.6.1/dom4j-1.6.1.jar:/home/neelakanta/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.0.0.Final/hibernate-commons-annotations-5.0.0.Final.jar:/home/neelakanta/.m2/repository/org/hibernate/hibernate-validator/5.0.1.Final/hibernate-validator-5.0.1.Final.jar:/home/neelakanta/.m2/repository/javax/validation/validation-api/1.1.0.Final/validation-api-1.1.0.Final.jar:/home/neelakanta/.m2/repository/com/fasterxml/classmate/0.8.0/classmate-0.8.0.jar:/home/neelakanta/.m2/repository/org/hibernate/hibernate-annotations/3.3.0.ga/hibernate-annotations-3.3.0.ga.jar:/home/neelakanta/.m2/repository/org/hibernate/hibernate/3.2.1.ga/hibernate-3.2.1.ga.jar:/home/neelakanta/.m2/repository/net/sf/ehcache/ehcache/1.2.3/ehcache-1.2.3.jar:/home/neelakanta/.m2/repository/commons-logging/commons-logging/1.0.4/commons-logging-1.0.4.jar:/home/neelakanta/.m2/repository/asm/asm-attrs/1.5.3/asm-attrs-1.5.3.jar:/home/neelakanta/.m2/repository/cglib/cglib/2.1_3/cglib-2.1_3.jar:/home/neelakanta/.m2/repository/asm/asm/1.5.3/asm-1.5.3.jar:/home/neelakanta/.m2/repository/commons-collections/commons-collections/2.1.1/commons-collections-2.1.1.jar:/home/neelakanta/.m2/repository/javax/persistence/persistence-api/1.0/persistence-api-1.0.jar:/home/neelakanta/.m2/repository/org/hibernate/hibernate-commons-annotations/3.3.0.ga/hibernate-commons-annotations-3.3.0.ga.jar:/home/neelakanta/.m2/repository/javax/transaction/jta/1.1/jta-1.1.jar:/home/neelakanta/.m2/repository/mysql/mysql-connector-java/6.0.5/mysql-connector-java-6.0.5.jar:/home/neelakanta/.m2/repository/c3p0/c3p0/0.9.0.4/c3p0-0.9.0.4.jar:/home/neelakanta/.m2/repository/org/hibernate/hibernate-entitymanager/4.3.1.Final/hibernate-entitymanager-4.3.1.Final.jar:/home/neelakanta/.m2/repository/org/jboss/logging/jboss-logging-annotations/1.2.0.Beta1/jboss-logging-annotations-1.2.0.Beta1.jar:/home/neelakanta/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.0.0.Final/jboss-transaction-api_1.2_spec-1.0.0.Final.jar:/home/neelakanta/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=false, java.vm.specification.version=1.8, sun.arch.data.model=64, sun.java.command=com.book.store.BookStoreSystemClient, java.home=/home/neelakanta/SetupFiles/jdk1.8.0_45/jre, hibernate.connection.url=jdbc:mysql://localhost:3306/bookstore?createDatabaseIfNotExist=true&useSSL=false, hibernate.dialect=org.hibernate.dialect.MySQLDialect, user.language=en, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.X11.XToolkit, java.vm.info=mixed mode, java.version=1.8.0_45, java.ext.dirs=/home/neelakanta/SetupFiles/jdk1.8.0_45/jre/lib/ext:/usr/java/packages/lib/ext, sun.boot.class.path=/home/neelakanta/SetupFiles/jdk1.8.0_45/jre/lib/resources.jar:/home/neelakanta/SetupFiles/jdk1.8.0_45/jre/lib/rt.jar:/home/neelakanta/SetupFiles/jdk1.8.0_45/jre/lib/sunrsasign.jar:/home/neelakanta/SetupFiles/jdk1.8.0_45/jre/lib/jsse.jar:/home/neelakanta/SetupFiles/jdk1.8.0_45/jre/lib/jce.jar:/home/neelakanta/SetupFiles/jdk1.8.0_45/jre/lib/charsets.jar:/home/neelakanta/SetupFiles/jdk1.8.0_45/jre/lib/jfr.jar:/home/neelakanta/SetupFiles/jdk1.8.0_45/jre/classes, java.vendor=Oracle Corporation, file.separator=/, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, sun.desktop=gnome, sun.cpu.isalist=} 
[2017-09-19 14:53:09,449 - INFO - Version.java::27] - HV000001: Hibernate Validator 5.0.1.Final 
[2017-09-19 14:53:09,460 - DEBUG - DefaultTraversableResolver.java::106] - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver 
[2017-09-19 14:53:09,461 - DEBUG - DefaultTraversableResolver.java::117] - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. 
[2017-09-19 14:53:09,463 - DEBUG - ValidationXmlParser.java::88] - Trying to load META-INF/validation.xml for XML based Validator configuration. 
[2017-09-19 14:53:09,466 - DEBUG - ValidationXmlParser.java::95] - No META-INF/validation.xml found. Using annotation based configuration only. 
[2017-09-19 14:53:09,480 - DEBUG - ClassLoaderAccessImpl.java::55] - Not known whether passed class name [com.book.store.entity.Book] is safe 
[2017-09-19 14:53:09,481 - DEBUG - ClassLoaderAccessImpl.java::57] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.book.store.entity.Book 
[2017-09-19 14:53:09,514 - DEBUG - ClassLoaderAccessImpl.java::55] - Not known whether passed class name [com.book.store.entity.Purchase] is safe 
[2017-09-19 14:53:09,514 - DEBUG - ClassLoaderAccessImpl.java::57] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.book.store.entity.Purchase 
[2017-09-19 14:53:09,518 - DEBUG - JaccIntegrator.java::80] - Skipping JACC integration as it was not enabled 
[2017-09-19 14:53:09,538 - DEBUG - ClassLoaderAccessImpl.java::55] - Not known whether passed class name [com.book.store.entity.Book] is safe 
[2017-09-19 14:53:09,538 - DEBUG - ClassLoaderAccessImpl.java::57] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.book.store.entity.Book 
[2017-09-19 14:53:09,545 - DEBUG - ClassLoaderAccessImpl.java::55] - Not known whether passed class name [com.book.store.entity.Book] is safe 
[2017-09-19 14:53:09,545 - DEBUG - ClassLoaderAccessImpl.java::57] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.book.store.entity.Book 
[2017-09-19 14:53:09,581 - DEBUG - ClassLoaderAccessImpl.java::55] - Not known whether passed class name [com.book.store.entity.Purchase] is safe 
[2017-09-19 14:53:09,581 - DEBUG - ClassLoaderAccessImpl.java::57] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.book.store.entity.Purchase 
[2017-09-19 14:53:09,583 - DEBUG - ClassLoaderAccessImpl.java::55] - Not known whether passed class name [com.book.store.entity.Purchase] is safe 
[2017-09-19 14:53:09,583 - DEBUG - ClassLoaderAccessImpl.java::57] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.book.store.entity.Purchase 
[2017-09-19 14:53:09,590 - DEBUG - AbstractEntityPersister.java::3418] - Static SQL for entity: com.book.store.entity.Book 
[2017-09-19 14:53:09,590 - DEBUG - AbstractEntityPersister.java::3423] -  Version select: select Book_id from Book where Book_id =? 
[2017-09-19 14:53:09,590 - DEBUG - AbstractEntityPersister.java::3426] -  Snapshot select: select book_.Book_id, book_.Author_name as Author_n2_0_, book_.Book_name as Book_nam3_0_, book_.Category as Category4_0_, book_.price as price5_0_, book_.Publisher as Publishe6_0_ from Book book_ where book_.Book_id=? 
[2017-09-19 14:53:09,590 - DEBUG - DelegatingBasicLogger.java::394] -  Insert 0: insert into Book (Author_name, Book_name, Category, price, Publisher, Book_id) values (?, ?, ?, ?, ?, ?) 
[2017-09-19 14:53:09,590 - DEBUG - DelegatingBasicLogger.java::394] -  Update 0: update Book set Author_name=?, Book_name=?, Category=?, price=?, Publisher=? where Book_id=? 
[2017-09-19 14:53:09,590 - DEBUG - DelegatingBasicLogger.java::394] -  Delete 0: delete from Book where Book_id=? 
[2017-09-19 14:53:09,604 - DEBUG - QuerySpacesImpl.java::174] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@77b325b3] 
[2017-09-19 14:53:09,605 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : authorName 
[2017-09-19 14:53:09,606 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : bookName 
[2017-09-19 14:53:09,606 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : categoryName 
[2017-09-19 14:53:09,606 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : price 
[2017-09-19 14:53:09,606 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : publisherName 
[2017-09-19 14:53:09,606 - DEBUG - FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java::76] - Building LoadPlan... 
[2017-09-19 14:53:09,615 - DEBUG - LoadQueryJoinAndFetchProcessor.java::95] - processing queryspace <gen:0> 
[2017-09-19 14:53:09,618 - DEBUG - LoadPlanTreePrinter.java::55] - LoadPlan(entity=com.book.store.entity.Book)
    - Returns
       - EntityReturnImpl(entity=com.book.store.entity.Book, querySpaceUid=<gen:0>, path=com.book.store.entity.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.book.store.entity.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {Book_id1_0_0_}
 
[2017-09-19 14:53:09,619 - DEBUG - EntityLoader.java::128] - Static select for entity com.book.store.entity.Book [NONE]: select book0_.Book_id as Book_id1_0_0_, book0_.Author_name as Author_n2_0_0_, book0_.Book_name as Book_nam3_0_0_, book0_.Category as Category4_0_0_, book0_.price as price5_0_0_, book0_.Publisher as Publishe6_0_0_ from Book book0_ where book0_.Book_id=? 
[2017-09-19 14:53:09,619 - DEBUG - QuerySpacesImpl.java::174] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@aa5455e] 
[2017-09-19 14:53:09,620 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : authorName 
[2017-09-19 14:53:09,620 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : bookName 
[2017-09-19 14:53:09,620 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : categoryName 
[2017-09-19 14:53:09,620 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : price 
[2017-09-19 14:53:09,620 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : publisherName 
[2017-09-19 14:53:09,620 - DEBUG - FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java::76] - Building LoadPlan... 
[2017-09-19 14:53:09,620 - DEBUG - LoadQueryJoinAndFetchProcessor.java::95] - processing queryspace <gen:0> 
[2017-09-19 14:53:09,621 - DEBUG - LoadPlanTreePrinter.java::55] - LoadPlan(entity=com.book.store.entity.Book)
    - Returns
       - EntityReturnImpl(entity=com.book.store.entity.Book, querySpaceUid=<gen:0>, path=com.book.store.entity.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.book.store.entity.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {Book_id1_0_0_}
 
[2017-09-19 14:53:09,621 - DEBUG - EntityLoader.java::128] - Static select for entity com.book.store.entity.Book [READ]: select book0_.Book_id as Book_id1_0_0_, book0_.Author_name as Author_n2_0_0_, book0_.Book_name as Book_nam3_0_0_, book0_.Category as Category4_0_0_, book0_.price as price5_0_0_, book0_.Publisher as Publishe6_0_0_ from Book book0_ where book0_.Book_id=? 
[2017-09-19 14:53:09,621 - DEBUG - QuerySpacesImpl.java::174] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5dda14d0] 
[2017-09-19 14:53:09,621 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : authorName 
[2017-09-19 14:53:09,621 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : bookName 
[2017-09-19 14:53:09,621 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : categoryName 
[2017-09-19 14:53:09,621 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : price 
[2017-09-19 14:53:09,621 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : publisherName 
[2017-09-19 14:53:09,622 - DEBUG - FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java::76] - Building LoadPlan... 
[2017-09-19 14:53:09,622 - DEBUG - LoadQueryJoinAndFetchProcessor.java::95] - processing queryspace <gen:0> 
[2017-09-19 14:53:09,622 - DEBUG - LoadPlanTreePrinter.java::55] - LoadPlan(entity=com.book.store.entity.Book)
    - Returns
       - EntityReturnImpl(entity=com.book.store.entity.Book, querySpaceUid=<gen:0>, path=com.book.store.entity.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.book.store.entity.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {Book_id1_0_0_}
 
[2017-09-19 14:53:09,622 - DEBUG - EntityLoader.java::128] - Static select for entity com.book.store.entity.Book [UPGRADE]: select book0_.Book_id as Book_id1_0_0_, book0_.Author_name as Author_n2_0_0_, book0_.Book_name as Book_nam3_0_0_, book0_.Category as Category4_0_0_, book0_.price as price5_0_0_, book0_.Publisher as Publishe6_0_0_ from Book book0_ where book0_.Book_id=? for update 
[2017-09-19 14:53:09,622 - DEBUG - QuerySpacesImpl.java::174] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3d9fc57a] 
[2017-09-19 14:53:09,622 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : authorName 
[2017-09-19 14:53:09,622 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : bookName 
[2017-09-19 14:53:09,623 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : categoryName 
[2017-09-19 14:53:09,623 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : price 
[2017-09-19 14:53:09,623 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : publisherName 
[2017-09-19 14:53:09,623 - DEBUG - FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java::76] - Building LoadPlan... 
[2017-09-19 14:53:09,623 - DEBUG - LoadQueryJoinAndFetchProcessor.java::95] - processing queryspace <gen:0> 
[2017-09-19 14:53:09,623 - DEBUG - LoadPlanTreePrinter.java::55] - LoadPlan(entity=com.book.store.entity.Book)
    - Returns
       - EntityReturnImpl(entity=com.book.store.entity.Book, querySpaceUid=<gen:0>, path=com.book.store.entity.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.book.store.entity.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {Book_id1_0_0_}
 
[2017-09-19 14:53:09,623 - DEBUG - EntityLoader.java::128] - Static select for entity com.book.store.entity.Book [UPGRADE_NOWAIT]: select book0_.Book_id as Book_id1_0_0_, book0_.Author_name as Author_n2_0_0_, book0_.Book_name as Book_nam3_0_0_, book0_.Category as Category4_0_0_, book0_.price as price5_0_0_, book0_.Publisher as Publishe6_0_0_ from Book book0_ where book0_.Book_id=? for update 
[2017-09-19 14:53:09,624 - DEBUG - QuerySpacesImpl.java::174] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3b4ef7] 
[2017-09-19 14:53:09,624 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : authorName 
[2017-09-19 14:53:09,624 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : bookName 
[2017-09-19 14:53:09,624 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : categoryName 
[2017-09-19 14:53:09,624 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : price 
[2017-09-19 14:53:09,624 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : publisherName 
[2017-09-19 14:53:09,624 - DEBUG - FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java::76] - Building LoadPlan... 
[2017-09-19 14:53:09,624 - DEBUG - LoadQueryJoinAndFetchProcessor.java::95] - processing queryspace <gen:0> 
[2017-09-19 14:53:09,625 - DEBUG - LoadPlanTreePrinter.java::55] - LoadPlan(entity=com.book.store.entity.Book)
    - Returns
       - EntityReturnImpl(entity=com.book.store.entity.Book, querySpaceUid=<gen:0>, path=com.book.store.entity.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.book.store.entity.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {Book_id1_0_0_}
 
[2017-09-19 14:53:09,625 - DEBUG - EntityLoader.java::128] - Static select for entity com.book.store.entity.Book [UPGRADE_SKIPLOCKED]: select book0_.Book_id as Book_id1_0_0_, book0_.Author_name as Author_n2_0_0_, book0_.Book_name as Book_nam3_0_0_, book0_.Category as Category4_0_0_, book0_.price as price5_0_0_, book0_.Publisher as Publishe6_0_0_ from Book book0_ where book0_.Book_id=? for update 
[2017-09-19 14:53:09,625 - DEBUG - QuerySpacesImpl.java::174] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5987e932] 
[2017-09-19 14:53:09,625 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : authorName 
[2017-09-19 14:53:09,625 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : bookName 
[2017-09-19 14:53:09,625 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : categoryName 
[2017-09-19 14:53:09,625 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : price 
[2017-09-19 14:53:09,625 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : publisherName 
[2017-09-19 14:53:09,625 - DEBUG - FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java::76] - Building LoadPlan... 
[2017-09-19 14:53:09,626 - DEBUG - LoadQueryJoinAndFetchProcessor.java::95] - processing queryspace <gen:0> 
[2017-09-19 14:53:09,626 - DEBUG - LoadPlanTreePrinter.java::55] - LoadPlan(entity=com.book.store.entity.Book)
    - Returns
       - EntityReturnImpl(entity=com.book.store.entity.Book, querySpaceUid=<gen:0>, path=com.book.store.entity.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.book.store.entity.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {Book_id1_0_0_}
 
[2017-09-19 14:53:09,626 - DEBUG - EntityLoader.java::128] - Static select for entity com.book.store.entity.Book [FORCE]: select book0_.Book_id as Book_id1_0_0_, book0_.Author_name as Author_n2_0_0_, book0_.Book_name as Book_nam3_0_0_, book0_.Category as Category4_0_0_, book0_.price as price5_0_0_, book0_.Publisher as Publishe6_0_0_ from Book book0_ where book0_.Book_id=? for update 
[2017-09-19 14:53:09,626 - DEBUG - QuerySpacesImpl.java::174] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5bbbdd4b] 
[2017-09-19 14:53:09,626 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : authorName 
[2017-09-19 14:53:09,626 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : bookName 
[2017-09-19 14:53:09,626 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : categoryName 
[2017-09-19 14:53:09,627 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : price 
[2017-09-19 14:53:09,627 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : publisherName 
[2017-09-19 14:53:09,627 - DEBUG - FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java::76] - Building LoadPlan... 
[2017-09-19 14:53:09,627 - DEBUG - LoadQueryJoinAndFetchProcessor.java::95] - processing queryspace <gen:0> 
[2017-09-19 14:53:09,627 - DEBUG - LoadPlanTreePrinter.java::55] - LoadPlan(entity=com.book.store.entity.Book)
    - Returns
       - EntityReturnImpl(entity=com.book.store.entity.Book, querySpaceUid=<gen:0>, path=com.book.store.entity.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.book.store.entity.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {Book_id1_0_0_}
 
[2017-09-19 14:53:09,627 - DEBUG - EntityLoader.java::128] - Static select for entity com.book.store.entity.Book [PESSIMISTIC_READ]: select book0_.Book_id as Book_id1_0_0_, book0_.Author_name as Author_n2_0_0_, book0_.Book_name as Book_nam3_0_0_, book0_.Category as Category4_0_0_, book0_.price as price5_0_0_, book0_.Publisher as Publishe6_0_0_ from Book book0_ where book0_.Book_id=? lock in share mode 
[2017-09-19 14:53:09,627 - DEBUG - QuerySpacesImpl.java::174] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@25230246] 
[2017-09-19 14:53:09,628 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : authorName 
[2017-09-19 14:53:09,628 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : bookName 
[2017-09-19 14:53:09,628 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : categoryName 
[2017-09-19 14:53:09,628 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : price 
[2017-09-19 14:53:09,628 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : publisherName 
[2017-09-19 14:53:09,628 - DEBUG - FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java::76] - Building LoadPlan... 
[2017-09-19 14:53:09,628 - DEBUG - LoadQueryJoinAndFetchProcessor.java::95] - processing queryspace <gen:0> 
[2017-09-19 14:53:09,628 - DEBUG - LoadPlanTreePrinter.java::55] - LoadPlan(entity=com.book.store.entity.Book)
    - Returns
       - EntityReturnImpl(entity=com.book.store.entity.Book, querySpaceUid=<gen:0>, path=com.book.store.entity.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.book.store.entity.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {Book_id1_0_0_}
 
[2017-09-19 14:53:09,628 - DEBUG - EntityLoader.java::128] - Static select for entity com.book.store.entity.Book [PESSIMISTIC_WRITE]: select book0_.Book_id as Book_id1_0_0_, book0_.Author_name as Author_n2_0_0_, book0_.Book_name as Book_nam3_0_0_, book0_.Category as Category4_0_0_, book0_.price as price5_0_0_, book0_.Publisher as Publishe6_0_0_ from Book book0_ where book0_.Book_id=? for update 
[2017-09-19 14:53:09,629 - DEBUG - QuerySpacesImpl.java::174] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4a8b5227] 
[2017-09-19 14:53:09,629 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : authorName 
[2017-09-19 14:53:09,629 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : bookName 
[2017-09-19 14:53:09,629 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : categoryName 
[2017-09-19 14:53:09,629 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : price 
[2017-09-19 14:53:09,629 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : publisherName 
[2017-09-19 14:53:09,629 - DEBUG - FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java::76] - Building LoadPlan... 
[2017-09-19 14:53:09,629 - DEBUG - LoadQueryJoinAndFetchProcessor.java::95] - processing queryspace <gen:0> 
[2017-09-19 14:53:09,629 - DEBUG - LoadPlanTreePrinter.java::55] - LoadPlan(entity=com.book.store.entity.Book)
    - Returns
       - EntityReturnImpl(entity=com.book.store.entity.Book, querySpaceUid=<gen:0>, path=com.book.store.entity.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.book.store.entity.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {Book_id1_0_0_}
 
[2017-09-19 14:53:09,630 - DEBUG - EntityLoader.java::128] - Static select for entity com.book.store.entity.Book [PESSIMISTIC_FORCE_INCREMENT]: select book0_.Book_id as Book_id1_0_0_, book0_.Author_name as Author_n2_0_0_, book0_.Book_name as Book_nam3_0_0_, book0_.Category as Category4_0_0_, book0_.price as price5_0_0_, book0_.Publisher as Publishe6_0_0_ from Book book0_ where book0_.Book_id=? for update 
[2017-09-19 14:53:09,630 - DEBUG - QuerySpacesImpl.java::174] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6979efad] 
[2017-09-19 14:53:09,630 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : authorName 
[2017-09-19 14:53:09,630 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : bookName 
[2017-09-19 14:53:09,630 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : categoryName 
[2017-09-19 14:53:09,630 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : price 
[2017-09-19 14:53:09,630 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : publisherName 
[2017-09-19 14:53:09,630 - DEBUG - FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java::76] - Building LoadPlan... 
[2017-09-19 14:53:09,630 - DEBUG - LoadQueryJoinAndFetchProcessor.java::95] - processing queryspace <gen:0> 
[2017-09-19 14:53:09,631 - DEBUG - LoadPlanTreePrinter.java::55] - LoadPlan(entity=com.book.store.entity.Book)
    - Returns
       - EntityReturnImpl(entity=com.book.store.entity.Book, querySpaceUid=<gen:0>, path=com.book.store.entity.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.book.store.entity.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {Book_id1_0_0_}
 
[2017-09-19 14:53:09,631 - DEBUG - EntityLoader.java::128] - Static select for entity com.book.store.entity.Book [OPTIMISTIC]: select book0_.Book_id as Book_id1_0_0_, book0_.Author_name as Author_n2_0_0_, book0_.Book_name as Book_nam3_0_0_, book0_.Category as Category4_0_0_, book0_.price as price5_0_0_, book0_.Publisher as Publishe6_0_0_ from Book book0_ where book0_.Book_id=? 
[2017-09-19 14:53:09,631 - DEBUG - QuerySpacesImpl.java::174] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4a67318f] 
[2017-09-19 14:53:09,631 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : authorName 
[2017-09-19 14:53:09,631 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : bookName 
[2017-09-19 14:53:09,631 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : categoryName 
[2017-09-19 14:53:09,631 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : price 
[2017-09-19 14:53:09,631 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : publisherName 
[2017-09-19 14:53:09,631 - DEBUG - FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java::76] - Building LoadPlan... 
[2017-09-19 14:53:09,632 - DEBUG - LoadQueryJoinAndFetchProcessor.java::95] - processing queryspace <gen:0> 
[2017-09-19 14:53:09,632 - DEBUG - LoadPlanTreePrinter.java::55] - LoadPlan(entity=com.book.store.entity.Book)
    - Returns
       - EntityReturnImpl(entity=com.book.store.entity.Book, querySpaceUid=<gen:0>, path=com.book.store.entity.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.book.store.entity.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {Book_id1_0_0_}
 
[2017-09-19 14:53:09,632 - DEBUG - EntityLoader.java::128] - Static select for entity com.book.store.entity.Book [OPTIMISTIC_FORCE_INCREMENT]: select book0_.Book_id as Book_id1_0_0_, book0_.Author_name as Author_n2_0_0_, book0_.Book_name as Book_nam3_0_0_, book0_.Category as Category4_0_0_, book0_.price as price5_0_0_, book0_.Publisher as Publishe6_0_0_ from Book book0_ where book0_.Book_id=? 
[2017-09-19 14:53:09,643 - DEBUG - CascadeEntityLoader.java::38] - Static select for action ACTION_MERGE on entity com.book.store.entity.Book: select book0_.Book_id as Book_id1_0_0_, book0_.Author_name as Author_n2_0_0_, book0_.Book_name as Book_nam3_0_0_, book0_.Category as Category4_0_0_, book0_.price as price5_0_0_, book0_.Publisher as Publishe6_0_0_ from Book book0_ where book0_.Book_id=? 
[2017-09-19 14:53:09,643 - DEBUG - CascadeEntityLoader.java::38] - Static select for action ACTION_REFRESH on entity com.book.store.entity.Book: select book0_.Book_id as Book_id1_0_0_, book0_.Author_name as Author_n2_0_0_, book0_.Book_name as Book_nam3_0_0_, book0_.Category as Category4_0_0_, book0_.price as price5_0_0_, book0_.Publisher as Publishe6_0_0_ from Book book0_ where book0_.Book_id=? 
[2017-09-19 14:53:09,644 - DEBUG - AbstractEntityPersister.java::3418] - Static SQL for entity: com.book.store.entity.Purchase 
[2017-09-19 14:53:09,644 - DEBUG - AbstractEntityPersister.java::3423] -  Version select: select Purchase_no from Purchase where Purchase_no =? 
[2017-09-19 14:53:09,644 - DEBUG - AbstractEntityPersister.java::3426] -  Snapshot select: select purchase_.Purchase_no, purchase_.Book_id as Book_id2_1_, purchase_.Customer_name as Customer3_1_, purchase_.Customer_mobileno as Customer4_1_, purchase_.Purchase_date as Purchase5_1_, purchase_.Amount as Amount6_1_ from Purchase purchase_ where purchase_.Purchase_no=? 
[2017-09-19 14:53:09,644 - DEBUG - DelegatingBasicLogger.java::394] -  Insert 0: insert into Purchase (Book_id, Customer_name, Customer_mobileno, Purchase_date, Amount, Purchase_no) values (?, ?, ?, ?, ?, ?) 
[2017-09-19 14:53:09,644 - DEBUG - DelegatingBasicLogger.java::394] -  Update 0: update Purchase set Book_id=?, Customer_name=?, Customer_mobileno=?, Purchase_date=?, Amount=? where Purchase_no=? 
[2017-09-19 14:53:09,644 - DEBUG - DelegatingBasicLogger.java::394] -  Delete 0: delete from Purchase where Purchase_no=? 
[2017-09-19 14:53:09,644 - DEBUG - AbstractEntityPersister.java::3434] -  Identity insert: insert into Purchase (Book_id, Customer_name, Customer_mobileno, Purchase_date, Amount) values (?, ?, ?, ?, ?) 
[2017-09-19 14:53:09,645 - DEBUG - QuerySpacesImpl.java::174] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@22175d4f] 
[2017-09-19 14:53:09,645 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : bookId 
[2017-09-19 14:53:09,645 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : customerName 
[2017-09-19 14:53:09,645 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : customerMobileNumber 
[2017-09-19 14:53:09,645 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : purchaseDate 
[2017-09-19 14:53:09,645 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : amount 
[2017-09-19 14:53:09,645 - DEBUG - FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java::76] - Building LoadPlan... 
[2017-09-19 14:53:09,645 - DEBUG - LoadQueryJoinAndFetchProcessor.java::95] - processing queryspace <gen:0> 
[2017-09-19 14:53:09,646 - DEBUG - LoadPlanTreePrinter.java::55] - LoadPlan(entity=com.book.store.entity.Purchase)
    - Returns
       - EntityReturnImpl(entity=com.book.store.entity.Purchase, querySpaceUid=<gen:0>, path=com.book.store.entity.Purchase)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.book.store.entity.Purchase)
          - SQL table alias mapping - purchase0_
          - alias suffix - 0_
          - suffixed key columns - {Purchase1_1_0_}
 
[2017-09-19 14:53:09,646 - DEBUG - EntityLoader.java::128] - Static select for entity com.book.store.entity.Purchase [NONE]: select purchase0_.Purchase_no as Purchase1_1_0_, purchase0_.Book_id as Book_id2_1_0_, purchase0_.Customer_name as Customer3_1_0_, purchase0_.Customer_mobileno as Customer4_1_0_, purchase0_.Purchase_date as Purchase5_1_0_, purchase0_.Amount as Amount6_1_0_ from Purchase purchase0_ where purchase0_.Purchase_no=? 
[2017-09-19 14:53:09,646 - DEBUG - QuerySpacesImpl.java::174] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3b809711] 
[2017-09-19 14:53:09,646 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : bookId 
[2017-09-19 14:53:09,646 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : customerName 
[2017-09-19 14:53:09,646 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : customerMobileNumber 
[2017-09-19 14:53:09,646 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : purchaseDate 
[2017-09-19 14:53:09,646 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : amount 
[2017-09-19 14:53:09,646 - DEBUG - FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java::76] - Building LoadPlan... 
[2017-09-19 14:53:09,647 - DEBUG - LoadQueryJoinAndFetchProcessor.java::95] - processing queryspace <gen:0> 
[2017-09-19 14:53:09,647 - DEBUG - LoadPlanTreePrinter.java::55] - LoadPlan(entity=com.book.store.entity.Purchase)
    - Returns
       - EntityReturnImpl(entity=com.book.store.entity.Purchase, querySpaceUid=<gen:0>, path=com.book.store.entity.Purchase)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.book.store.entity.Purchase)
          - SQL table alias mapping - purchase0_
          - alias suffix - 0_
          - suffixed key columns - {Purchase1_1_0_}
 
[2017-09-19 14:53:09,647 - DEBUG - EntityLoader.java::128] - Static select for entity com.book.store.entity.Purchase [READ]: select purchase0_.Purchase_no as Purchase1_1_0_, purchase0_.Book_id as Book_id2_1_0_, purchase0_.Customer_name as Customer3_1_0_, purchase0_.Customer_mobileno as Customer4_1_0_, purchase0_.Purchase_date as Purchase5_1_0_, purchase0_.Amount as Amount6_1_0_ from Purchase purchase0_ where purchase0_.Purchase_no=? 
[2017-09-19 14:53:09,647 - DEBUG - QuerySpacesImpl.java::174] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@236ab296] 
[2017-09-19 14:53:09,647 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : bookId 
[2017-09-19 14:53:09,647 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : customerName 
[2017-09-19 14:53:09,647 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : customerMobileNumber 
[2017-09-19 14:53:09,648 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : purchaseDate 
[2017-09-19 14:53:09,648 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : amount 
[2017-09-19 14:53:09,648 - DEBUG - FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java::76] - Building LoadPlan... 
[2017-09-19 14:53:09,648 - DEBUG - LoadQueryJoinAndFetchProcessor.java::95] - processing queryspace <gen:0> 
[2017-09-19 14:53:09,648 - DEBUG - LoadPlanTreePrinter.java::55] - LoadPlan(entity=com.book.store.entity.Purchase)
    - Returns
       - EntityReturnImpl(entity=com.book.store.entity.Purchase, querySpaceUid=<gen:0>, path=com.book.store.entity.Purchase)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.book.store.entity.Purchase)
          - SQL table alias mapping - purchase0_
          - alias suffix - 0_
          - suffixed key columns - {Purchase1_1_0_}
 
[2017-09-19 14:53:09,648 - DEBUG - EntityLoader.java::128] - Static select for entity com.book.store.entity.Purchase [UPGRADE]: select purchase0_.Purchase_no as Purchase1_1_0_, purchase0_.Book_id as Book_id2_1_0_, purchase0_.Customer_name as Customer3_1_0_, purchase0_.Customer_mobileno as Customer4_1_0_, purchase0_.Purchase_date as Purchase5_1_0_, purchase0_.Amount as Amount6_1_0_ from Purchase purchase0_ where purchase0_.Purchase_no=? for update 
[2017-09-19 14:53:09,648 - DEBUG - QuerySpacesImpl.java::174] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@63034ed1] 
[2017-09-19 14:53:09,649 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : bookId 
[2017-09-19 14:53:09,649 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : customerName 
[2017-09-19 14:53:09,649 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : customerMobileNumber 
[2017-09-19 14:53:09,649 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : purchaseDate 
[2017-09-19 14:53:09,649 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : amount 
[2017-09-19 14:53:09,649 - DEBUG - FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java::76] - Building LoadPlan... 
[2017-09-19 14:53:09,649 - DEBUG - LoadQueryJoinAndFetchProcessor.java::95] - processing queryspace <gen:0> 
[2017-09-19 14:53:09,649 - DEBUG - LoadPlanTreePrinter.java::55] - LoadPlan(entity=com.book.store.entity.Purchase)
    - Returns
       - EntityReturnImpl(entity=com.book.store.entity.Purchase, querySpaceUid=<gen:0>, path=com.book.store.entity.Purchase)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.book.store.entity.Purchase)
          - SQL table alias mapping - purchase0_
          - alias suffix - 0_
          - suffixed key columns - {Purchase1_1_0_}
 
[2017-09-19 14:53:09,649 - DEBUG - EntityLoader.java::128] - Static select for entity com.book.store.entity.Purchase [UPGRADE_NOWAIT]: select purchase0_.Purchase_no as Purchase1_1_0_, purchase0_.Book_id as Book_id2_1_0_, purchase0_.Customer_name as Customer3_1_0_, purchase0_.Customer_mobileno as Customer4_1_0_, purchase0_.Purchase_date as Purchase5_1_0_, purchase0_.Amount as Amount6_1_0_ from Purchase purchase0_ where purchase0_.Purchase_no=? for update 
[2017-09-19 14:53:09,650 - DEBUG - QuerySpacesImpl.java::174] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@55a8dc49] 
[2017-09-19 14:53:09,650 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : bookId 
[2017-09-19 14:53:09,650 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : customerName 
[2017-09-19 14:53:09,650 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : customerMobileNumber 
[2017-09-19 14:53:09,650 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : purchaseDate 
[2017-09-19 14:53:09,650 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : amount 
[2017-09-19 14:53:09,650 - DEBUG - FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java::76] - Building LoadPlan... 
[2017-09-19 14:53:09,651 - DEBUG - LoadQueryJoinAndFetchProcessor.java::95] - processing queryspace <gen:0> 
[2017-09-19 14:53:09,651 - DEBUG - LoadPlanTreePrinter.java::55] - LoadPlan(entity=com.book.store.entity.Purchase)
    - Returns
       - EntityReturnImpl(entity=com.book.store.entity.Purchase, querySpaceUid=<gen:0>, path=com.book.store.entity.Purchase)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.book.store.entity.Purchase)
          - SQL table alias mapping - purchase0_
          - alias suffix - 0_
          - suffixed key columns - {Purchase1_1_0_}
 
[2017-09-19 14:53:09,651 - DEBUG - EntityLoader.java::128] - Static select for entity com.book.store.entity.Purchase [UPGRADE_SKIPLOCKED]: select purchase0_.Purchase_no as Purchase1_1_0_, purchase0_.Book_id as Book_id2_1_0_, purchase0_.Customer_name as Customer3_1_0_, purchase0_.Customer_mobileno as Customer4_1_0_, purchase0_.Purchase_date as Purchase5_1_0_, purchase0_.Amount as Amount6_1_0_ from Purchase purchase0_ where purchase0_.Purchase_no=? for update 
[2017-09-19 14:53:09,651 - DEBUG - QuerySpacesImpl.java::174] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@71ea1fda] 
[2017-09-19 14:53:09,651 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : bookId 
[2017-09-19 14:53:09,651 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : customerName 
[2017-09-19 14:53:09,651 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : customerMobileNumber 
[2017-09-19 14:53:09,651 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : purchaseDate 
[2017-09-19 14:53:09,652 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : amount 
[2017-09-19 14:53:09,652 - DEBUG - FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java::76] - Building LoadPlan... 
[2017-09-19 14:53:09,652 - DEBUG - LoadQueryJoinAndFetchProcessor.java::95] - processing queryspace <gen:0> 
[2017-09-19 14:53:09,652 - DEBUG - LoadPlanTreePrinter.java::55] - LoadPlan(entity=com.book.store.entity.Purchase)
    - Returns
       - EntityReturnImpl(entity=com.book.store.entity.Purchase, querySpaceUid=<gen:0>, path=com.book.store.entity.Purchase)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.book.store.entity.Purchase)
          - SQL table alias mapping - purchase0_
          - alias suffix - 0_
          - suffixed key columns - {Purchase1_1_0_}
 
[2017-09-19 14:53:09,652 - DEBUG - EntityLoader.java::128] - Static select for entity com.book.store.entity.Purchase [FORCE]: select purchase0_.Purchase_no as Purchase1_1_0_, purchase0_.Book_id as Book_id2_1_0_, purchase0_.Customer_name as Customer3_1_0_, purchase0_.Customer_mobileno as Customer4_1_0_, purchase0_.Purchase_date as Purchase5_1_0_, purchase0_.Amount as Amount6_1_0_ from Purchase purchase0_ where purchase0_.Purchase_no=? for update 
[2017-09-19 14:53:09,652 - DEBUG - QuerySpacesImpl.java::174] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@420745d7] 
[2017-09-19 14:53:09,652 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : bookId 
[2017-09-19 14:53:09,652 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : customerName 
[2017-09-19 14:53:09,652 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : customerMobileNumber 
[2017-09-19 14:53:09,653 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : purchaseDate 
[2017-09-19 14:53:09,653 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : amount 
[2017-09-19 14:53:09,653 - DEBUG - FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java::76] - Building LoadPlan... 
[2017-09-19 14:53:09,653 - DEBUG - LoadQueryJoinAndFetchProcessor.java::95] - processing queryspace <gen:0> 
[2017-09-19 14:53:09,653 - DEBUG - LoadPlanTreePrinter.java::55] - LoadPlan(entity=com.book.store.entity.Purchase)
    - Returns
       - EntityReturnImpl(entity=com.book.store.entity.Purchase, querySpaceUid=<gen:0>, path=com.book.store.entity.Purchase)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.book.store.entity.Purchase)
          - SQL table alias mapping - purchase0_
          - alias suffix - 0_
          - suffixed key columns - {Purchase1_1_0_}
 
[2017-09-19 14:53:09,653 - DEBUG - EntityLoader.java::128] - Static select for entity com.book.store.entity.Purchase [PESSIMISTIC_READ]: select purchase0_.Purchase_no as Purchase1_1_0_, purchase0_.Book_id as Book_id2_1_0_, purchase0_.Customer_name as Customer3_1_0_, purchase0_.Customer_mobileno as Customer4_1_0_, purchase0_.Purchase_date as Purchase5_1_0_, purchase0_.Amount as Amount6_1_0_ from Purchase purchase0_ where purchase0_.Purchase_no=? lock in share mode 
[2017-09-19 14:53:09,653 - DEBUG - QuerySpacesImpl.java::174] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5fa47fea] 
[2017-09-19 14:53:09,653 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : bookId 
[2017-09-19 14:53:09,653 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : customerName 
[2017-09-19 14:53:09,654 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : customerMobileNumber 
[2017-09-19 14:53:09,654 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : purchaseDate 
[2017-09-19 14:53:09,654 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : amount 
[2017-09-19 14:53:09,654 - DEBUG - FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java::76] - Building LoadPlan... 
[2017-09-19 14:53:09,654 - DEBUG - LoadQueryJoinAndFetchProcessor.java::95] - processing queryspace <gen:0> 
[2017-09-19 14:53:09,654 - DEBUG - LoadPlanTreePrinter.java::55] - LoadPlan(entity=com.book.store.entity.Purchase)
    - Returns
       - EntityReturnImpl(entity=com.book.store.entity.Purchase, querySpaceUid=<gen:0>, path=com.book.store.entity.Purchase)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.book.store.entity.Purchase)
          - SQL table alias mapping - purchase0_
          - alias suffix - 0_
          - suffixed key columns - {Purchase1_1_0_}
 
[2017-09-19 14:53:09,654 - DEBUG - EntityLoader.java::128] - Static select for entity com.book.store.entity.Purchase [PESSIMISTIC_WRITE]: select purchase0_.Purchase_no as Purchase1_1_0_, purchase0_.Book_id as Book_id2_1_0_, purchase0_.Customer_name as Customer3_1_0_, purchase0_.Customer_mobileno as Customer4_1_0_, purchase0_.Purchase_date as Purchase5_1_0_, purchase0_.Amount as Amount6_1_0_ from Purchase purchase0_ where purchase0_.Purchase_no=? for update 
[2017-09-19 14:53:09,654 - DEBUG - QuerySpacesImpl.java::174] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5b43e173] 
[2017-09-19 14:53:09,655 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : bookId 
[2017-09-19 14:53:09,655 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : customerName 
[2017-09-19 14:53:09,655 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : customerMobileNumber 
[2017-09-19 14:53:09,655 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : purchaseDate 
[2017-09-19 14:53:09,655 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : amount 
[2017-09-19 14:53:09,655 - DEBUG - FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java::76] - Building LoadPlan... 
[2017-09-19 14:53:09,655 - DEBUG - LoadQueryJoinAndFetchProcessor.java::95] - processing queryspace <gen:0> 
[2017-09-19 14:53:09,655 - DEBUG - LoadPlanTreePrinter.java::55] - LoadPlan(entity=com.book.store.entity.Purchase)
    - Returns
       - EntityReturnImpl(entity=com.book.store.entity.Purchase, querySpaceUid=<gen:0>, path=com.book.store.entity.Purchase)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.book.store.entity.Purchase)
          - SQL table alias mapping - purchase0_
          - alias suffix - 0_
          - suffixed key columns - {Purchase1_1_0_}
 
[2017-09-19 14:53:09,655 - DEBUG - EntityLoader.java::128] - Static select for entity com.book.store.entity.Purchase [PESSIMISTIC_FORCE_INCREMENT]: select purchase0_.Purchase_no as Purchase1_1_0_, purchase0_.Book_id as Book_id2_1_0_, purchase0_.Customer_name as Customer3_1_0_, purchase0_.Customer_mobileno as Customer4_1_0_, purchase0_.Purchase_date as Purchase5_1_0_, purchase0_.Amount as Amount6_1_0_ from Purchase purchase0_ where purchase0_.Purchase_no=? for update 
[2017-09-19 14:53:09,656 - DEBUG - QuerySpacesImpl.java::174] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@545f80bf] 
[2017-09-19 14:53:09,656 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : bookId 
[2017-09-19 14:53:09,656 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : customerName 
[2017-09-19 14:53:09,656 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : customerMobileNumber 
[2017-09-19 14:53:09,656 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : purchaseDate 
[2017-09-19 14:53:09,656 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : amount 
[2017-09-19 14:53:09,656 - DEBUG - FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java::76] - Building LoadPlan... 
[2017-09-19 14:53:09,656 - DEBUG - LoadQueryJoinAndFetchProcessor.java::95] - processing queryspace <gen:0> 
[2017-09-19 14:53:09,656 - DEBUG - LoadPlanTreePrinter.java::55] - LoadPlan(entity=com.book.store.entity.Purchase)
    - Returns
       - EntityReturnImpl(entity=com.book.store.entity.Purchase, querySpaceUid=<gen:0>, path=com.book.store.entity.Purchase)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.book.store.entity.Purchase)
          - SQL table alias mapping - purchase0_
          - alias suffix - 0_
          - suffixed key columns - {Purchase1_1_0_}
 
[2017-09-19 14:53:09,656 - DEBUG - EntityLoader.java::128] - Static select for entity com.book.store.entity.Purchase [OPTIMISTIC]: select purchase0_.Purchase_no as Purchase1_1_0_, purchase0_.Book_id as Book_id2_1_0_, purchase0_.Customer_name as Customer3_1_0_, purchase0_.Customer_mobileno as Customer4_1_0_, purchase0_.Purchase_date as Purchase5_1_0_, purchase0_.Amount as Amount6_1_0_ from Purchase purchase0_ where purchase0_.Purchase_no=? 
[2017-09-19 14:53:09,657 - DEBUG - QuerySpacesImpl.java::174] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@22fa55b2] 
[2017-09-19 14:53:09,657 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : bookId 
[2017-09-19 14:53:09,657 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : customerName 
[2017-09-19 14:53:09,657 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : customerMobileNumber 
[2017-09-19 14:53:09,657 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : purchaseDate 
[2017-09-19 14:53:09,657 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : amount 
[2017-09-19 14:53:09,657 - DEBUG - FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java::76] - Building LoadPlan... 
[2017-09-19 14:53:09,657 - DEBUG - LoadQueryJoinAndFetchProcessor.java::95] - processing queryspace <gen:0> 
[2017-09-19 14:53:09,657 - DEBUG - LoadPlanTreePrinter.java::55] - LoadPlan(entity=com.book.store.entity.Purchase)
    - Returns
       - EntityReturnImpl(entity=com.book.store.entity.Purchase, querySpaceUid=<gen:0>, path=com.book.store.entity.Purchase)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.book.store.entity.Purchase)
          - SQL table alias mapping - purchase0_
          - alias suffix - 0_
          - suffixed key columns - {Purchase1_1_0_}
 
[2017-09-19 14:53:09,658 - DEBUG - EntityLoader.java::128] - Static select for entity com.book.store.entity.Purchase [OPTIMISTIC_FORCE_INCREMENT]: select purchase0_.Purchase_no as Purchase1_1_0_, purchase0_.Book_id as Book_id2_1_0_, purchase0_.Customer_name as Customer3_1_0_, purchase0_.Customer_mobileno as Customer4_1_0_, purchase0_.Purchase_date as Purchase5_1_0_, purchase0_.Amount as Amount6_1_0_ from Purchase purchase0_ where purchase0_.Purchase_no=? 
[2017-09-19 14:53:09,658 - DEBUG - CascadeEntityLoader.java::38] - Static select for action ACTION_MERGE on entity com.book.store.entity.Purchase: select purchase0_.Purchase_no as Purchase1_1_0_, purchase0_.Book_id as Book_id2_1_0_, purchase0_.Customer_name as Customer3_1_0_, purchase0_.Customer_mobileno as Customer4_1_0_, purchase0_.Purchase_date as Purchase5_1_0_, purchase0_.Amount as Amount6_1_0_ from Purchase purchase0_ where purchase0_.Purchase_no=? 
[2017-09-19 14:53:09,658 - DEBUG - CascadeEntityLoader.java::38] - Static select for action ACTION_REFRESH on entity com.book.store.entity.Purchase: select purchase0_.Purchase_no as Purchase1_1_0_, purchase0_.Book_id as Book_id2_1_0_, purchase0_.Customer_name as Customer3_1_0_, purchase0_.Customer_mobileno as Customer4_1_0_, purchase0_.Purchase_date as Purchase5_1_0_, purchase0_.Amount as Amount6_1_0_ from Purchase purchase0_ where purchase0_.Purchase_no=? 
[2017-09-19 14:53:09,658 - DEBUG - SessionFactoryImpl.java::462] - Instantiated session factory 
[2017-09-19 14:53:09,660 - INFO - SchemaUpdate.java::101] - HHH000228: Running hbm2ddl schema update 
[2017-09-19 14:53:09,672 - INFO - InformationExtractorJdbcDatabaseMetaDataImpl.java::334] - HHH000262: Table not found: Book 
[2017-09-19 14:53:09,723 - INFO - InformationExtractorJdbcDatabaseMetaDataImpl.java::334] - HHH000262: Table not found: Book 
[2017-09-19 14:53:09,840 - INFO - InformationExtractorJdbcDatabaseMetaDataImpl.java::334] - HHH000262: Table not found: hibernate_sequence 
[2017-09-19 14:53:09,845 - INFO - InformationExtractorJdbcDatabaseMetaDataImpl.java::334] - HHH000262: Table not found: hibernate_sequence 
[2017-09-19 14:53:09,897 - INFO - InformationExtractorJdbcDatabaseMetaDataImpl.java::334] - HHH000262: Table not found: Purchase 
[2017-09-19 14:53:09,902 - INFO - InformationExtractorJdbcDatabaseMetaDataImpl.java::334] - HHH000262: Table not found: Purchase 
[2017-09-19 14:53:09,959 - DEBUG - JtaPlatformInitiator.java::42] - No JtaPlatform was specified, checking resolver 
[2017-09-19 14:53:09,960 - DEBUG - JtaPlatformResolverInitiator.java::33] - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver] 
[2017-09-19 14:53:09,962 - DEBUG - StandardJtaPlatformResolver.java::101] - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform] 
[2017-09-19 14:53:09,963 - DEBUG - NamedQueryRepository.java::149] - Checking 0 named HQL queries 
[2017-09-19 14:53:09,963 - DEBUG - NamedQueryRepository.java::165] - Checking 0 named SQL queries 
[2017-09-19 14:53:09,965 - DEBUG - SessionFactoryRegistry.java::52] - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@5b989dc7 
[2017-09-19 14:53:09,966 - DEBUG - SessionFactoryRegistry.java::74] - Registering SessionFactory: bb29a07f-f23d-4c88-8fb1-4ad86504c6fa (<unnamed>) 
[2017-09-19 14:53:09,966 - DEBUG - SessionFactoryRegistry.java::81] - Not binding SessionFactory to JNDI, no JNDI name configured 
[2017-09-19 14:53:09,995 - DEBUG - StatisticsInitiator.java::82] - Statistics initialized [enabled=false] 
[2017-09-19 14:53:10,009 - DEBUG - SqlStatementLogger.java::92] - select count(*) as y0_ from Book this_ 
[2017-09-19 14:53:10,018 - DEBUG - DelegatingBasicLogger.java::384] - Result set row: 0 
[2017-09-19 14:53:10,018 - DEBUG - Loader.java::1514] - Result row:  
[2017-09-19 14:53:10,022 - DEBUG - TransactionImpl.java::51] - begin 
[2017-09-19 14:53:10,031 - DEBUG - SqlStatementLogger.java::92] - select next_val as id_val from hibernate_sequence for update 
[2017-09-19 14:53:10,031 - ERROR - TableStructure.java::142] - could not read a hi value - you need to populate the table: hibernate_sequence 
[2017-09-19 14:54:10,962 - DEBUG - CoreLogging.java::28] - Logging Provider: org.jboss.logging.Log4jLoggerProvider 
[2017-09-19 14:54:10,971 - DEBUG - IntegratorServiceImpl.java::46] - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator]. 
[2017-09-19 14:54:10,975 - DEBUG - IntegratorServiceImpl.java::46] - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator]. 
[2017-09-19 14:54:10,976 - DEBUG - IntegratorServiceImpl.java::46] - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator]. 
[2017-09-19 14:54:11,047 - INFO - Version.java::37] - HHH000412: Hibernate Core {5.0.1.Final} 
[2017-09-19 14:54:11,048 - INFO - Environment.java::213] - HHH000206: hibernate.properties not found 
[2017-09-19 14:54:11,049 - INFO - Environment.java::317] - HHH000021: Bytecode provider name : javassist 
[2017-09-19 14:54:11,071 - DEBUG - LocalXmlResourceResolver.java::57] - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd createDatabaseIfNotExist=true] 
[2017-09-19 14:54:11,073 - WARN - LocalXmlResourceResolver.java::91] - HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-configuration. Use namespace http://www.hibernate.org/dtd/hibernate-configuration instead.  Support for obsolete DTD/XSD namespaces may be removed at any time. 
[2017-09-19 14:54:11,073 - DEBUG - LocalXmlResourceResolver.java::95] - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/ 
[2017-09-19 14:54:11,077 - DEBUG - JaxbCfgProcessor.java::116] - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information 
[2017-09-19 14:54:11,209 - DEBUG - Configuration.java::722] - Building session factory using internal StandardServiceRegistryBuilder 
[2017-09-19 14:54:11,215 - DEBUG - ServiceBinding.java::68] - Overriding existing service binding [org.hibernate.secure.spi.JaccService] 
[2017-09-19 14:54:11,215 - DEBUG - Configuration.java::653] - Building session factory using provided StandardServiceRegistry 
[2017-09-19 14:54:11,227 - DEBUG - RegionFactoryInitiator.java::88] - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory 
[2017-09-19 14:54:11,233 - INFO - JavaReflectionManager.java::66] - HCANN000001: Hibernate Commons Annotations {5.0.0.Final} 
[2017-09-19 14:54:11,243 - DEBUG - LocalXmlResourceResolver.java::57] - Interpreting public/system identifier : [-//Hibernate/Hibernate Mapping DTD 5.0//EN] - [http://hibernate.sourceforge.net/hibernate-mapping-5.0.dtd] 
[2017-09-19 14:54:11,243 - WARN - LocalXmlResourceResolver.java::75] - HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-mapping. Use namespace http://www.hibernate.org/dtd/hibernate-mapping instead.  Support for obsolete DTD/XSD namespaces may be removed at any time. 
[2017-09-19 14:54:11,243 - DEBUG - LocalXmlResourceResolver.java::79] - Recognized legacy hibernate-mapping identifier; attempting to resolve on classpath under org/hibernate/ 
[2017-09-19 14:54:11,255 - DEBUG - MappingBinder.java::54] - Performing JAXB binding of hbm.xml document : Origin(name=bookstore.hbm.xml,type=RESOURCE) 
[2017-09-19 14:54:11,725 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration boolean -> org.hibernate.type.BooleanType@2f8dad04 
[2017-09-19 14:54:11,726 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration boolean -> org.hibernate.type.BooleanType@2f8dad04 
[2017-09-19 14:54:11,726 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@2f8dad04 
[2017-09-19 14:54:11,726 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@44821a96 
[2017-09-19 14:54:11,727 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration true_false -> org.hibernate.type.TrueFalseType@625732 
[2017-09-19 14:54:11,728 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration yes_no -> org.hibernate.type.YesNoType@cad498c 
[2017-09-19 14:54:11,729 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration byte -> org.hibernate.type.ByteType@27ff5d15 
[2017-09-19 14:54:11,729 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration byte -> org.hibernate.type.ByteType@27ff5d15 
[2017-09-19 14:54:11,729 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@27ff5d15 
[2017-09-19 14:54:11,730 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration character -> org.hibernate.type.CharacterType@31e5415e 
[2017-09-19 14:54:11,730 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration char -> org.hibernate.type.CharacterType@31e5415e 
[2017-09-19 14:54:11,730 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@31e5415e 
[2017-09-19 14:54:11,731 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration short -> org.hibernate.type.ShortType@22e357dc 
[2017-09-19 14:54:11,731 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration short -> org.hibernate.type.ShortType@22e357dc 
[2017-09-19 14:54:11,731 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@22e357dc 
[2017-09-19 14:54:11,732 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration integer -> org.hibernate.type.IntegerType@550ee7e5 
[2017-09-19 14:54:11,732 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration int -> org.hibernate.type.IntegerType@550ee7e5 
[2017-09-19 14:54:11,732 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@550ee7e5 
[2017-09-19 14:54:11,733 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration long -> org.hibernate.type.LongType@223aa2f7 
[2017-09-19 14:54:11,733 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration long -> org.hibernate.type.LongType@223aa2f7 
[2017-09-19 14:54:11,733 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.lang.Long -> org.hibernate.type.LongType@223aa2f7 
[2017-09-19 14:54:11,734 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration float -> org.hibernate.type.FloatType@29d89d5d 
[2017-09-19 14:54:11,734 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration float -> org.hibernate.type.FloatType@29d89d5d 
[2017-09-19 14:54:11,735 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@29d89d5d 
[2017-09-19 14:54:11,736 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration double -> org.hibernate.type.DoubleType@37654521 
[2017-09-19 14:54:11,736 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration double -> org.hibernate.type.DoubleType@37654521 
[2017-09-19 14:54:11,736 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@37654521 
[2017-09-19 14:54:11,737 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@24fcf36f 
[2017-09-19 14:54:11,737 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@24fcf36f 
[2017-09-19 14:54:11,738 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@2b48a640 
[2017-09-19 14:54:11,738 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@2b48a640 
[2017-09-19 14:54:11,739 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration string -> org.hibernate.type.StringType@4bb33f74 
[2017-09-19 14:54:11,739 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.lang.String -> org.hibernate.type.StringType@4bb33f74 
[2017-09-19 14:54:11,739 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@73700b80 
[2017-09-19 14:54:11,740 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@4a7f959b 
[2017-09-19 14:54:11,740 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration url -> org.hibernate.type.UrlType@63a12c68 
[2017-09-19 14:54:11,741 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.net.URL -> org.hibernate.type.UrlType@63a12c68 
[2017-09-19 14:54:11,742 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration date -> org.hibernate.type.DateType@67c33749 
[2017-09-19 14:54:11,742 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.sql.Date -> org.hibernate.type.DateType@67c33749 
[2017-09-19 14:54:11,743 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration time -> org.hibernate.type.TimeType@3d6f0054 
[2017-09-19 14:54:11,743 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@3d6f0054 
[2017-09-19 14:54:11,744 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration timestamp -> org.hibernate.type.TimestampType@3bf9ce3e 
[2017-09-19 14:54:11,744 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@3bf9ce3e 
[2017-09-19 14:54:11,744 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@3bf9ce3e 
[2017-09-19 14:54:11,745 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@383bfa16 
[2017-09-19 14:54:11,746 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration calendar -> org.hibernate.type.CalendarType@4d0f2471 
[2017-09-19 14:54:11,746 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4d0f2471 
[2017-09-19 14:54:11,747 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4d0f2471 
[2017-09-19 14:54:11,747 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@73e22a3d 
[2017-09-19 14:54:11,748 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration locale -> org.hibernate.type.LocaleType@4229bb3f 
[2017-09-19 14:54:11,748 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@4229bb3f 
[2017-09-19 14:54:11,749 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration currency -> org.hibernate.type.CurrencyType@35aea049 
[2017-09-19 14:54:11,749 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@35aea049 
[2017-09-19 14:54:11,749 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration timezone -> org.hibernate.type.TimeZoneType@3f6b0be5 
[2017-09-19 14:54:11,750 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@3f6b0be5 
[2017-09-19 14:54:11,750 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration class -> org.hibernate.type.ClassType@a530d0a 
[2017-09-19 14:54:11,750 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@a530d0a 
[2017-09-19 14:54:11,751 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1af2d44a 
[2017-09-19 14:54:11,751 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1af2d44a 
[2017-09-19 14:54:11,752 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@58695725 
[2017-09-19 14:54:11,753 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration binary -> org.hibernate.type.BinaryType@25fb8912 
[2017-09-19 14:54:11,753 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration byte[] -> org.hibernate.type.BinaryType@25fb8912 
[2017-09-19 14:54:11,753 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration [B -> org.hibernate.type.BinaryType@25fb8912 
[2017-09-19 14:54:11,754 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@58d75e99 
[2017-09-19 14:54:11,754 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@58d75e99 
[2017-09-19 14:54:11,754 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@58d75e99 
[2017-09-19 14:54:11,754 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration image -> org.hibernate.type.ImageType@6fd83fc1 
[2017-09-19 14:54:11,755 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration characters -> org.hibernate.type.CharArrayType@6392827e 
[2017-09-19 14:54:11,755 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration char[] -> org.hibernate.type.CharArrayType@6392827e 
[2017-09-19 14:54:11,755 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration [C -> org.hibernate.type.CharArrayType@6392827e 
[2017-09-19 14:54:11,756 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@5d0a1059 
[2017-09-19 14:54:11,756 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@5d0a1059 
[2017-09-19 14:54:11,756 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@5d0a1059 
[2017-09-19 14:54:11,757 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration text -> org.hibernate.type.TextType@5a56cdac 
[2017-09-19 14:54:11,757 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration ntext -> org.hibernate.type.NTextType@434a63ab 
[2017-09-19 14:54:11,760 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration blob -> org.hibernate.type.BlobType@437da279 
[2017-09-19 14:54:11,760 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@437da279 
[2017-09-19 14:54:11,761 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@3cebbb30 
[2017-09-19 14:54:11,763 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration clob -> org.hibernate.type.ClobType@4c1909a3 
[2017-09-19 14:54:11,763 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4c1909a3 
[2017-09-19 14:54:11,765 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration nclob -> org.hibernate.type.NClobType@771a660 
[2017-09-19 14:54:11,765 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@771a660 
[2017-09-19 14:54:11,766 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3f6f6701 
[2017-09-19 14:54:11,766 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@1ed6388a 
[2017-09-19 14:54:11,767 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration serializable -> org.hibernate.type.SerializableType@121314f7 
[2017-09-19 14:54:11,769 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration object -> org.hibernate.type.ObjectType@4a883b15 
[2017-09-19 14:54:11,769 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@4a883b15 
[2017-09-19 14:54:11,769 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@5824a83d 
[2017-09-19 14:54:11,769 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@537f60bf 
[2017-09-19 14:54:11,769 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@5677323c 
[2017-09-19 14:54:11,769 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@18df8434 
[2017-09-19 14:54:11,770 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@65c7a252 
[2017-09-19 14:54:11,770 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@4d154ccd 
[2017-09-19 14:54:11,770 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@229c6181 
[2017-09-19 14:54:11,770 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4686afc2 
[2017-09-19 14:54:11,776 - WARN - DriverManagerConnectionProviderImpl.java::76] - HHH000402: Using Hibernate built-in connection pool (not for production use!) 
[2017-09-19 14:54:11,779 - INFO - DriverManagerConnectionProviderImpl.java::149] - HHH000401: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/bookstore?createDatabaseIfNotExist=true&useSSL=false] 
[2017-09-19 14:54:11,780 - INFO - DriverManagerConnectionProviderImpl.java::155] - HHH000046: Connection properties: {user=neelakanta, password=Welcome@123, autocommit=true} 
[2017-09-19 14:54:11,780 - INFO - DriverManagerConnectionProviderImpl.java::163] - HHH000006: Autocommit mode: true 
[2017-09-19 14:54:11,781 - INFO - DriverManagerConnectionProviderImpl.java::85] - HHH000115: Hibernate connection pool size: 20 (min=1) 
[2017-09-19 14:54:11,781 - DEBUG - DelegatingBasicLogger.java::384] - Initializing Connection pool with 1 Connections 
[2017-09-19 14:54:11,994 - DEBUG - JdbcEnvironmentInitiator.java::72] - Database ->
       name : MySQL
    version : 5.5.55-0ubuntu0.14.04.1
      major : 5
      minor : 5 
[2017-09-19 14:54:11,994 - DEBUG - JdbcEnvironmentInitiator.java::83] - Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-6.0.5 ( Revision: 6e477e32dff18fb4dc102e53f5a68037a9f8762e )
      major : 6
      minor : 0 
[2017-09-19 14:54:11,994 - DEBUG - DelegatingBasicLogger.java::389] - JDBC version : 4.1 
[2017-09-19 14:54:12,003 - INFO - Dialect.java::154] - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect 
[2017-09-19 14:54:12,013 - DEBUG - StandardRefCursorSupport.java::170] - Unexpected error trying to gauge level of JDBC REF_CURSOR support : null 
[2017-09-19 14:54:12,029 - DEBUG - IdentifierHelperBuilder.java::116] - JDBC driver metadata reported database stores quoted identifiers in more than one case 
[2017-09-19 14:54:12,032 - DEBUG - IdentifierHelperBuilder.java::182] - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers 
[2017-09-19 14:54:12,054 - DEBUG - DefaultIdentifierGeneratorFactory.java::78] - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator] 
[2017-09-19 14:54:12,055 - DEBUG - DefaultIdentifierGeneratorFactory.java::78] - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator] 
[2017-09-19 14:54:12,056 - DEBUG - DefaultIdentifierGeneratorFactory.java::78] - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator] 
[2017-09-19 14:54:12,056 - DEBUG - DefaultIdentifierGeneratorFactory.java::78] - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator] 
[2017-09-19 14:54:12,056 - DEBUG - DefaultIdentifierGeneratorFactory.java::78] - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned] 
[2017-09-19 14:54:12,057 - DEBUG - DefaultIdentifierGeneratorFactory.java::78] - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator] 
[2017-09-19 14:54:12,057 - DEBUG - DefaultIdentifierGeneratorFactory.java::78] - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator] 
[2017-09-19 14:54:12,058 - DEBUG - DefaultIdentifierGeneratorFactory.java::78] - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator] 
[2017-09-19 14:54:12,058 - DEBUG - DefaultIdentifierGeneratorFactory.java::78] - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator] 
[2017-09-19 14:54:12,059 - DEBUG - DefaultIdentifierGeneratorFactory.java::78] - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator] 
[2017-09-19 14:54:12,059 - DEBUG - DefaultIdentifierGeneratorFactory.java::78] - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator] 
[2017-09-19 14:54:12,059 - DEBUG - DefaultIdentifierGeneratorFactory.java::78] - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator] 
[2017-09-19 14:54:12,060 - DEBUG - DefaultIdentifierGeneratorFactory.java::78] - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator] 
[2017-09-19 14:54:12,060 - DEBUG - DefaultIdentifierGeneratorFactory.java::78] - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator] 
[2017-09-19 14:54:12,131 - DEBUG - Namespace.java::47] - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}] 
[2017-09-19 14:54:12,149 - DEBUG - ModelBinder.java::230] - Mapping class: com.book.store.entity.Purchase -> Purchase 
[2017-09-19 14:54:12,153 - WARN - ModelBinder.java::2441] - HHH90000003: Use of DOM4J entity-mode is considered deprecated 
[2017-09-19 14:54:12,153 - DEBUG - ModelBinder.java::2538] - Mapped property: purchaseNumber -> [Purchase_no] 
[2017-09-19 14:54:12,154 - WARN - ModelBinder.java::2441] - HHH90000003: Use of DOM4J entity-mode is considered deprecated 
[2017-09-19 14:54:12,154 - DEBUG - ModelBinder.java::2538] - Mapped property: bookId -> [Book_id] 
[2017-09-19 14:54:12,157 - WARN - ModelBinder.java::2441] - HHH90000003: Use of DOM4J entity-mode is considered deprecated 
[2017-09-19 14:54:12,157 - DEBUG - ModelBinder.java::2538] - Mapped property: customerName -> [Customer_name] 
[2017-09-19 14:54:12,157 - WARN - ModelBinder.java::2441] - HHH90000003: Use of DOM4J entity-mode is considered deprecated 
[2017-09-19 14:54:12,157 - DEBUG - ModelBinder.java::2538] - Mapped property: customerMobileNumber -> [Customer_mobileno] 
[2017-09-19 14:54:12,157 - WARN - ModelBinder.java::2441] - HHH90000003: Use of DOM4J entity-mode is considered deprecated 
[2017-09-19 14:54:12,157 - DEBUG - ModelBinder.java::2538] - Mapped property: purchaseDate -> [Purchase_date] 
[2017-09-19 14:54:12,157 - WARN - ModelBinder.java::2441] - HHH90000003: Use of DOM4J entity-mode is considered deprecated 
[2017-09-19 14:54:12,158 - DEBUG - ModelBinder.java::2538] - Mapped property: amount -> [Amount] 
[2017-09-19 14:54:12,160 - DEBUG - AnnotationBinder.java::509] - Binding entity from annotated class: com.book.store.entity.Book 
[2017-09-19 14:54:12,172 - DEBUG - Ejb3Column.java::213] - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'} 
[2017-09-19 14:54:12,176 - DEBUG - EntityBinder.java::389] - Import with entity name Book 
[2017-09-19 14:54:12,178 - DEBUG - EntityBinder.java::665] - Bind entity com.book.store.entity.Book on table Book 
[2017-09-19 14:54:12,193 - DEBUG - Ejb3Column.java::213] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=Book_id, insertable=true, updatable=true, unique=false} 
[2017-09-19 14:54:12,196 - DEBUG - PropertyBinder.java::169] - MetadataSourceProcessor property bookId with lazy=false 
[2017-09-19 14:54:12,197 - DEBUG - AbstractPropertyHolder.java::90] - Attempting to locate auto-apply AttributeConverter for property [com.book.store.entity.Book:bookId] 
[2017-09-19 14:54:12,198 - DEBUG - SimpleValueBinder.java::384] - building SimpleValue for bookId 
[2017-09-19 14:54:12,198 - DEBUG - PropertyBinder.java::260] - Building property bookId 
[2017-09-19 14:54:12,201 - DEBUG - Ejb3Column.java::213] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=Author_name, insertable=true, updatable=true, unique=false} 
[2017-09-19 14:54:12,201 - DEBUG - PropertyBinder.java::169] - MetadataSourceProcessor property authorName with lazy=false 
[2017-09-19 14:54:12,202 - DEBUG - AbstractPropertyHolder.java::90] - Attempting to locate auto-apply AttributeConverter for property [com.book.store.entity.Book:authorName] 
[2017-09-19 14:54:12,202 - DEBUG - SimpleValueBinder.java::384] - building SimpleValue for authorName 
[2017-09-19 14:54:12,202 - DEBUG - PropertyBinder.java::260] - Building property authorName 
[2017-09-19 14:54:12,202 - DEBUG - Ejb3Column.java::213] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=Book_name, insertable=true, updatable=true, unique=false} 
[2017-09-19 14:54:12,202 - DEBUG - PropertyBinder.java::169] - MetadataSourceProcessor property bookName with lazy=false 
[2017-09-19 14:54:12,202 - DEBUG - AbstractPropertyHolder.java::90] - Attempting to locate auto-apply AttributeConverter for property [com.book.store.entity.Book:bookName] 
[2017-09-19 14:54:12,202 - DEBUG - SimpleValueBinder.java::384] - building SimpleValue for bookName 
[2017-09-19 14:54:12,203 - DEBUG - PropertyBinder.java::260] - Building property bookName 
[2017-09-19 14:54:12,203 - DEBUG - Ejb3Column.java::213] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=Category, insertable=true, updatable=true, unique=false} 
[2017-09-19 14:54:12,203 - DEBUG - PropertyBinder.java::169] - MetadataSourceProcessor property categoryName with lazy=false 
[2017-09-19 14:54:12,203 - DEBUG - AbstractPropertyHolder.java::90] - Attempting to locate auto-apply AttributeConverter for property [com.book.store.entity.Book:categoryName] 
[2017-09-19 14:54:12,203 - DEBUG - SimpleValueBinder.java::384] - building SimpleValue for categoryName 
[2017-09-19 14:54:12,203 - DEBUG - PropertyBinder.java::260] - Building property categoryName 
[2017-09-19 14:54:12,203 - DEBUG - Ejb3Column.java::213] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=price, insertable=true, updatable=true, unique=false} 
[2017-09-19 14:54:12,204 - DEBUG - PropertyBinder.java::169] - MetadataSourceProcessor property price with lazy=false 
[2017-09-19 14:54:12,204 - DEBUG - AbstractPropertyHolder.java::90] - Attempting to locate auto-apply AttributeConverter for property [com.book.store.entity.Book:price] 
[2017-09-19 14:54:12,204 - DEBUG - SimpleValueBinder.java::384] - building SimpleValue for price 
[2017-09-19 14:54:12,204 - DEBUG - PropertyBinder.java::260] - Building property price 
[2017-09-19 14:54:12,204 - DEBUG - Ejb3Column.java::213] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=Publisher, insertable=true, updatable=true, unique=false} 
[2017-09-19 14:54:12,204 - DEBUG - PropertyBinder.java::169] - MetadataSourceProcessor property publisherName with lazy=false 
[2017-09-19 14:54:12,204 - DEBUG - AbstractPropertyHolder.java::90] - Attempting to locate auto-apply AttributeConverter for property [com.book.store.entity.Book:publisherName] 
[2017-09-19 14:54:12,204 - DEBUG - SimpleValueBinder.java::384] - building SimpleValue for publisherName 
[2017-09-19 14:54:12,205 - DEBUG - PropertyBinder.java::260] - Building property publisherName 
[2017-09-19 14:54:12,206 - DEBUG - SimpleValueBinder.java::423] - Starting fillSimpleValue for bookId 
[2017-09-19 14:54:12,206 - DEBUG - SimpleValueBinder.java::423] - Starting fillSimpleValue for authorName 
[2017-09-19 14:54:12,206 - DEBUG - SimpleValueBinder.java::423] - Starting fillSimpleValue for bookName 
[2017-09-19 14:54:12,206 - DEBUG - SimpleValueBinder.java::423] - Starting fillSimpleValue for categoryName 
[2017-09-19 14:54:12,206 - DEBUG - SimpleValueBinder.java::423] - Starting fillSimpleValue for price 
[2017-09-19 14:54:12,206 - DEBUG - SimpleValueBinder.java::423] - Starting fillSimpleValue for publisherName 
[2017-09-19 14:54:12,223 - DEBUG - SessionFactoryImpl.java::210] - Building session factory 
[2017-09-19 14:54:12,224 - DEBUG - Settings.java::69] - SessionFactory name : null 
[2017-09-19 14:54:12,224 - DEBUG - Settings.java::70] - Automatic flush during beforeCompletion(): disabled 
[2017-09-19 14:54:12,224 - DEBUG - Settings.java::71] - Automatic session close at end of transaction: disabled 
[2017-09-19 14:54:12,224 - DEBUG - Settings.java::73] - Statistics: disabled 
[2017-09-19 14:54:12,224 - DEBUG - Settings.java::75] - Deleted entity synthetic identifier rollback: disabled 
[2017-09-19 14:54:12,224 - DEBUG - Settings.java::76] - Default entity-mode: pojo 
[2017-09-19 14:54:12,224 - DEBUG - Settings.java::77] - Check Nullability in Core (should be disabled when Bean Validation is on): enabled 
[2017-09-19 14:54:12,224 - DEBUG - Settings.java::78] - Allow initialization of lazy state outside session : disabled 
[2017-09-19 14:54:12,224 - DEBUG - Settings.java::80] - Using BatchFetchStyle : LEGACY 
[2017-09-19 14:54:12,225 - DEBUG - Settings.java::81] - Default batch fetch size: -1 
[2017-09-19 14:54:12,225 - DEBUG - Settings.java::82] - Maximum outer join fetch depth: 2 
[2017-09-19 14:54:12,225 - DEBUG - Settings.java::83] - Default null ordering: NONE 
[2017-09-19 14:54:12,225 - DEBUG - Settings.java::84] - Order SQL updates by primary key: disabled 
[2017-09-19 14:54:12,225 - DEBUG - Settings.java::85] - Order SQL inserts for batching: disabled 
[2017-09-19 14:54:12,225 - DEBUG - Settings.java::87] - multi-tenancy strategy : NONE 
[2017-09-19 14:54:12,225 - DEBUG - Settings.java::89] - JTA Track by Thread: enabled 
[2017-09-19 14:54:12,225 - DEBUG - Settings.java::91] - Query language substitutions: {} 
[2017-09-19 14:54:12,225 - DEBUG - Settings.java::92] - JPA query language strict compliance: disabled 
[2017-09-19 14:54:12,225 - DEBUG - Settings.java::93] - Named query checking : enabled 
[2017-09-19 14:54:12,225 - DEBUG - Settings.java::95] - Second-level cache: enabled 
[2017-09-19 14:54:12,225 - DEBUG - Settings.java::96] - Second-level query cache: disabled 
[2017-09-19 14:54:12,226 - DEBUG - Settings.java::97] - Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@5bd82fed 
[2017-09-19 14:54:12,226 - DEBUG - Settings.java::98] - Second-level cache region prefix: null 
[2017-09-19 14:54:12,226 - DEBUG - Settings.java::99] - Optimize second-level cache for minimal puts: disabled 
[2017-09-19 14:54:12,226 - DEBUG - Settings.java::100] - Structured second-level cache entries: disabled 
[2017-09-19 14:54:12,226 - DEBUG - Settings.java::101] - Second-level cache direct-reference entries: disabled 
[2017-09-19 14:54:12,226 - DEBUG - Settings.java::102] - Automatic eviction of collection cache: disabled 
[2017-09-19 14:54:12,226 - DEBUG - Settings.java::104] - JDBC batch size: 15 
[2017-09-19 14:54:12,226 - DEBUG - Settings.java::105] - JDBC batch updates for versioned data: enabled 
[2017-09-19 14:54:12,226 - DEBUG - Settings.java::106] - Scrollable result sets: enabled 
[2017-09-19 14:54:12,226 - DEBUG - Settings.java::107] - Wrap result sets: disabled 
[2017-09-19 14:54:12,226 - DEBUG - Settings.java::108] - JDBC3 getGeneratedKeys(): enabled 
[2017-09-19 14:54:12,226 - DEBUG - Settings.java::109] - JDBC result set fetch size: null 
[2017-09-19 14:54:12,226 - DEBUG - Settings.java::110] - Connection release mode: ON_CLOSE 
[2017-09-19 14:54:12,227 - DEBUG - Settings.java::111] - Generate SQL with comments: disabled 
[2017-09-19 14:54:12,253 - DEBUG - SessionFactoryImpl.java::255] - Session factory constructed with filter configurations : {} 
[2017-09-19 14:54:12,253 - DEBUG - SessionFactoryImpl.java::256] - Instantiating session factory with properties: {hibernate.connection.password=Welcome@123, java.runtime.name=Java(TM) SE Runtime Environment, java.vm.version=25.45-b02, sun.boot.library.path=/home/neelakanta/SetupFiles/jdk1.8.0_45/jre/lib/amd64, hibernate.connection.username=neelakanta, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@5b057c8c, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=:, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, sun.os.patch.level=unknown, user.country=US, sun.java.launcher=SUN_STANDARD, java.vm.specification.name=Java Virtual Machine Specification, user.dir=/home/neelakanta/Documents/Eclipse Documents/MWatchExperiment/BookStore, java.runtime.version=1.8.0_45-b14, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, os.arch=amd64, java.endorsed.dirs=/home/neelakanta/SetupFiles/jdk1.8.0_45/jre/lib/endorsed, hibernate.connection.autocommit=true, java.io.tmpdir=/tmp, line.separator=
, java.vm.specification.vendor=Oracle Corporation, os.name=Linux, sun.jnu.encoding=UTF-8, java.library.path=/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib, java.class.version=52.0, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=3.13.0-119-generic, user.home=/home/neelakanta, user.timezone=Asia/Kolkata, java.awt.printerjob=sun.print.PSPrinterJob, file.encoding=UTF-8, java.specification.version=1.8, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, user.name=neelakanta, java.class.path=/home/neelakanta/Documents/Eclipse Documents/MWatchExperiment/BookStore/target/classes:/home/neelakanta/.m2/repository/junit/junit/3.8.1/junit-3.8.1.jar:/home/neelakanta/SetupFiles/apache-tomcat-8.0.36/lib/catalina-ha.jar:/home/neelakanta/SetupFiles/apache-tomcat-8.0.36/lib/tomcat-dbcp.jar:/home/neelakanta/SetupFiles/apache-tomcat-8.0.36/lib/catalina-tribes.jar:/home/neelakanta/SetupFiles/apache-tomcat-8.0.36/lib/tomcat-i18n-fr.jar:/home/neelakanta/SetupFiles/apache-tomcat-8.0.36/lib/el-api.jar:/home/neelakanta/SetupFiles/apache-tomcat-8.0.36/lib/jsp-api.jar:/home/neelakanta/SetupFiles/apache-tomcat-8.0.36/lib/tomcat-i18n-es.jar:/home/neelakanta/SetupFiles/apache-tomcat-8.0.36/lib/annotations-api.jar:/home/neelakanta/SetupFiles/apache-tomcat-8.0.36/lib/tomcat-i18n-ja.jar:/home/neelakanta/SetupFiles/apache-tomcat-8.0.36/lib/jasper-el.jar:/home/neelakanta/SetupFiles/apache-tomcat-8.0.36/lib/tomcat-websocket.jar:/home/neelakanta/SetupFiles/apache-tomcat-8.0.36/lib/tomcat-jni.jar:/home/neelakanta/SetupFiles/apache-tomcat-8.0.36/lib/servlet-api.jar:/home/neelakanta/SetupFiles/apache-tomcat-8.0.36/lib/tomcat-api.jar:/home/neelakanta/SetupFiles/apache-tomcat-8.0.36/lib/ecj-4.5.jar:/home/neelakanta/SetupFiles/apache-tomcat-8.0.36/lib/tomcat-jdbc.jar:/home/neelakanta/SetupFiles/apache-tomcat-8.0.36/lib/catalina.jar:/home/neelakanta/SetupFiles/apache-tomcat-8.0.36/lib/tomcat-coyote.jar:/home/neelakanta/SetupFiles/apache-tomcat-8.0.36/lib/tomcat-util.jar:/home/neelakanta/SetupFiles/apache-tomcat-8.0.36/lib/catalina-storeconfig.jar:/home/neelakanta/SetupFiles/apache-tomcat-8.0.36/lib/tomcat-util-scan.jar:/home/neelakanta/SetupFiles/apache-tomcat-8.0.36/lib/websocket-api.jar:/home/neelakanta/SetupFiles/apache-tomcat-8.0.36/lib/catalina-ant.jar:/home/neelakanta/SetupFiles/apache-tomcat-8.0.36/lib/jasper.jar:/home/neelakanta/eclipseMars/plugins/org.junit_4.12.0.v201504281640/junit.jar:/home/neelakanta/eclipseMars/plugins/org.hamcrest.core_1.3.0.v201303031735.jar:/home/neelakanta/.m2/repository/org/hibernate/hibernate-core/5.0.1.Final/hibernate-core-5.0.1.Final.jar:/home/neelakanta/.m2/repository/org/jboss/logging/jboss-logging/3.3.0.Final/jboss-logging-3.3.0.Final.jar:/home/neelakanta/.m2/repository/org/apache/geronimo/specs/geronimo-jta_1.1_spec/1.1.1/geronimo-jta_1.1_spec-1.1.1.jar:/home/neelakanta/.m2/repository/org/hibernate/javax/persistence/hibernate-jpa-2.1-api/1.0.0.Final/hibernate-jpa-2.1-api-1.0.0.Final.jar:/home/neelakanta/.m2/repository/org/javassist/javassist/3.18.1-GA/javassist-3.18.1-GA.jar:/home/neelakanta/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/home/neelakanta/.m2/repository/org/jboss/jandex/1.2.2.Final/jandex-1.2.2.Final.jar:/home/neelakanta/.m2/repository/dom4j/dom4j/1.6.1/dom4j-1.6.1.jar:/home/neelakanta/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.0.0.Final/hibernate-commons-annotations-5.0.0.Final.jar:/home/neelakanta/.m2/repository/org/hibernate/hibernate-validator/5.0.1.Final/hibernate-validator-5.0.1.Final.jar:/home/neelakanta/.m2/repository/javax/validation/validation-api/1.1.0.Final/validation-api-1.1.0.Final.jar:/home/neelakanta/.m2/repository/com/fasterxml/classmate/0.8.0/classmate-0.8.0.jar:/home/neelakanta/.m2/repository/org/hibernate/hibernate-annotations/3.3.0.ga/hibernate-annotations-3.3.0.ga.jar:/home/neelakanta/.m2/repository/org/hibernate/hibernate/3.2.1.ga/hibernate-3.2.1.ga.jar:/home/neelakanta/.m2/repository/net/sf/ehcache/ehcache/1.2.3/ehcache-1.2.3.jar:/home/neelakanta/.m2/repository/commons-logging/commons-logging/1.0.4/commons-logging-1.0.4.jar:/home/neelakanta/.m2/repository/asm/asm-attrs/1.5.3/asm-attrs-1.5.3.jar:/home/neelakanta/.m2/repository/cglib/cglib/2.1_3/cglib-2.1_3.jar:/home/neelakanta/.m2/repository/asm/asm/1.5.3/asm-1.5.3.jar:/home/neelakanta/.m2/repository/commons-collections/commons-collections/2.1.1/commons-collections-2.1.1.jar:/home/neelakanta/.m2/repository/javax/persistence/persistence-api/1.0/persistence-api-1.0.jar:/home/neelakanta/.m2/repository/org/hibernate/hibernate-commons-annotations/3.3.0.ga/hibernate-commons-annotations-3.3.0.ga.jar:/home/neelakanta/.m2/repository/javax/transaction/jta/1.1/jta-1.1.jar:/home/neelakanta/.m2/repository/mysql/mysql-connector-java/6.0.5/mysql-connector-java-6.0.5.jar:/home/neelakanta/.m2/repository/c3p0/c3p0/0.9.0.4/c3p0-0.9.0.4.jar:/home/neelakanta/.m2/repository/org/hibernate/hibernate-entitymanager/4.3.1.Final/hibernate-entitymanager-4.3.1.Final.jar:/home/neelakanta/.m2/repository/org/jboss/logging/jboss-logging-annotations/1.2.0.Beta1/jboss-logging-annotations-1.2.0.Beta1.jar:/home/neelakanta/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.0.0.Final/jboss-transaction-api_1.2_spec-1.0.0.Final.jar:/home/neelakanta/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=false, java.vm.specification.version=1.8, sun.arch.data.model=64, sun.java.command=com.book.store.BookStoreSystemClient, java.home=/home/neelakanta/SetupFiles/jdk1.8.0_45/jre, hibernate.connection.url=jdbc:mysql://localhost:3306/bookstore?createDatabaseIfNotExist=true&useSSL=false, hibernate.dialect=org.hibernate.dialect.MySQLDialect, user.language=en, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.X11.XToolkit, java.vm.info=mixed mode, java.version=1.8.0_45, java.ext.dirs=/home/neelakanta/SetupFiles/jdk1.8.0_45/jre/lib/ext:/usr/java/packages/lib/ext, sun.boot.class.path=/home/neelakanta/SetupFiles/jdk1.8.0_45/jre/lib/resources.jar:/home/neelakanta/SetupFiles/jdk1.8.0_45/jre/lib/rt.jar:/home/neelakanta/SetupFiles/jdk1.8.0_45/jre/lib/sunrsasign.jar:/home/neelakanta/SetupFiles/jdk1.8.0_45/jre/lib/jsse.jar:/home/neelakanta/SetupFiles/jdk1.8.0_45/jre/lib/jce.jar:/home/neelakanta/SetupFiles/jdk1.8.0_45/jre/lib/charsets.jar:/home/neelakanta/SetupFiles/jdk1.8.0_45/jre/lib/jfr.jar:/home/neelakanta/SetupFiles/jdk1.8.0_45/jre/classes, java.vendor=Oracle Corporation, file.separator=/, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, sun.desktop=gnome, sun.cpu.isalist=} 
[2017-09-19 14:54:12,270 - INFO - Version.java::27] - HV000001: Hibernate Validator 5.0.1.Final 
[2017-09-19 14:54:12,279 - DEBUG - DefaultTraversableResolver.java::106] - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver 
[2017-09-19 14:54:12,280 - DEBUG - DefaultTraversableResolver.java::117] - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. 
[2017-09-19 14:54:12,282 - DEBUG - ValidationXmlParser.java::88] - Trying to load META-INF/validation.xml for XML based Validator configuration. 
[2017-09-19 14:54:12,285 - DEBUG - ValidationXmlParser.java::95] - No META-INF/validation.xml found. Using annotation based configuration only. 
[2017-09-19 14:54:12,300 - DEBUG - ClassLoaderAccessImpl.java::55] - Not known whether passed class name [com.book.store.entity.Book] is safe 
[2017-09-19 14:54:12,300 - DEBUG - ClassLoaderAccessImpl.java::57] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.book.store.entity.Book 
[2017-09-19 14:54:12,333 - DEBUG - ClassLoaderAccessImpl.java::55] - Not known whether passed class name [com.book.store.entity.Purchase] is safe 
[2017-09-19 14:54:12,333 - DEBUG - ClassLoaderAccessImpl.java::57] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.book.store.entity.Purchase 
[2017-09-19 14:54:12,337 - DEBUG - JaccIntegrator.java::80] - Skipping JACC integration as it was not enabled 
[2017-09-19 14:54:12,356 - DEBUG - ClassLoaderAccessImpl.java::55] - Not known whether passed class name [com.book.store.entity.Book] is safe 
[2017-09-19 14:54:12,356 - DEBUG - ClassLoaderAccessImpl.java::57] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.book.store.entity.Book 
[2017-09-19 14:54:12,363 - DEBUG - ClassLoaderAccessImpl.java::55] - Not known whether passed class name [com.book.store.entity.Book] is safe 
[2017-09-19 14:54:12,363 - DEBUG - ClassLoaderAccessImpl.java::57] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.book.store.entity.Book 
[2017-09-19 14:54:12,399 - DEBUG - ClassLoaderAccessImpl.java::55] - Not known whether passed class name [com.book.store.entity.Purchase] is safe 
[2017-09-19 14:54:12,399 - DEBUG - ClassLoaderAccessImpl.java::57] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.book.store.entity.Purchase 
[2017-09-19 14:54:12,400 - DEBUG - ClassLoaderAccessImpl.java::55] - Not known whether passed class name [com.book.store.entity.Purchase] is safe 
[2017-09-19 14:54:12,400 - DEBUG - ClassLoaderAccessImpl.java::57] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.book.store.entity.Purchase 
[2017-09-19 14:54:12,408 - DEBUG - AbstractEntityPersister.java::3418] - Static SQL for entity: com.book.store.entity.Book 
[2017-09-19 14:54:12,408 - DEBUG - AbstractEntityPersister.java::3423] -  Version select: select Book_id from Book where Book_id =? 
[2017-09-19 14:54:12,408 - DEBUG - AbstractEntityPersister.java::3426] -  Snapshot select: select book_.Book_id, book_.Author_name as Author_n2_0_, book_.Book_name as Book_nam3_0_, book_.Category as Category4_0_, book_.price as price5_0_, book_.Publisher as Publishe6_0_ from Book book_ where book_.Book_id=? 
[2017-09-19 14:54:12,408 - DEBUG - DelegatingBasicLogger.java::394] -  Insert 0: insert into Book (Author_name, Book_name, Category, price, Publisher, Book_id) values (?, ?, ?, ?, ?, ?) 
[2017-09-19 14:54:12,408 - DEBUG - DelegatingBasicLogger.java::394] -  Update 0: update Book set Author_name=?, Book_name=?, Category=?, price=?, Publisher=? where Book_id=? 
[2017-09-19 14:54:12,408 - DEBUG - DelegatingBasicLogger.java::394] -  Delete 0: delete from Book where Book_id=? 
[2017-09-19 14:54:12,409 - DEBUG - AbstractEntityPersister.java::3434] -  Identity insert: insert into Book (Author_name, Book_name, Category, price, Publisher) values (?, ?, ?, ?, ?) 
[2017-09-19 14:54:12,422 - DEBUG - QuerySpacesImpl.java::174] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2c282004] 
[2017-09-19 14:54:12,423 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : authorName 
[2017-09-19 14:54:12,423 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : bookName 
[2017-09-19 14:54:12,423 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : categoryName 
[2017-09-19 14:54:12,423 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : price 
[2017-09-19 14:54:12,424 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : publisherName 
[2017-09-19 14:54:12,424 - DEBUG - FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java::76] - Building LoadPlan... 
[2017-09-19 14:54:12,432 - DEBUG - LoadQueryJoinAndFetchProcessor.java::95] - processing queryspace <gen:0> 
[2017-09-19 14:54:12,435 - DEBUG - LoadPlanTreePrinter.java::55] - LoadPlan(entity=com.book.store.entity.Book)
    - Returns
       - EntityReturnImpl(entity=com.book.store.entity.Book, querySpaceUid=<gen:0>, path=com.book.store.entity.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.book.store.entity.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {Book_id1_0_0_}
 
[2017-09-19 14:54:12,436 - DEBUG - EntityLoader.java::128] - Static select for entity com.book.store.entity.Book [NONE]: select book0_.Book_id as Book_id1_0_0_, book0_.Author_name as Author_n2_0_0_, book0_.Book_name as Book_nam3_0_0_, book0_.Category as Category4_0_0_, book0_.price as price5_0_0_, book0_.Publisher as Publishe6_0_0_ from Book book0_ where book0_.Book_id=? 
[2017-09-19 14:54:12,436 - DEBUG - QuerySpacesImpl.java::174] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@57dc9128] 
[2017-09-19 14:54:12,436 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : authorName 
[2017-09-19 14:54:12,436 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : bookName 
[2017-09-19 14:54:12,436 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : categoryName 
[2017-09-19 14:54:12,437 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : price 
[2017-09-19 14:54:12,437 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : publisherName 
[2017-09-19 14:54:12,437 - DEBUG - FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java::76] - Building LoadPlan... 
[2017-09-19 14:54:12,437 - DEBUG - LoadQueryJoinAndFetchProcessor.java::95] - processing queryspace <gen:0> 
[2017-09-19 14:54:12,437 - DEBUG - LoadPlanTreePrinter.java::55] - LoadPlan(entity=com.book.store.entity.Book)
    - Returns
       - EntityReturnImpl(entity=com.book.store.entity.Book, querySpaceUid=<gen:0>, path=com.book.store.entity.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.book.store.entity.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {Book_id1_0_0_}
 
[2017-09-19 14:54:12,437 - DEBUG - EntityLoader.java::128] - Static select for entity com.book.store.entity.Book [READ]: select book0_.Book_id as Book_id1_0_0_, book0_.Author_name as Author_n2_0_0_, book0_.Book_name as Book_nam3_0_0_, book0_.Category as Category4_0_0_, book0_.price as price5_0_0_, book0_.Publisher as Publishe6_0_0_ from Book book0_ where book0_.Book_id=? 
[2017-09-19 14:54:12,437 - DEBUG - QuerySpacesImpl.java::174] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@17ae98d7] 
[2017-09-19 14:54:12,438 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : authorName 
[2017-09-19 14:54:12,438 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : bookName 
[2017-09-19 14:54:12,438 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : categoryName 
[2017-09-19 14:54:12,438 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : price 
[2017-09-19 14:54:12,438 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : publisherName 
[2017-09-19 14:54:12,438 - DEBUG - FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java::76] - Building LoadPlan... 
[2017-09-19 14:54:12,438 - DEBUG - LoadQueryJoinAndFetchProcessor.java::95] - processing queryspace <gen:0> 
[2017-09-19 14:54:12,438 - DEBUG - LoadPlanTreePrinter.java::55] - LoadPlan(entity=com.book.store.entity.Book)
    - Returns
       - EntityReturnImpl(entity=com.book.store.entity.Book, querySpaceUid=<gen:0>, path=com.book.store.entity.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.book.store.entity.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {Book_id1_0_0_}
 
[2017-09-19 14:54:12,439 - DEBUG - EntityLoader.java::128] - Static select for entity com.book.store.entity.Book [UPGRADE]: select book0_.Book_id as Book_id1_0_0_, book0_.Author_name as Author_n2_0_0_, book0_.Book_name as Book_nam3_0_0_, book0_.Category as Category4_0_0_, book0_.price as price5_0_0_, book0_.Publisher as Publishe6_0_0_ from Book book0_ where book0_.Book_id=? for update 
[2017-09-19 14:54:12,439 - DEBUG - QuerySpacesImpl.java::174] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6ac4944a] 
[2017-09-19 14:54:12,439 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : authorName 
[2017-09-19 14:54:12,439 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : bookName 
[2017-09-19 14:54:12,439 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : categoryName 
[2017-09-19 14:54:12,439 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : price 
[2017-09-19 14:54:12,439 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : publisherName 
[2017-09-19 14:54:12,439 - DEBUG - FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java::76] - Building LoadPlan... 
[2017-09-19 14:54:12,440 - DEBUG - LoadQueryJoinAndFetchProcessor.java::95] - processing queryspace <gen:0> 
[2017-09-19 14:54:12,440 - DEBUG - LoadPlanTreePrinter.java::55] - LoadPlan(entity=com.book.store.entity.Book)
    - Returns
       - EntityReturnImpl(entity=com.book.store.entity.Book, querySpaceUid=<gen:0>, path=com.book.store.entity.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.book.store.entity.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {Book_id1_0_0_}
 
[2017-09-19 14:54:12,440 - DEBUG - EntityLoader.java::128] - Static select for entity com.book.store.entity.Book [UPGRADE_NOWAIT]: select book0_.Book_id as Book_id1_0_0_, book0_.Author_name as Author_n2_0_0_, book0_.Book_name as Book_nam3_0_0_, book0_.Category as Category4_0_0_, book0_.price as price5_0_0_, book0_.Publisher as Publishe6_0_0_ from Book book0_ where book0_.Book_id=? for update 
[2017-09-19 14:54:12,440 - DEBUG - QuerySpacesImpl.java::174] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@39fc6b2c] 
[2017-09-19 14:54:12,440 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : authorName 
[2017-09-19 14:54:12,440 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : bookName 
[2017-09-19 14:54:12,440 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : categoryName 
[2017-09-19 14:54:12,440 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : price 
[2017-09-19 14:54:12,440 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : publisherName 
[2017-09-19 14:54:12,441 - DEBUG - FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java::76] - Building LoadPlan... 
[2017-09-19 14:54:12,441 - DEBUG - LoadQueryJoinAndFetchProcessor.java::95] - processing queryspace <gen:0> 
[2017-09-19 14:54:12,441 - DEBUG - LoadPlanTreePrinter.java::55] - LoadPlan(entity=com.book.store.entity.Book)
    - Returns
       - EntityReturnImpl(entity=com.book.store.entity.Book, querySpaceUid=<gen:0>, path=com.book.store.entity.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.book.store.entity.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {Book_id1_0_0_}
 
[2017-09-19 14:54:12,441 - DEBUG - EntityLoader.java::128] - Static select for entity com.book.store.entity.Book [UPGRADE_SKIPLOCKED]: select book0_.Book_id as Book_id1_0_0_, book0_.Author_name as Author_n2_0_0_, book0_.Book_name as Book_nam3_0_0_, book0_.Category as Category4_0_0_, book0_.price as price5_0_0_, book0_.Publisher as Publishe6_0_0_ from Book book0_ where book0_.Book_id=? for update 
[2017-09-19 14:54:12,441 - DEBUG - QuerySpacesImpl.java::174] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3ee39da0] 
[2017-09-19 14:54:12,441 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : authorName 
[2017-09-19 14:54:12,442 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : bookName 
[2017-09-19 14:54:12,442 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : categoryName 
[2017-09-19 14:54:12,442 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : price 
[2017-09-19 14:54:12,442 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : publisherName 
[2017-09-19 14:54:12,442 - DEBUG - FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java::76] - Building LoadPlan... 
[2017-09-19 14:54:12,442 - DEBUG - LoadQueryJoinAndFetchProcessor.java::95] - processing queryspace <gen:0> 
[2017-09-19 14:54:12,442 - DEBUG - LoadPlanTreePrinter.java::55] - LoadPlan(entity=com.book.store.entity.Book)
    - Returns
       - EntityReturnImpl(entity=com.book.store.entity.Book, querySpaceUid=<gen:0>, path=com.book.store.entity.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.book.store.entity.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {Book_id1_0_0_}
 
[2017-09-19 14:54:12,442 - DEBUG - EntityLoader.java::128] - Static select for entity com.book.store.entity.Book [FORCE]: select book0_.Book_id as Book_id1_0_0_, book0_.Author_name as Author_n2_0_0_, book0_.Book_name as Book_nam3_0_0_, book0_.Category as Category4_0_0_, book0_.price as price5_0_0_, book0_.Publisher as Publishe6_0_0_ from Book book0_ where book0_.Book_id=? for update 
[2017-09-19 14:54:12,443 - DEBUG - QuerySpacesImpl.java::174] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7cc9ce8] 
[2017-09-19 14:54:12,443 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : authorName 
[2017-09-19 14:54:12,443 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : bookName 
[2017-09-19 14:54:12,443 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : categoryName 
[2017-09-19 14:54:12,443 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : price 
[2017-09-19 14:54:12,443 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : publisherName 
[2017-09-19 14:54:12,443 - DEBUG - FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java::76] - Building LoadPlan... 
[2017-09-19 14:54:12,443 - DEBUG - LoadQueryJoinAndFetchProcessor.java::95] - processing queryspace <gen:0> 
[2017-09-19 14:54:12,444 - DEBUG - LoadPlanTreePrinter.java::55] - LoadPlan(entity=com.book.store.entity.Book)
    - Returns
       - EntityReturnImpl(entity=com.book.store.entity.Book, querySpaceUid=<gen:0>, path=com.book.store.entity.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.book.store.entity.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {Book_id1_0_0_}
 
[2017-09-19 14:54:12,444 - DEBUG - EntityLoader.java::128] - Static select for entity com.book.store.entity.Book [PESSIMISTIC_READ]: select book0_.Book_id as Book_id1_0_0_, book0_.Author_name as Author_n2_0_0_, book0_.Book_name as Book_nam3_0_0_, book0_.Category as Category4_0_0_, book0_.price as price5_0_0_, book0_.Publisher as Publishe6_0_0_ from Book book0_ where book0_.Book_id=? lock in share mode 
[2017-09-19 14:54:12,444 - DEBUG - QuerySpacesImpl.java::174] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@c0b41d6] 
[2017-09-19 14:54:12,444 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : authorName 
[2017-09-19 14:54:12,444 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : bookName 
[2017-09-19 14:54:12,444 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : categoryName 
[2017-09-19 14:54:12,444 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : price 
[2017-09-19 14:54:12,444 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : publisherName 
[2017-09-19 14:54:12,444 - DEBUG - FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java::76] - Building LoadPlan... 
[2017-09-19 14:54:12,445 - DEBUG - LoadQueryJoinAndFetchProcessor.java::95] - processing queryspace <gen:0> 
[2017-09-19 14:54:12,445 - DEBUG - LoadPlanTreePrinter.java::55] - LoadPlan(entity=com.book.store.entity.Book)
    - Returns
       - EntityReturnImpl(entity=com.book.store.entity.Book, querySpaceUid=<gen:0>, path=com.book.store.entity.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.book.store.entity.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {Book_id1_0_0_}
 
[2017-09-19 14:54:12,445 - DEBUG - EntityLoader.java::128] - Static select for entity com.book.store.entity.Book [PESSIMISTIC_WRITE]: select book0_.Book_id as Book_id1_0_0_, book0_.Author_name as Author_n2_0_0_, book0_.Book_name as Book_nam3_0_0_, book0_.Category as Category4_0_0_, book0_.price as price5_0_0_, book0_.Publisher as Publishe6_0_0_ from Book book0_ where book0_.Book_id=? for update 
[2017-09-19 14:54:12,445 - DEBUG - QuerySpacesImpl.java::174] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2bffa76d] 
[2017-09-19 14:54:12,445 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : authorName 
[2017-09-19 14:54:12,445 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : bookName 
[2017-09-19 14:54:12,445 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : categoryName 
[2017-09-19 14:54:12,445 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : price 
[2017-09-19 14:54:12,445 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : publisherName 
[2017-09-19 14:54:12,445 - DEBUG - FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java::76] - Building LoadPlan... 
[2017-09-19 14:54:12,446 - DEBUG - LoadQueryJoinAndFetchProcessor.java::95] - processing queryspace <gen:0> 
[2017-09-19 14:54:12,446 - DEBUG - LoadPlanTreePrinter.java::55] - LoadPlan(entity=com.book.store.entity.Book)
    - Returns
       - EntityReturnImpl(entity=com.book.store.entity.Book, querySpaceUid=<gen:0>, path=com.book.store.entity.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.book.store.entity.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {Book_id1_0_0_}
 
[2017-09-19 14:54:12,446 - DEBUG - EntityLoader.java::128] - Static select for entity com.book.store.entity.Book [PESSIMISTIC_FORCE_INCREMENT]: select book0_.Book_id as Book_id1_0_0_, book0_.Author_name as Author_n2_0_0_, book0_.Book_name as Book_nam3_0_0_, book0_.Category as Category4_0_0_, book0_.price as price5_0_0_, book0_.Publisher as Publishe6_0_0_ from Book book0_ where book0_.Book_id=? for update 
[2017-09-19 14:54:12,446 - DEBUG - QuerySpacesImpl.java::174] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6d2260db] 
[2017-09-19 14:54:12,446 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : authorName 
[2017-09-19 14:54:12,446 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : bookName 
[2017-09-19 14:54:12,446 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : categoryName 
[2017-09-19 14:54:12,446 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : price 
[2017-09-19 14:54:12,446 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : publisherName 
[2017-09-19 14:54:12,447 - DEBUG - FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java::76] - Building LoadPlan... 
[2017-09-19 14:54:12,447 - DEBUG - LoadQueryJoinAndFetchProcessor.java::95] - processing queryspace <gen:0> 
[2017-09-19 14:54:12,447 - DEBUG - LoadPlanTreePrinter.java::55] - LoadPlan(entity=com.book.store.entity.Book)
    - Returns
       - EntityReturnImpl(entity=com.book.store.entity.Book, querySpaceUid=<gen:0>, path=com.book.store.entity.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.book.store.entity.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {Book_id1_0_0_}
 
[2017-09-19 14:54:12,447 - DEBUG - EntityLoader.java::128] - Static select for entity com.book.store.entity.Book [OPTIMISTIC]: select book0_.Book_id as Book_id1_0_0_, book0_.Author_name as Author_n2_0_0_, book0_.Book_name as Book_nam3_0_0_, book0_.Category as Category4_0_0_, book0_.price as price5_0_0_, book0_.Publisher as Publishe6_0_0_ from Book book0_ where book0_.Book_id=? 
[2017-09-19 14:54:12,447 - DEBUG - QuerySpacesImpl.java::174] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@49bf29c6] 
[2017-09-19 14:54:12,447 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : authorName 
[2017-09-19 14:54:12,447 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : bookName 
[2017-09-19 14:54:12,447 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : categoryName 
[2017-09-19 14:54:12,447 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : price 
[2017-09-19 14:54:12,448 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : publisherName 
[2017-09-19 14:54:12,448 - DEBUG - FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java::76] - Building LoadPlan... 
[2017-09-19 14:54:12,448 - DEBUG - LoadQueryJoinAndFetchProcessor.java::95] - processing queryspace <gen:0> 
[2017-09-19 14:54:12,448 - DEBUG - LoadPlanTreePrinter.java::55] - LoadPlan(entity=com.book.store.entity.Book)
    - Returns
       - EntityReturnImpl(entity=com.book.store.entity.Book, querySpaceUid=<gen:0>, path=com.book.store.entity.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.book.store.entity.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {Book_id1_0_0_}
 
[2017-09-19 14:54:12,448 - DEBUG - EntityLoader.java::128] - Static select for entity com.book.store.entity.Book [OPTIMISTIC_FORCE_INCREMENT]: select book0_.Book_id as Book_id1_0_0_, book0_.Author_name as Author_n2_0_0_, book0_.Book_name as Book_nam3_0_0_, book0_.Category as Category4_0_0_, book0_.price as price5_0_0_, book0_.Publisher as Publishe6_0_0_ from Book book0_ where book0_.Book_id=? 
[2017-09-19 14:54:12,459 - DEBUG - CascadeEntityLoader.java::38] - Static select for action ACTION_MERGE on entity com.book.store.entity.Book: select book0_.Book_id as Book_id1_0_0_, book0_.Author_name as Author_n2_0_0_, book0_.Book_name as Book_nam3_0_0_, book0_.Category as Category4_0_0_, book0_.price as price5_0_0_, book0_.Publisher as Publishe6_0_0_ from Book book0_ where book0_.Book_id=? 
[2017-09-19 14:54:12,459 - DEBUG - CascadeEntityLoader.java::38] - Static select for action ACTION_REFRESH on entity com.book.store.entity.Book: select book0_.Book_id as Book_id1_0_0_, book0_.Author_name as Author_n2_0_0_, book0_.Book_name as Book_nam3_0_0_, book0_.Category as Category4_0_0_, book0_.price as price5_0_0_, book0_.Publisher as Publishe6_0_0_ from Book book0_ where book0_.Book_id=? 
[2017-09-19 14:54:12,460 - DEBUG - AbstractEntityPersister.java::3418] - Static SQL for entity: com.book.store.entity.Purchase 
[2017-09-19 14:54:12,460 - DEBUG - AbstractEntityPersister.java::3423] -  Version select: select Purchase_no from Purchase where Purchase_no =? 
[2017-09-19 14:54:12,460 - DEBUG - AbstractEntityPersister.java::3426] -  Snapshot select: select purchase_.Purchase_no, purchase_.Book_id as Book_id2_1_, purchase_.Customer_name as Customer3_1_, purchase_.Customer_mobileno as Customer4_1_, purchase_.Purchase_date as Purchase5_1_, purchase_.Amount as Amount6_1_ from Purchase purchase_ where purchase_.Purchase_no=? 
[2017-09-19 14:54:12,460 - DEBUG - DelegatingBasicLogger.java::394] -  Insert 0: insert into Purchase (Book_id, Customer_name, Customer_mobileno, Purchase_date, Amount, Purchase_no) values (?, ?, ?, ?, ?, ?) 
[2017-09-19 14:54:12,460 - DEBUG - DelegatingBasicLogger.java::394] -  Update 0: update Purchase set Book_id=?, Customer_name=?, Customer_mobileno=?, Purchase_date=?, Amount=? where Purchase_no=? 
[2017-09-19 14:54:12,460 - DEBUG - DelegatingBasicLogger.java::394] -  Delete 0: delete from Purchase where Purchase_no=? 
[2017-09-19 14:54:12,460 - DEBUG - AbstractEntityPersister.java::3434] -  Identity insert: insert into Purchase (Book_id, Customer_name, Customer_mobileno, Purchase_date, Amount) values (?, ?, ?, ?, ?) 
[2017-09-19 14:54:12,460 - DEBUG - QuerySpacesImpl.java::174] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2237bada] 
[2017-09-19 14:54:12,460 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : bookId 
[2017-09-19 14:54:12,460 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : customerName 
[2017-09-19 14:54:12,460 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : customerMobileNumber 
[2017-09-19 14:54:12,461 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : purchaseDate 
[2017-09-19 14:54:12,461 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : amount 
[2017-09-19 14:54:12,461 - DEBUG - FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java::76] - Building LoadPlan... 
[2017-09-19 14:54:12,461 - DEBUG - LoadQueryJoinAndFetchProcessor.java::95] - processing queryspace <gen:0> 
[2017-09-19 14:54:12,461 - DEBUG - LoadPlanTreePrinter.java::55] - LoadPlan(entity=com.book.store.entity.Purchase)
    - Returns
       - EntityReturnImpl(entity=com.book.store.entity.Purchase, querySpaceUid=<gen:0>, path=com.book.store.entity.Purchase)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.book.store.entity.Purchase)
          - SQL table alias mapping - purchase0_
          - alias suffix - 0_
          - suffixed key columns - {Purchase1_1_0_}
 
[2017-09-19 14:54:12,461 - DEBUG - EntityLoader.java::128] - Static select for entity com.book.store.entity.Purchase [NONE]: select purchase0_.Purchase_no as Purchase1_1_0_, purchase0_.Book_id as Book_id2_1_0_, purchase0_.Customer_name as Customer3_1_0_, purchase0_.Customer_mobileno as Customer4_1_0_, purchase0_.Purchase_date as Purchase5_1_0_, purchase0_.Amount as Amount6_1_0_ from Purchase purchase0_ where purchase0_.Purchase_no=? 
[2017-09-19 14:54:12,462 - DEBUG - QuerySpacesImpl.java::174] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5710768a] 
[2017-09-19 14:54:12,462 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : bookId 
[2017-09-19 14:54:12,462 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : customerName 
[2017-09-19 14:54:12,462 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : customerMobileNumber 
[2017-09-19 14:54:12,462 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : purchaseDate 
[2017-09-19 14:54:12,462 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : amount 
[2017-09-19 14:54:12,462 - DEBUG - FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java::76] - Building LoadPlan... 
[2017-09-19 14:54:12,462 - DEBUG - LoadQueryJoinAndFetchProcessor.java::95] - processing queryspace <gen:0> 
[2017-09-19 14:54:12,462 - DEBUG - LoadPlanTreePrinter.java::55] - LoadPlan(entity=com.book.store.entity.Purchase)
    - Returns
       - EntityReturnImpl(entity=com.book.store.entity.Purchase, querySpaceUid=<gen:0>, path=com.book.store.entity.Purchase)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.book.store.entity.Purchase)
          - SQL table alias mapping - purchase0_
          - alias suffix - 0_
          - suffixed key columns - {Purchase1_1_0_}
 
[2017-09-19 14:54:12,463 - DEBUG - EntityLoader.java::128] - Static select for entity com.book.store.entity.Purchase [READ]: select purchase0_.Purchase_no as Purchase1_1_0_, purchase0_.Book_id as Book_id2_1_0_, purchase0_.Customer_name as Customer3_1_0_, purchase0_.Customer_mobileno as Customer4_1_0_, purchase0_.Purchase_date as Purchase5_1_0_, purchase0_.Amount as Amount6_1_0_ from Purchase purchase0_ where purchase0_.Purchase_no=? 
[2017-09-19 14:54:12,463 - DEBUG - QuerySpacesImpl.java::174] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6e0d4a8] 
[2017-09-19 14:54:12,463 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : bookId 
[2017-09-19 14:54:12,463 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : customerName 
[2017-09-19 14:54:12,463 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : customerMobileNumber 
[2017-09-19 14:54:12,463 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : purchaseDate 
[2017-09-19 14:54:12,463 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : amount 
[2017-09-19 14:54:12,463 - DEBUG - FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java::76] - Building LoadPlan... 
[2017-09-19 14:54:12,463 - DEBUG - LoadQueryJoinAndFetchProcessor.java::95] - processing queryspace <gen:0> 
[2017-09-19 14:54:12,464 - DEBUG - LoadPlanTreePrinter.java::55] - LoadPlan(entity=com.book.store.entity.Purchase)
    - Returns
       - EntityReturnImpl(entity=com.book.store.entity.Purchase, querySpaceUid=<gen:0>, path=com.book.store.entity.Purchase)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.book.store.entity.Purchase)
          - SQL table alias mapping - purchase0_
          - alias suffix - 0_
          - suffixed key columns - {Purchase1_1_0_}
 
[2017-09-19 14:54:12,464 - DEBUG - EntityLoader.java::128] - Static select for entity com.book.store.entity.Purchase [UPGRADE]: select purchase0_.Purchase_no as Purchase1_1_0_, purchase0_.Book_id as Book_id2_1_0_, purchase0_.Customer_name as Customer3_1_0_, purchase0_.Customer_mobileno as Customer4_1_0_, purchase0_.Purchase_date as Purchase5_1_0_, purchase0_.Amount as Amount6_1_0_ from Purchase purchase0_ where purchase0_.Purchase_no=? for update 
[2017-09-19 14:54:12,464 - DEBUG - QuerySpacesImpl.java::174] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@30272916] 
[2017-09-19 14:54:12,464 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : bookId 
[2017-09-19 14:54:12,464 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : customerName 
[2017-09-19 14:54:12,464 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : customerMobileNumber 
[2017-09-19 14:54:12,464 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : purchaseDate 
[2017-09-19 14:54:12,464 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : amount 
[2017-09-19 14:54:12,464 - DEBUG - FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java::76] - Building LoadPlan... 
[2017-09-19 14:54:12,464 - DEBUG - LoadQueryJoinAndFetchProcessor.java::95] - processing queryspace <gen:0> 
[2017-09-19 14:54:12,465 - DEBUG - LoadPlanTreePrinter.java::55] - LoadPlan(entity=com.book.store.entity.Purchase)
    - Returns
       - EntityReturnImpl(entity=com.book.store.entity.Purchase, querySpaceUid=<gen:0>, path=com.book.store.entity.Purchase)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.book.store.entity.Purchase)
          - SQL table alias mapping - purchase0_
          - alias suffix - 0_
          - suffixed key columns - {Purchase1_1_0_}
 
[2017-09-19 14:54:12,465 - DEBUG - EntityLoader.java::128] - Static select for entity com.book.store.entity.Purchase [UPGRADE_NOWAIT]: select purchase0_.Purchase_no as Purchase1_1_0_, purchase0_.Book_id as Book_id2_1_0_, purchase0_.Customer_name as Customer3_1_0_, purchase0_.Customer_mobileno as Customer4_1_0_, purchase0_.Purchase_date as Purchase5_1_0_, purchase0_.Amount as Amount6_1_0_ from Purchase purchase0_ where purchase0_.Purchase_no=? for update 
[2017-09-19 14:54:12,465 - DEBUG - QuerySpacesImpl.java::174] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5bf61e67] 
[2017-09-19 14:54:12,465 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : bookId 
[2017-09-19 14:54:12,465 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : customerName 
[2017-09-19 14:54:12,465 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : customerMobileNumber 
[2017-09-19 14:54:12,465 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : purchaseDate 
[2017-09-19 14:54:12,465 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : amount 
[2017-09-19 14:54:12,466 - DEBUG - FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java::76] - Building LoadPlan... 
[2017-09-19 14:54:12,466 - DEBUG - LoadQueryJoinAndFetchProcessor.java::95] - processing queryspace <gen:0> 
[2017-09-19 14:54:12,466 - DEBUG - LoadPlanTreePrinter.java::55] - LoadPlan(entity=com.book.store.entity.Purchase)
    - Returns
       - EntityReturnImpl(entity=com.book.store.entity.Purchase, querySpaceUid=<gen:0>, path=com.book.store.entity.Purchase)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.book.store.entity.Purchase)
          - SQL table alias mapping - purchase0_
          - alias suffix - 0_
          - suffixed key columns - {Purchase1_1_0_}
 
[2017-09-19 14:54:12,466 - DEBUG - EntityLoader.java::128] - Static select for entity com.book.store.entity.Purchase [UPGRADE_SKIPLOCKED]: select purchase0_.Purchase_no as Purchase1_1_0_, purchase0_.Book_id as Book_id2_1_0_, purchase0_.Customer_name as Customer3_1_0_, purchase0_.Customer_mobileno as Customer4_1_0_, purchase0_.Purchase_date as Purchase5_1_0_, purchase0_.Amount as Amount6_1_0_ from Purchase purchase0_ where purchase0_.Purchase_no=? for update 
[2017-09-19 14:54:12,466 - DEBUG - QuerySpacesImpl.java::174] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4e7095ac] 
[2017-09-19 14:54:12,466 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : bookId 
[2017-09-19 14:54:12,467 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : customerName 
[2017-09-19 14:54:12,467 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : customerMobileNumber 
[2017-09-19 14:54:12,467 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : purchaseDate 
[2017-09-19 14:54:12,467 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : amount 
[2017-09-19 14:54:12,467 - DEBUG - FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java::76] - Building LoadPlan... 
[2017-09-19 14:54:12,467 - DEBUG - LoadQueryJoinAndFetchProcessor.java::95] - processing queryspace <gen:0> 
[2017-09-19 14:54:12,467 - DEBUG - LoadPlanTreePrinter.java::55] - LoadPlan(entity=com.book.store.entity.Purchase)
    - Returns
       - EntityReturnImpl(entity=com.book.store.entity.Purchase, querySpaceUid=<gen:0>, path=com.book.store.entity.Purchase)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.book.store.entity.Purchase)
          - SQL table alias mapping - purchase0_
          - alias suffix - 0_
          - suffixed key columns - {Purchase1_1_0_}
 
[2017-09-19 14:54:12,467 - DEBUG - EntityLoader.java::128] - Static select for entity com.book.store.entity.Purchase [FORCE]: select purchase0_.Purchase_no as Purchase1_1_0_, purchase0_.Book_id as Book_id2_1_0_, purchase0_.Customer_name as Customer3_1_0_, purchase0_.Customer_mobileno as Customer4_1_0_, purchase0_.Purchase_date as Purchase5_1_0_, purchase0_.Amount as Amount6_1_0_ from Purchase purchase0_ where purchase0_.Purchase_no=? for update 
[2017-09-19 14:54:12,467 - DEBUG - QuerySpacesImpl.java::174] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@29b732a2] 
[2017-09-19 14:54:12,468 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : bookId 
[2017-09-19 14:54:12,468 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : customerName 
[2017-09-19 14:54:12,468 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : customerMobileNumber 
[2017-09-19 14:54:12,468 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : purchaseDate 
[2017-09-19 14:54:12,468 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : amount 
[2017-09-19 14:54:12,468 - DEBUG - FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java::76] - Building LoadPlan... 
[2017-09-19 14:54:12,468 - DEBUG - LoadQueryJoinAndFetchProcessor.java::95] - processing queryspace <gen:0> 
[2017-09-19 14:54:12,468 - DEBUG - LoadPlanTreePrinter.java::55] - LoadPlan(entity=com.book.store.entity.Purchase)
    - Returns
       - EntityReturnImpl(entity=com.book.store.entity.Purchase, querySpaceUid=<gen:0>, path=com.book.store.entity.Purchase)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.book.store.entity.Purchase)
          - SQL table alias mapping - purchase0_
          - alias suffix - 0_
          - suffixed key columns - {Purchase1_1_0_}
 
[2017-09-19 14:54:12,468 - DEBUG - EntityLoader.java::128] - Static select for entity com.book.store.entity.Purchase [PESSIMISTIC_READ]: select purchase0_.Purchase_no as Purchase1_1_0_, purchase0_.Book_id as Book_id2_1_0_, purchase0_.Customer_name as Customer3_1_0_, purchase0_.Customer_mobileno as Customer4_1_0_, purchase0_.Purchase_date as Purchase5_1_0_, purchase0_.Amount as Amount6_1_0_ from Purchase purchase0_ where purchase0_.Purchase_no=? lock in share mode 
[2017-09-19 14:54:12,468 - DEBUG - QuerySpacesImpl.java::174] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@51671b08] 
[2017-09-19 14:54:12,469 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : bookId 
[2017-09-19 14:54:12,469 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : customerName 
[2017-09-19 14:54:12,469 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : customerMobileNumber 
[2017-09-19 14:54:12,469 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : purchaseDate 
[2017-09-19 14:54:12,469 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : amount 
[2017-09-19 14:54:12,469 - DEBUG - FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java::76] - Building LoadPlan... 
[2017-09-19 14:54:12,469 - DEBUG - LoadQueryJoinAndFetchProcessor.java::95] - processing queryspace <gen:0> 
[2017-09-19 14:54:12,469 - DEBUG - LoadPlanTreePrinter.java::55] - LoadPlan(entity=com.book.store.entity.Purchase)
    - Returns
       - EntityReturnImpl(entity=com.book.store.entity.Purchase, querySpaceUid=<gen:0>, path=com.book.store.entity.Purchase)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.book.store.entity.Purchase)
          - SQL table alias mapping - purchase0_
          - alias suffix - 0_
          - suffixed key columns - {Purchase1_1_0_}
 
[2017-09-19 14:54:12,469 - DEBUG - EntityLoader.java::128] - Static select for entity com.book.store.entity.Purchase [PESSIMISTIC_WRITE]: select purchase0_.Purchase_no as Purchase1_1_0_, purchase0_.Book_id as Book_id2_1_0_, purchase0_.Customer_name as Customer3_1_0_, purchase0_.Customer_mobileno as Customer4_1_0_, purchase0_.Purchase_date as Purchase5_1_0_, purchase0_.Amount as Amount6_1_0_ from Purchase purchase0_ where purchase0_.Purchase_no=? for update 
[2017-09-19 14:54:12,470 - DEBUG - QuerySpacesImpl.java::174] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1162410a] 
[2017-09-19 14:54:12,470 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : bookId 
[2017-09-19 14:54:12,470 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : customerName 
[2017-09-19 14:54:12,470 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : customerMobileNumber 
[2017-09-19 14:54:12,470 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : purchaseDate 
[2017-09-19 14:54:12,470 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : amount 
[2017-09-19 14:54:12,470 - DEBUG - FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java::76] - Building LoadPlan... 
[2017-09-19 14:54:12,470 - DEBUG - LoadQueryJoinAndFetchProcessor.java::95] - processing queryspace <gen:0> 
[2017-09-19 14:54:12,470 - DEBUG - LoadPlanTreePrinter.java::55] - LoadPlan(entity=com.book.store.entity.Purchase)
    - Returns
       - EntityReturnImpl(entity=com.book.store.entity.Purchase, querySpaceUid=<gen:0>, path=com.book.store.entity.Purchase)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.book.store.entity.Purchase)
          - SQL table alias mapping - purchase0_
          - alias suffix - 0_
          - suffixed key columns - {Purchase1_1_0_}
 
[2017-09-19 14:54:12,471 - DEBUG - EntityLoader.java::128] - Static select for entity com.book.store.entity.Purchase [PESSIMISTIC_FORCE_INCREMENT]: select purchase0_.Purchase_no as Purchase1_1_0_, purchase0_.Book_id as Book_id2_1_0_, purchase0_.Customer_name as Customer3_1_0_, purchase0_.Customer_mobileno as Customer4_1_0_, purchase0_.Purchase_date as Purchase5_1_0_, purchase0_.Amount as Amount6_1_0_ from Purchase purchase0_ where purchase0_.Purchase_no=? for update 
[2017-09-19 14:54:12,471 - DEBUG - QuerySpacesImpl.java::174] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@62df0ff3] 
[2017-09-19 14:54:12,471 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : bookId 
[2017-09-19 14:54:12,471 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : customerName 
[2017-09-19 14:54:12,471 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : customerMobileNumber 
[2017-09-19 14:54:12,471 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : purchaseDate 
[2017-09-19 14:54:12,471 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : amount 
[2017-09-19 14:54:12,471 - DEBUG - FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java::76] - Building LoadPlan... 
[2017-09-19 14:54:12,471 - DEBUG - LoadQueryJoinAndFetchProcessor.java::95] - processing queryspace <gen:0> 
[2017-09-19 14:54:12,472 - DEBUG - LoadPlanTreePrinter.java::55] - LoadPlan(entity=com.book.store.entity.Purchase)
    - Returns
       - EntityReturnImpl(entity=com.book.store.entity.Purchase, querySpaceUid=<gen:0>, path=com.book.store.entity.Purchase)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.book.store.entity.Purchase)
          - SQL table alias mapping - purchase0_
          - alias suffix - 0_
          - suffixed key columns - {Purchase1_1_0_}
 
[2017-09-19 14:54:12,472 - DEBUG - EntityLoader.java::128] - Static select for entity com.book.store.entity.Purchase [OPTIMISTIC]: select purchase0_.Purchase_no as Purchase1_1_0_, purchase0_.Book_id as Book_id2_1_0_, purchase0_.Customer_name as Customer3_1_0_, purchase0_.Customer_mobileno as Customer4_1_0_, purchase0_.Purchase_date as Purchase5_1_0_, purchase0_.Amount as Amount6_1_0_ from Purchase purchase0_ where purchase0_.Purchase_no=? 
[2017-09-19 14:54:12,472 - DEBUG - QuerySpacesImpl.java::174] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@62e8f862] 
[2017-09-19 14:54:12,472 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : bookId 
[2017-09-19 14:54:12,472 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : customerName 
[2017-09-19 14:54:12,472 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : customerMobileNumber 
[2017-09-19 14:54:12,472 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : purchaseDate 
[2017-09-19 14:54:12,472 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : amount 
[2017-09-19 14:54:12,472 - DEBUG - FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java::76] - Building LoadPlan... 
[2017-09-19 14:54:12,472 - DEBUG - LoadQueryJoinAndFetchProcessor.java::95] - processing queryspace <gen:0> 
[2017-09-19 14:54:12,473 - DEBUG - LoadPlanTreePrinter.java::55] - LoadPlan(entity=com.book.store.entity.Purchase)
    - Returns
       - EntityReturnImpl(entity=com.book.store.entity.Purchase, querySpaceUid=<gen:0>, path=com.book.store.entity.Purchase)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.book.store.entity.Purchase)
          - SQL table alias mapping - purchase0_
          - alias suffix - 0_
          - suffixed key columns - {Purchase1_1_0_}
 
[2017-09-19 14:54:12,473 - DEBUG - EntityLoader.java::128] - Static select for entity com.book.store.entity.Purchase [OPTIMISTIC_FORCE_INCREMENT]: select purchase0_.Purchase_no as Purchase1_1_0_, purchase0_.Book_id as Book_id2_1_0_, purchase0_.Customer_name as Customer3_1_0_, purchase0_.Customer_mobileno as Customer4_1_0_, purchase0_.Purchase_date as Purchase5_1_0_, purchase0_.Amount as Amount6_1_0_ from Purchase purchase0_ where purchase0_.Purchase_no=? 
[2017-09-19 14:54:12,473 - DEBUG - CascadeEntityLoader.java::38] - Static select for action ACTION_MERGE on entity com.book.store.entity.Purchase: select purchase0_.Purchase_no as Purchase1_1_0_, purchase0_.Book_id as Book_id2_1_0_, purchase0_.Customer_name as Customer3_1_0_, purchase0_.Customer_mobileno as Customer4_1_0_, purchase0_.Purchase_date as Purchase5_1_0_, purchase0_.Amount as Amount6_1_0_ from Purchase purchase0_ where purchase0_.Purchase_no=? 
[2017-09-19 14:54:12,473 - DEBUG - CascadeEntityLoader.java::38] - Static select for action ACTION_REFRESH on entity com.book.store.entity.Purchase: select purchase0_.Purchase_no as Purchase1_1_0_, purchase0_.Book_id as Book_id2_1_0_, purchase0_.Customer_name as Customer3_1_0_, purchase0_.Customer_mobileno as Customer4_1_0_, purchase0_.Purchase_date as Purchase5_1_0_, purchase0_.Amount as Amount6_1_0_ from Purchase purchase0_ where purchase0_.Purchase_no=? 
[2017-09-19 14:54:12,473 - DEBUG - SessionFactoryImpl.java::462] - Instantiated session factory 
[2017-09-19 14:54:12,475 - INFO - SchemaUpdate.java::101] - HHH000228: Running hbm2ddl schema update 
[2017-09-19 14:54:12,486 - INFO - InformationExtractorJdbcDatabaseMetaDataImpl.java::334] - HHH000262: Table not found: Book 
[2017-09-19 14:54:12,491 - INFO - InformationExtractorJdbcDatabaseMetaDataImpl.java::334] - HHH000262: Table not found: Book 
[2017-09-19 14:54:12,562 - INFO - InformationExtractorJdbcDatabaseMetaDataImpl.java::334] - HHH000262: Table not found: Purchase 
[2017-09-19 14:54:12,568 - INFO - InformationExtractorJdbcDatabaseMetaDataImpl.java::334] - HHH000262: Table not found: Purchase 
[2017-09-19 14:54:12,623 - DEBUG - JtaPlatformInitiator.java::42] - No JtaPlatform was specified, checking resolver 
[2017-09-19 14:54:12,624 - DEBUG - JtaPlatformResolverInitiator.java::33] - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver] 
[2017-09-19 14:54:12,627 - DEBUG - StandardJtaPlatformResolver.java::101] - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform] 
[2017-09-19 14:54:12,629 - DEBUG - NamedQueryRepository.java::149] - Checking 0 named HQL queries 
[2017-09-19 14:54:12,629 - DEBUG - NamedQueryRepository.java::165] - Checking 0 named SQL queries 
[2017-09-19 14:54:12,631 - DEBUG - SessionFactoryRegistry.java::52] - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@4fbb001b 
[2017-09-19 14:54:12,633 - DEBUG - SessionFactoryRegistry.java::74] - Registering SessionFactory: c1228bbc-dc8b-4d9b-aa22-f0f01fee2288 (<unnamed>) 
[2017-09-19 14:54:12,633 - DEBUG - SessionFactoryRegistry.java::81] - Not binding SessionFactory to JNDI, no JNDI name configured 
[2017-09-19 14:54:12,662 - DEBUG - StatisticsInitiator.java::82] - Statistics initialized [enabled=false] 
[2017-09-19 14:54:12,675 - DEBUG - SqlStatementLogger.java::92] - select count(*) as y0_ from Book this_ 
[2017-09-19 14:54:12,684 - DEBUG - DelegatingBasicLogger.java::384] - Result set row: 0 
[2017-09-19 14:54:12,684 - DEBUG - Loader.java::1514] - Result row:  
[2017-09-19 14:54:12,688 - DEBUG - TransactionImpl.java::51] - begin 
[2017-09-19 14:54:12,696 - DEBUG - ActionQueue.java::178] - Executing identity-insert immediately 
[2017-09-19 14:54:12,706 - DEBUG - SqlStatementLogger.java::92] - insert into Book (Author_name, Book_name, Category, price, Publisher) values (?, ?, ?, ?, ?) 
[2017-09-19 14:54:12,750 - DEBUG - IdentifierGeneratorHelper.java::74] - Natively generated identity: 1 
[2017-09-19 14:54:12,750 - DEBUG - ResourceRegistryStandardImpl.java::104] - HHH000387: ResultSet's statement was not registered 
[2017-09-19 14:54:12,752 - DEBUG - ActionQueue.java::178] - Executing identity-insert immediately 
[2017-09-19 14:54:12,753 - DEBUG - SqlStatementLogger.java::92] - insert into Book (Author_name, Book_name, Category, price, Publisher) values (?, ?, ?, ?, ?) 
[2017-09-19 14:54:12,754 - DEBUG - IdentifierGeneratorHelper.java::74] - Natively generated identity: 2 
[2017-09-19 14:54:12,754 - DEBUG - ResourceRegistryStandardImpl.java::104] - HHH000387: ResultSet's statement was not registered 
[2017-09-19 14:54:12,754 - DEBUG - ActionQueue.java::178] - Executing identity-insert immediately 
[2017-09-19 14:54:12,754 - DEBUG - SqlStatementLogger.java::92] - insert into Book (Author_name, Book_name, Category, price, Publisher) values (?, ?, ?, ?, ?) 
[2017-09-19 14:54:12,755 - DEBUG - IdentifierGeneratorHelper.java::74] - Natively generated identity: 3 
[2017-09-19 14:54:12,755 - DEBUG - ResourceRegistryStandardImpl.java::104] - HHH000387: ResultSet's statement was not registered 
[2017-09-19 14:54:12,756 - DEBUG - ActionQueue.java::178] - Executing identity-insert immediately 
[2017-09-19 14:54:12,756 - DEBUG - SqlStatementLogger.java::92] - insert into Book (Author_name, Book_name, Category, price, Publisher) values (?, ?, ?, ?, ?) 
[2017-09-19 14:54:12,757 - DEBUG - IdentifierGeneratorHelper.java::74] - Natively generated identity: 4 
[2017-09-19 14:54:12,757 - DEBUG - ResourceRegistryStandardImpl.java::104] - HHH000387: ResultSet's statement was not registered 
[2017-09-19 14:54:12,757 - DEBUG - ActionQueue.java::178] - Executing identity-insert immediately 
[2017-09-19 14:54:12,757 - DEBUG - SqlStatementLogger.java::92] - insert into Book (Author_name, Book_name, Category, price, Publisher) values (?, ?, ?, ?, ?) 
[2017-09-19 14:54:12,758 - DEBUG - IdentifierGeneratorHelper.java::74] - Natively generated identity: 5 
[2017-09-19 14:54:12,758 - DEBUG - ResourceRegistryStandardImpl.java::104] - HHH000387: ResultSet's statement was not registered 
[2017-09-19 14:54:12,759 - DEBUG - ActionQueue.java::178] - Executing identity-insert immediately 
[2017-09-19 14:54:12,759 - DEBUG - SqlStatementLogger.java::92] - insert into Book (Author_name, Book_name, Category, price, Publisher) values (?, ?, ?, ?, ?) 
[2017-09-19 14:54:12,760 - DEBUG - IdentifierGeneratorHelper.java::74] - Natively generated identity: 6 
[2017-09-19 14:54:12,760 - DEBUG - ResourceRegistryStandardImpl.java::104] - HHH000387: ResultSet's statement was not registered 
[2017-09-19 14:54:12,760 - DEBUG - TransactionImpl.java::62] - committing 
[2017-09-19 14:54:12,761 - DEBUG - AbstractFlushingEventListener.java::132] - Processing flush-time cascades 
[2017-09-19 14:54:12,761 - DEBUG - AbstractFlushingEventListener.java::174] - Dirty checking collections 
[2017-09-19 14:54:12,763 - DEBUG - AbstractFlushingEventListener.java::106] - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects 
[2017-09-19 14:54:12,763 - DEBUG - AbstractFlushingEventListener.java::113] - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections 
[2017-09-19 14:54:12,764 - DEBUG - EntityPrinter.java::102] - Listing entities: 
[2017-09-19 14:54:12,764 - DEBUG - EntityPrinter.java::109] - com.book.store.entity.Book{authorName=Chetan Bhagat, price=95, publisherName=Tata, bookName=Half Girlfriend, categoryName=General, bookId=3} 
[2017-09-19 14:54:12,764 - DEBUG - EntityPrinter.java::109] - com.book.store.entity.Book{authorName=A.P.J. Abdul Kalam, price=200, publisherName=Swapna, bookName=Forge your Future, categoryName=General, bookId=4} 
[2017-09-19 14:54:12,764 - DEBUG - EntityPrinter.java::109] - com.book.store.entity.Book{authorName=John Green, price=159, publisherName=Pai, bookName=The Fault in our Stars, categoryName=Kids, bookId=5} 
[2017-09-19 14:54:12,764 - DEBUG - EntityPrinter.java::109] - com.book.store.entity.Book{authorName=Randall Munroe, price=420, publisherName=Pai, bookName=My Little Book, categoryName=Kids, bookId=6} 
[2017-09-19 14:54:12,764 - DEBUG - EntityPrinter.java::109] - com.book.store.entity.Book{authorName=Herbert Schildt, price=615, publisherName=Tata, bookName=Java: The Complete Reference, categoryName=Technology, bookId=1} 
[2017-09-19 14:54:12,765 - DEBUG - EntityPrinter.java::109] - com.book.store.entity.Book{authorName=Singh Y. Kirani, price=232, publisherName=Subhash, bookName=Matlab Programming, categoryName=Technology, bookId=2} 
[2017-09-19 14:54:41,994 - DEBUG - DriverManagerConnectionProviderImpl.java::103] - Connection pool now considered primed; min-size will be maintained 
[2017-09-19 14:57:30,877 - DEBUG - CoreLogging.java::28] - Logging Provider: org.jboss.logging.Log4jLoggerProvider 
[2017-09-19 14:57:30,885 - DEBUG - IntegratorServiceImpl.java::46] - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator]. 
[2017-09-19 14:57:30,888 - DEBUG - IntegratorServiceImpl.java::46] - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator]. 
[2017-09-19 14:57:30,890 - DEBUG - IntegratorServiceImpl.java::46] - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator]. 
[2017-09-19 14:57:30,983 - INFO - Version.java::37] - HHH000412: Hibernate Core {5.0.1.Final} 
[2017-09-19 14:57:30,984 - INFO - Environment.java::213] - HHH000206: hibernate.properties not found 
[2017-09-19 14:57:30,985 - INFO - Environment.java::317] - HHH000021: Bytecode provider name : javassist 
[2017-09-19 14:57:31,008 - DEBUG - LocalXmlResourceResolver.java::57] - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd createDatabaseIfNotExist=true] 
[2017-09-19 14:57:31,010 - WARN - LocalXmlResourceResolver.java::91] - HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-configuration. Use namespace http://www.hibernate.org/dtd/hibernate-configuration instead.  Support for obsolete DTD/XSD namespaces may be removed at any time. 
[2017-09-19 14:57:31,010 - DEBUG - LocalXmlResourceResolver.java::95] - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/ 
[2017-09-19 14:57:31,014 - DEBUG - JaxbCfgProcessor.java::116] - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information 
[2017-09-19 14:57:31,142 - DEBUG - Configuration.java::722] - Building session factory using internal StandardServiceRegistryBuilder 
[2017-09-19 14:57:31,147 - DEBUG - ServiceBinding.java::68] - Overriding existing service binding [org.hibernate.secure.spi.JaccService] 
[2017-09-19 14:57:31,147 - DEBUG - Configuration.java::653] - Building session factory using provided StandardServiceRegistry 
[2017-09-19 14:57:31,159 - DEBUG - RegionFactoryInitiator.java::88] - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory 
[2017-09-19 14:57:31,165 - INFO - JavaReflectionManager.java::66] - HCANN000001: Hibernate Commons Annotations {5.0.0.Final} 
[2017-09-19 14:57:31,182 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration boolean -> org.hibernate.type.BooleanType@5f3a4b84 
[2017-09-19 14:57:31,182 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration boolean -> org.hibernate.type.BooleanType@5f3a4b84 
[2017-09-19 14:57:31,182 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@5f3a4b84 
[2017-09-19 14:57:31,183 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@7b69c6ba 
[2017-09-19 14:57:31,184 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration true_false -> org.hibernate.type.TrueFalseType@50d0686 
[2017-09-19 14:57:31,185 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration yes_no -> org.hibernate.type.YesNoType@77ec78b9 
[2017-09-19 14:57:31,186 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration byte -> org.hibernate.type.ByteType@4d3167f4 
[2017-09-19 14:57:31,186 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration byte -> org.hibernate.type.ByteType@4d3167f4 
[2017-09-19 14:57:31,186 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@4d3167f4 
[2017-09-19 14:57:31,187 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration character -> org.hibernate.type.CharacterType@eafc191 
[2017-09-19 14:57:31,187 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration char -> org.hibernate.type.CharacterType@eafc191 
[2017-09-19 14:57:31,187 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@eafc191 
[2017-09-19 14:57:31,188 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration short -> org.hibernate.type.ShortType@491cc5c9 
[2017-09-19 14:57:31,188 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration short -> org.hibernate.type.ShortType@491cc5c9 
[2017-09-19 14:57:31,188 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@491cc5c9 
[2017-09-19 14:57:31,189 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration integer -> org.hibernate.type.IntegerType@757942a1 
[2017-09-19 14:57:31,189 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration int -> org.hibernate.type.IntegerType@757942a1 
[2017-09-19 14:57:31,189 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@757942a1 
[2017-09-19 14:57:31,190 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration long -> org.hibernate.type.LongType@6950e31 
[2017-09-19 14:57:31,191 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration long -> org.hibernate.type.LongType@6950e31 
[2017-09-19 14:57:31,191 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.lang.Long -> org.hibernate.type.LongType@6950e31 
[2017-09-19 14:57:31,192 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration float -> org.hibernate.type.FloatType@33723e30 
[2017-09-19 14:57:31,192 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration float -> org.hibernate.type.FloatType@33723e30 
[2017-09-19 14:57:31,192 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@33723e30 
[2017-09-19 14:57:31,193 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration double -> org.hibernate.type.DoubleType@74a10858 
[2017-09-19 14:57:31,193 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration double -> org.hibernate.type.DoubleType@74a10858 
[2017-09-19 14:57:31,194 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@74a10858 
[2017-09-19 14:57:31,195 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@7403c468 
[2017-09-19 14:57:31,195 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@7403c468 
[2017-09-19 14:57:31,196 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@2a70a3d8 
[2017-09-19 14:57:31,196 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@2a70a3d8 
[2017-09-19 14:57:31,197 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration string -> org.hibernate.type.StringType@78ac1102 
[2017-09-19 14:57:31,197 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.lang.String -> org.hibernate.type.StringType@78ac1102 
[2017-09-19 14:57:31,197 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@7e0e6aa2 
[2017-09-19 14:57:31,198 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@782663d3 
[2017-09-19 14:57:31,199 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration url -> org.hibernate.type.UrlType@7276c8cd 
[2017-09-19 14:57:31,199 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.net.URL -> org.hibernate.type.UrlType@7276c8cd 
[2017-09-19 14:57:31,200 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration date -> org.hibernate.type.DateType@43a0cee9 
[2017-09-19 14:57:31,200 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.sql.Date -> org.hibernate.type.DateType@43a0cee9 
[2017-09-19 14:57:31,201 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration time -> org.hibernate.type.TimeType@67b467e9 
[2017-09-19 14:57:31,202 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@67b467e9 
[2017-09-19 14:57:31,203 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration timestamp -> org.hibernate.type.TimestampType@646007f4 
[2017-09-19 14:57:31,203 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@646007f4 
[2017-09-19 14:57:31,203 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@646007f4 
[2017-09-19 14:57:31,204 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@306279ee 
[2017-09-19 14:57:31,205 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration calendar -> org.hibernate.type.CalendarType@4c762604 
[2017-09-19 14:57:31,205 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4c762604 
[2017-09-19 14:57:31,205 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4c762604 
[2017-09-19 14:57:31,206 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@704921a5 
[2017-09-19 14:57:31,206 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration locale -> org.hibernate.type.LocaleType@fcd6521 
[2017-09-19 14:57:31,206 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@fcd6521 
[2017-09-19 14:57:31,207 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration currency -> org.hibernate.type.CurrencyType@4fcd19b3 
[2017-09-19 14:57:31,207 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@4fcd19b3 
[2017-09-19 14:57:31,208 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration timezone -> org.hibernate.type.TimeZoneType@b3d7190 
[2017-09-19 14:57:31,208 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@b3d7190 
[2017-09-19 14:57:31,208 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration class -> org.hibernate.type.ClassType@6dde5c8c 
[2017-09-19 14:57:31,209 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@6dde5c8c 
[2017-09-19 14:57:31,210 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@103f852 
[2017-09-19 14:57:31,210 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@103f852 
[2017-09-19 14:57:31,210 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4ae82894 
[2017-09-19 14:57:31,211 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration binary -> org.hibernate.type.BinaryType@7e9a5fbe 
[2017-09-19 14:57:31,211 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration byte[] -> org.hibernate.type.BinaryType@7e9a5fbe 
[2017-09-19 14:57:31,211 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration [B -> org.hibernate.type.BinaryType@7e9a5fbe 
[2017-09-19 14:57:31,212 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@61ca2dfa 
[2017-09-19 14:57:31,212 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@61ca2dfa 
[2017-09-19 14:57:31,212 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@61ca2dfa 
[2017-09-19 14:57:31,212 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration image -> org.hibernate.type.ImageType@2f8f5f62 
[2017-09-19 14:57:31,213 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration characters -> org.hibernate.type.CharArrayType@6483f5ae 
[2017-09-19 14:57:31,213 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration char[] -> org.hibernate.type.CharArrayType@6483f5ae 
[2017-09-19 14:57:31,213 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration [C -> org.hibernate.type.CharArrayType@6483f5ae 
[2017-09-19 14:57:31,214 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@15bfd87 
[2017-09-19 14:57:31,214 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@15bfd87 
[2017-09-19 14:57:31,214 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@15bfd87 
[2017-09-19 14:57:31,214 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration text -> org.hibernate.type.TextType@44f75083 
[2017-09-19 14:57:31,215 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration ntext -> org.hibernate.type.NTextType@27fe3806 
[2017-09-19 14:57:31,218 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration blob -> org.hibernate.type.BlobType@530612ba 
[2017-09-19 14:57:31,218 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@530612ba 
[2017-09-19 14:57:31,218 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@3bd94634 
[2017-09-19 14:57:31,221 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration clob -> org.hibernate.type.ClobType@679b62af 
[2017-09-19 14:57:31,221 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@679b62af 
[2017-09-19 14:57:31,223 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration nclob -> org.hibernate.type.NClobType@71a794e5 
[2017-09-19 14:57:31,223 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@71a794e5 
[2017-09-19 14:57:31,223 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4df828d7 
[2017-09-19 14:57:31,224 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@11e21d0e 
[2017-09-19 14:57:31,224 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration serializable -> org.hibernate.type.SerializableType@23bb8443 
[2017-09-19 14:57:31,226 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration object -> org.hibernate.type.ObjectType@12405818 
[2017-09-19 14:57:31,226 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@12405818 
[2017-09-19 14:57:31,226 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@6b67034 
[2017-09-19 14:57:31,226 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@16267862 
[2017-09-19 14:57:31,227 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@453da22c 
[2017-09-19 14:57:31,227 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@71248c21 
[2017-09-19 14:57:31,227 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@442675e1 
[2017-09-19 14:57:31,227 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@6166e06f 
[2017-09-19 14:57:31,227 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@49e202ad 
[2017-09-19 14:57:31,227 - DEBUG - BasicTypeRegistry.java::135] - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@1c72da34 
[2017-09-19 14:57:31,233 - WARN - DriverManagerConnectionProviderImpl.java::76] - HHH000402: Using Hibernate built-in connection pool (not for production use!) 
[2017-09-19 14:57:31,236 - INFO - DriverManagerConnectionProviderImpl.java::149] - HHH000401: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/bookstore?createDatabaseIfNotExist=true&useSSL=false] 
[2017-09-19 14:57:31,237 - INFO - DriverManagerConnectionProviderImpl.java::155] - HHH000046: Connection properties: {user=neelakanta, password=Welcome@123, autocommit=true} 
[2017-09-19 14:57:31,237 - INFO - DriverManagerConnectionProviderImpl.java::163] - HHH000006: Autocommit mode: true 
[2017-09-19 14:57:31,238 - INFO - DriverManagerConnectionProviderImpl.java::85] - HHH000115: Hibernate connection pool size: 20 (min=1) 
[2017-09-19 14:57:31,238 - DEBUG - DelegatingBasicLogger.java::384] - Initializing Connection pool with 1 Connections 
[2017-09-19 14:57:31,446 - DEBUG - JdbcEnvironmentInitiator.java::72] - Database ->
       name : MySQL
    version : 5.5.55-0ubuntu0.14.04.1
      major : 5
      minor : 5 
[2017-09-19 14:57:31,446 - DEBUG - JdbcEnvironmentInitiator.java::83] - Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-6.0.5 ( Revision: 6e477e32dff18fb4dc102e53f5a68037a9f8762e )
      major : 6
      minor : 0 
[2017-09-19 14:57:31,446 - DEBUG - DelegatingBasicLogger.java::389] - JDBC version : 4.1 
[2017-09-19 14:57:31,454 - INFO - Dialect.java::154] - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect 
[2017-09-19 14:57:31,462 - DEBUG - StandardRefCursorSupport.java::170] - Unexpected error trying to gauge level of JDBC REF_CURSOR support : null 
[2017-09-19 14:57:31,477 - DEBUG - IdentifierHelperBuilder.java::116] - JDBC driver metadata reported database stores quoted identifiers in more than one case 
[2017-09-19 14:57:31,480 - DEBUG - IdentifierHelperBuilder.java::182] - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers 
[2017-09-19 14:57:31,500 - DEBUG - DefaultIdentifierGeneratorFactory.java::78] - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator] 
[2017-09-19 14:57:31,500 - DEBUG - DefaultIdentifierGeneratorFactory.java::78] - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator] 
[2017-09-19 14:57:31,501 - DEBUG - DefaultIdentifierGeneratorFactory.java::78] - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator] 
[2017-09-19 14:57:31,501 - DEBUG - DefaultIdentifierGeneratorFactory.java::78] - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator] 
[2017-09-19 14:57:31,501 - DEBUG - DefaultIdentifierGeneratorFactory.java::78] - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned] 
[2017-09-19 14:57:31,502 - DEBUG - DefaultIdentifierGeneratorFactory.java::78] - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator] 
[2017-09-19 14:57:31,502 - DEBUG - DefaultIdentifierGeneratorFactory.java::78] - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator] 
[2017-09-19 14:57:31,503 - DEBUG - DefaultIdentifierGeneratorFactory.java::78] - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator] 
[2017-09-19 14:57:31,503 - DEBUG - DefaultIdentifierGeneratorFactory.java::78] - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator] 
[2017-09-19 14:57:31,504 - DEBUG - DefaultIdentifierGeneratorFactory.java::78] - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator] 
[2017-09-19 14:57:31,504 - DEBUG - DefaultIdentifierGeneratorFactory.java::78] - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator] 
[2017-09-19 14:57:31,504 - DEBUG - DefaultIdentifierGeneratorFactory.java::78] - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator] 
[2017-09-19 14:57:31,504 - DEBUG - DefaultIdentifierGeneratorFactory.java::78] - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator] 
[2017-09-19 14:57:31,505 - DEBUG - DefaultIdentifierGeneratorFactory.java::78] - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator] 
[2017-09-19 14:57:31,523 - DEBUG - Namespace.java::47] - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}] 
[2017-09-19 14:57:31,539 - DEBUG - AnnotationBinder.java::509] - Binding entity from annotated class: com.book.store.entity.Book 
[2017-09-19 14:57:31,554 - DEBUG - Ejb3Column.java::213] - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'} 
[2017-09-19 14:57:31,558 - DEBUG - EntityBinder.java::389] - Import with entity name Book 
[2017-09-19 14:57:31,560 - DEBUG - EntityBinder.java::665] - Bind entity com.book.store.entity.Book on table Book 
[2017-09-19 14:57:31,575 - DEBUG - Ejb3Column.java::213] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=Book_id, insertable=true, updatable=true, unique=false} 
[2017-09-19 14:57:31,577 - DEBUG - PropertyBinder.java::169] - MetadataSourceProcessor property bookId with lazy=false 
[2017-09-19 14:57:31,579 - DEBUG - AbstractPropertyHolder.java::90] - Attempting to locate auto-apply AttributeConverter for property [com.book.store.entity.Book:bookId] 
[2017-09-19 14:57:31,579 - DEBUG - SimpleValueBinder.java::384] - building SimpleValue for bookId 
[2017-09-19 14:57:31,581 - DEBUG - PropertyBinder.java::260] - Building property bookId 
[2017-09-19 14:57:31,584 - DEBUG - Ejb3Column.java::213] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=Author_name, insertable=true, updatable=true, unique=false} 
[2017-09-19 14:57:31,584 - DEBUG - PropertyBinder.java::169] - MetadataSourceProcessor property authorName with lazy=false 
[2017-09-19 14:57:31,584 - DEBUG - AbstractPropertyHolder.java::90] - Attempting to locate auto-apply AttributeConverter for property [com.book.store.entity.Book:authorName] 
[2017-09-19 14:57:31,584 - DEBUG - SimpleValueBinder.java::384] - building SimpleValue for authorName 
[2017-09-19 14:57:31,584 - DEBUG - PropertyBinder.java::260] - Building property authorName 
[2017-09-19 14:57:31,584 - DEBUG - Ejb3Column.java::213] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=Book_name, insertable=true, updatable=true, unique=false} 
[2017-09-19 14:57:31,585 - DEBUG - PropertyBinder.java::169] - MetadataSourceProcessor property bookName with lazy=false 
[2017-09-19 14:57:31,585 - DEBUG - AbstractPropertyHolder.java::90] - Attempting to locate auto-apply AttributeConverter for property [com.book.store.entity.Book:bookName] 
[2017-09-19 14:57:31,585 - DEBUG - SimpleValueBinder.java::384] - building SimpleValue for bookName 
[2017-09-19 14:57:31,585 - DEBUG - PropertyBinder.java::260] - Building property bookName 
[2017-09-19 14:57:31,585 - DEBUG - Ejb3Column.java::213] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=Category, insertable=true, updatable=true, unique=false} 
[2017-09-19 14:57:31,585 - DEBUG - PropertyBinder.java::169] - MetadataSourceProcessor property categoryName with lazy=false 
[2017-09-19 14:57:31,585 - DEBUG - AbstractPropertyHolder.java::90] - Attempting to locate auto-apply AttributeConverter for property [com.book.store.entity.Book:categoryName] 
[2017-09-19 14:57:31,585 - DEBUG - SimpleValueBinder.java::384] - building SimpleValue for categoryName 
[2017-09-19 14:57:31,586 - DEBUG - PropertyBinder.java::260] - Building property categoryName 
[2017-09-19 14:57:31,586 - DEBUG - Ejb3Column.java::213] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=price, insertable=true, updatable=true, unique=false} 
[2017-09-19 14:57:31,586 - DEBUG - PropertyBinder.java::169] - MetadataSourceProcessor property price with lazy=false 
[2017-09-19 14:57:31,586 - DEBUG - AbstractPropertyHolder.java::90] - Attempting to locate auto-apply AttributeConverter for property [com.book.store.entity.Book:price] 
[2017-09-19 14:57:31,586 - DEBUG - SimpleValueBinder.java::384] - building SimpleValue for price 
[2017-09-19 14:57:31,586 - DEBUG - PropertyBinder.java::260] - Building property price 
[2017-09-19 14:57:31,586 - DEBUG - Ejb3Column.java::213] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Book), mappingColumn=Publisher, insertable=true, updatable=true, unique=false} 
[2017-09-19 14:57:31,587 - DEBUG - PropertyBinder.java::169] - MetadataSourceProcessor property publisherName with lazy=false 
[2017-09-19 14:57:31,587 - DEBUG - AbstractPropertyHolder.java::90] - Attempting to locate auto-apply AttributeConverter for property [com.book.store.entity.Book:publisherName] 
[2017-09-19 14:57:31,587 - DEBUG - SimpleValueBinder.java::384] - building SimpleValue for publisherName 
[2017-09-19 14:57:31,587 - DEBUG - PropertyBinder.java::260] - Building property publisherName 
[2017-09-19 14:57:31,588 - DEBUG - AnnotationBinder.java::509] - Binding entity from annotated class: com.book.store.entity.Purchase 
[2017-09-19 14:57:31,588 - DEBUG - Ejb3Column.java::213] - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'} 
[2017-09-19 14:57:31,588 - DEBUG - EntityBinder.java::389] - Import with entity name Purchase 
[2017-09-19 14:57:31,588 - DEBUG - EntityBinder.java::665] - Bind entity com.book.store.entity.Purchase on table Purchase 
[2017-09-19 14:57:31,589 - DEBUG - Ejb3Column.java::213] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Purchase), mappingColumn=Purchase_no, insertable=true, updatable=true, unique=false} 
[2017-09-19 14:57:31,590 - DEBUG - PropertyBinder.java::169] - MetadataSourceProcessor property purchaseNumber with lazy=false 
[2017-09-19 14:57:31,590 - DEBUG - AbstractPropertyHolder.java::90] - Attempting to locate auto-apply AttributeConverter for property [com.book.store.entity.Purchase:purchaseNumber] 
[2017-09-19 14:57:31,590 - DEBUG - SimpleValueBinder.java::384] - building SimpleValue for purchaseNumber 
[2017-09-19 14:57:31,590 - DEBUG - PropertyBinder.java::260] - Building property purchaseNumber 
[2017-09-19 14:57:31,590 - DEBUG - Ejb3Column.java::213] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Purchase), mappingColumn=Amount, insertable=true, updatable=true, unique=false} 
[2017-09-19 14:57:31,590 - DEBUG - PropertyBinder.java::169] - MetadataSourceProcessor property amount with lazy=false 
[2017-09-19 14:57:31,590 - DEBUG - AbstractPropertyHolder.java::90] - Attempting to locate auto-apply AttributeConverter for property [com.book.store.entity.Purchase:amount] 
[2017-09-19 14:57:31,590 - DEBUG - SimpleValueBinder.java::384] - building SimpleValue for amount 
[2017-09-19 14:57:31,591 - DEBUG - PropertyBinder.java::260] - Building property amount 
[2017-09-19 14:57:31,591 - DEBUG - Ejb3Column.java::213] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Purchase), mappingColumn=Book_id, insertable=true, updatable=true, unique=false} 
[2017-09-19 14:57:31,591 - DEBUG - PropertyBinder.java::169] - MetadataSourceProcessor property bookId with lazy=false 
[2017-09-19 14:57:31,591 - DEBUG - AbstractPropertyHolder.java::90] - Attempting to locate auto-apply AttributeConverter for property [com.book.store.entity.Purchase:bookId] 
[2017-09-19 14:57:31,591 - DEBUG - SimpleValueBinder.java::384] - building SimpleValue for bookId 
[2017-09-19 14:57:31,591 - DEBUG - PropertyBinder.java::260] - Building property bookId 
[2017-09-19 14:57:31,591 - DEBUG - Ejb3Column.java::213] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Purchase), mappingColumn=Customer_mobileno, insertable=true, updatable=true, unique=false} 
[2017-09-19 14:57:31,591 - DEBUG - PropertyBinder.java::169] - MetadataSourceProcessor property customerMobileNumber with lazy=false 
[2017-09-19 14:57:31,592 - DEBUG - AbstractPropertyHolder.java::90] - Attempting to locate auto-apply AttributeConverter for property [com.book.store.entity.Purchase:customerMobileNumber] 
[2017-09-19 14:57:31,592 - DEBUG - SimpleValueBinder.java::384] - building SimpleValue for customerMobileNumber 
[2017-09-19 14:57:31,592 - DEBUG - PropertyBinder.java::260] - Building property customerMobileNumber 
[2017-09-19 14:57:31,592 - DEBUG - Ejb3Column.java::213] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Purchase), mappingColumn=Customer_name, insertable=true, updatable=true, unique=false} 
[2017-09-19 14:57:31,592 - DEBUG - PropertyBinder.java::169] - MetadataSourceProcessor property customerName with lazy=false 
[2017-09-19 14:57:31,592 - DEBUG - AbstractPropertyHolder.java::90] - Attempting to locate auto-apply AttributeConverter for property [com.book.store.entity.Purchase:customerName] 
[2017-09-19 14:57:31,592 - DEBUG - SimpleValueBinder.java::384] - building SimpleValue for customerName 
[2017-09-19 14:57:31,592 - DEBUG - PropertyBinder.java::260] - Building property customerName 
[2017-09-19 14:57:31,593 - DEBUG - Ejb3Column.java::213] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Purchase), mappingColumn=Purchase_date, insertable=true, updatable=true, unique=false} 
[2017-09-19 14:57:31,593 - DEBUG - PropertyBinder.java::169] - MetadataSourceProcessor property purchaseDate with lazy=false 
[2017-09-19 14:57:31,593 - DEBUG - AbstractPropertyHolder.java::90] - Attempting to locate auto-apply AttributeConverter for property [com.book.store.entity.Purchase:purchaseDate] 
[2017-09-19 14:57:31,593 - DEBUG - SimpleValueBinder.java::384] - building SimpleValue for purchaseDate 
[2017-09-19 14:57:31,593 - DEBUG - PropertyBinder.java::260] - Building property purchaseDate 
[2017-09-19 14:57:31,593 - DEBUG - SimpleValueBinder.java::423] - Starting fillSimpleValue for bookId 
[2017-09-19 14:57:31,594 - DEBUG - SimpleValueBinder.java::423] - Starting fillSimpleValue for authorName 
[2017-09-19 14:57:31,594 - DEBUG - SimpleValueBinder.java::423] - Starting fillSimpleValue for bookName 
[2017-09-19 14:57:31,594 - DEBUG - SimpleValueBinder.java::423] - Starting fillSimpleValue for categoryName 
[2017-09-19 14:57:31,594 - DEBUG - SimpleValueBinder.java::423] - Starting fillSimpleValue for price 
[2017-09-19 14:57:31,594 - DEBUG - SimpleValueBinder.java::423] - Starting fillSimpleValue for publisherName 
[2017-09-19 14:57:31,594 - DEBUG - SimpleValueBinder.java::423] - Starting fillSimpleValue for purchaseNumber 
[2017-09-19 14:57:31,594 - DEBUG - SimpleValueBinder.java::423] - Starting fillSimpleValue for amount 
[2017-09-19 14:57:31,594 - DEBUG - SimpleValueBinder.java::423] - Starting fillSimpleValue for bookId 
[2017-09-19 14:57:31,594 - DEBUG - SimpleValueBinder.java::423] - Starting fillSimpleValue for customerMobileNumber 
[2017-09-19 14:57:31,594 - DEBUG - SimpleValueBinder.java::423] - Starting fillSimpleValue for customerName 
[2017-09-19 14:57:31,594 - DEBUG - SimpleValueBinder.java::423] - Starting fillSimpleValue for purchaseDate 
[2017-09-19 14:57:31,612 - DEBUG - SessionFactoryImpl.java::210] - Building session factory 
[2017-09-19 14:57:31,613 - DEBUG - Settings.java::69] - SessionFactory name : null 
[2017-09-19 14:57:31,613 - DEBUG - Settings.java::70] - Automatic flush during beforeCompletion(): disabled 
[2017-09-19 14:57:31,613 - DEBUG - Settings.java::71] - Automatic session close at end of transaction: disabled 
[2017-09-19 14:57:31,613 - DEBUG - Settings.java::73] - Statistics: disabled 
[2017-09-19 14:57:31,614 - DEBUG - Settings.java::75] - Deleted entity synthetic identifier rollback: disabled 
[2017-09-19 14:57:31,614 - DEBUG - Settings.java::76] - Default entity-mode: pojo 
[2017-09-19 14:57:31,614 - DEBUG - Settings.java::77] - Check Nullability in Core (should be disabled when Bean Validation is on): enabled 
[2017-09-19 14:57:31,614 - DEBUG - Settings.java::78] - Allow initialization of lazy state outside session : disabled 
[2017-09-19 14:57:31,614 - DEBUG - Settings.java::80] - Using BatchFetchStyle : LEGACY 
[2017-09-19 14:57:31,614 - DEBUG - Settings.java::81] - Default batch fetch size: -1 
[2017-09-19 14:57:31,614 - DEBUG - Settings.java::82] - Maximum outer join fetch depth: 2 
[2017-09-19 14:57:31,614 - DEBUG - Settings.java::83] - Default null ordering: NONE 
[2017-09-19 14:57:31,614 - DEBUG - Settings.java::84] - Order SQL updates by primary key: disabled 
[2017-09-19 14:57:31,614 - DEBUG - Settings.java::85] - Order SQL inserts for batching: disabled 
[2017-09-19 14:57:31,614 - DEBUG - Settings.java::87] - multi-tenancy strategy : NONE 
[2017-09-19 14:57:31,614 - DEBUG - Settings.java::89] - JTA Track by Thread: enabled 
[2017-09-19 14:57:31,615 - DEBUG - Settings.java::91] - Query language substitutions: {} 
[2017-09-19 14:57:31,615 - DEBUG - Settings.java::92] - JPA query language strict compliance: disabled 
[2017-09-19 14:57:31,615 - DEBUG - Settings.java::93] - Named query checking : enabled 
[2017-09-19 14:57:31,615 - DEBUG - Settings.java::95] - Second-level cache: enabled 
[2017-09-19 14:57:31,615 - DEBUG - Settings.java::96] - Second-level query cache: disabled 
[2017-09-19 14:57:31,615 - DEBUG - Settings.java::97] - Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@642a7222 
[2017-09-19 14:57:31,615 - DEBUG - Settings.java::98] - Second-level cache region prefix: null 
[2017-09-19 14:57:31,615 - DEBUG - Settings.java::99] - Optimize second-level cache for minimal puts: disabled 
[2017-09-19 14:57:31,615 - DEBUG - Settings.java::100] - Structured second-level cache entries: disabled 
[2017-09-19 14:57:31,615 - DEBUG - Settings.java::101] - Second-level cache direct-reference entries: disabled 
[2017-09-19 14:57:31,615 - DEBUG - Settings.java::102] - Automatic eviction of collection cache: disabled 
[2017-09-19 14:57:31,615 - DEBUG - Settings.java::104] - JDBC batch size: 15 
[2017-09-19 14:57:31,616 - DEBUG - Settings.java::105] - JDBC batch updates for versioned data: enabled 
[2017-09-19 14:57:31,616 - DEBUG - Settings.java::106] - Scrollable result sets: enabled 
[2017-09-19 14:57:31,616 - DEBUG - Settings.java::107] - Wrap result sets: disabled 
[2017-09-19 14:57:31,616 - DEBUG - Settings.java::108] - JDBC3 getGeneratedKeys(): enabled 
[2017-09-19 14:57:31,616 - DEBUG - Settings.java::109] - JDBC result set fetch size: null 
[2017-09-19 14:57:31,616 - DEBUG - Settings.java::110] - Connection release mode: ON_CLOSE 
[2017-09-19 14:57:31,616 - DEBUG - Settings.java::111] - Generate SQL with comments: disabled 
[2017-09-19 14:57:31,645 - DEBUG - SessionFactoryImpl.java::255] - Session factory constructed with filter configurations : {} 
[2017-09-19 14:57:31,645 - DEBUG - SessionFactoryImpl.java::256] - Instantiating session factory with properties: {hibernate.connection.password=Welcome@123, java.runtime.name=Java(TM) SE Runtime Environment, java.vm.version=25.45-b02, sun.boot.library.path=/home/neelakanta/SetupFiles/jdk1.8.0_45/jre/lib/amd64, hibernate.connection.username=neelakanta, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@48c76607, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=:, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, sun.os.patch.level=unknown, user.country=US, sun.java.launcher=SUN_STANDARD, java.vm.specification.name=Java Virtual Machine Specification, user.dir=/home/neelakanta/Documents/Eclipse Documents/MWatchExperiment/BookStore, java.runtime.version=1.8.0_45-b14, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, os.arch=amd64, java.endorsed.dirs=/home/neelakanta/SetupFiles/jdk1.8.0_45/jre/lib/endorsed, hibernate.connection.autocommit=true, java.io.tmpdir=/tmp, line.separator=
, java.vm.specification.vendor=Oracle Corporation, os.name=Linux, sun.jnu.encoding=UTF-8, java.library.path=/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib, java.class.version=52.0, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=3.13.0-119-generic, user.home=/home/neelakanta, user.timezone=Asia/Kolkata, java.awt.printerjob=sun.print.PSPrinterJob, file.encoding=UTF-8, java.specification.version=1.8, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, user.name=neelakanta, java.class.path=/home/neelakanta/Documents/Eclipse Documents/MWatchExperiment/BookStore/target/classes:/home/neelakanta/.m2/repository/junit/junit/3.8.1/junit-3.8.1.jar:/home/neelakanta/SetupFiles/apache-tomcat-8.0.36/lib/catalina-ha.jar:/home/neelakanta/SetupFiles/apache-tomcat-8.0.36/lib/tomcat-dbcp.jar:/home/neelakanta/SetupFiles/apache-tomcat-8.0.36/lib/catalina-tribes.jar:/home/neelakanta/SetupFiles/apache-tomcat-8.0.36/lib/tomcat-i18n-fr.jar:/home/neelakanta/SetupFiles/apache-tomcat-8.0.36/lib/el-api.jar:/home/neelakanta/SetupFiles/apache-tomcat-8.0.36/lib/jsp-api.jar:/home/neelakanta/SetupFiles/apache-tomcat-8.0.36/lib/tomcat-i18n-es.jar:/home/neelakanta/SetupFiles/apache-tomcat-8.0.36/lib/annotations-api.jar:/home/neelakanta/SetupFiles/apache-tomcat-8.0.36/lib/tomcat-i18n-ja.jar:/home/neelakanta/SetupFiles/apache-tomcat-8.0.36/lib/jasper-el.jar:/home/neelakanta/SetupFiles/apache-tomcat-8.0.36/lib/tomcat-websocket.jar:/home/neelakanta/SetupFiles/apache-tomcat-8.0.36/lib/tomcat-jni.jar:/home/neelakanta/SetupFiles/apache-tomcat-8.0.36/lib/servlet-api.jar:/home/neelakanta/SetupFiles/apache-tomcat-8.0.36/lib/tomcat-api.jar:/home/neelakanta/SetupFiles/apache-tomcat-8.0.36/lib/ecj-4.5.jar:/home/neelakanta/SetupFiles/apache-tomcat-8.0.36/lib/tomcat-jdbc.jar:/home/neelakanta/SetupFiles/apache-tomcat-8.0.36/lib/catalina.jar:/home/neelakanta/SetupFiles/apache-tomcat-8.0.36/lib/tomcat-coyote.jar:/home/neelakanta/SetupFiles/apache-tomcat-8.0.36/lib/tomcat-util.jar:/home/neelakanta/SetupFiles/apache-tomcat-8.0.36/lib/catalina-storeconfig.jar:/home/neelakanta/SetupFiles/apache-tomcat-8.0.36/lib/tomcat-util-scan.jar:/home/neelakanta/SetupFiles/apache-tomcat-8.0.36/lib/websocket-api.jar:/home/neelakanta/SetupFiles/apache-tomcat-8.0.36/lib/catalina-ant.jar:/home/neelakanta/SetupFiles/apache-tomcat-8.0.36/lib/jasper.jar:/home/neelakanta/eclipseMars/plugins/org.junit_4.12.0.v201504281640/junit.jar:/home/neelakanta/eclipseMars/plugins/org.hamcrest.core_1.3.0.v201303031735.jar:/home/neelakanta/.m2/repository/org/hibernate/hibernate-core/5.0.1.Final/hibernate-core-5.0.1.Final.jar:/home/neelakanta/.m2/repository/org/jboss/logging/jboss-logging/3.3.0.Final/jboss-logging-3.3.0.Final.jar:/home/neelakanta/.m2/repository/org/apache/geronimo/specs/geronimo-jta_1.1_spec/1.1.1/geronimo-jta_1.1_spec-1.1.1.jar:/home/neelakanta/.m2/repository/org/hibernate/javax/persistence/hibernate-jpa-2.1-api/1.0.0.Final/hibernate-jpa-2.1-api-1.0.0.Final.jar:/home/neelakanta/.m2/repository/org/javassist/javassist/3.18.1-GA/javassist-3.18.1-GA.jar:/home/neelakanta/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/home/neelakanta/.m2/repository/org/jboss/jandex/1.2.2.Final/jandex-1.2.2.Final.jar:/home/neelakanta/.m2/repository/dom4j/dom4j/1.6.1/dom4j-1.6.1.jar:/home/neelakanta/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.0.0.Final/hibernate-commons-annotations-5.0.0.Final.jar:/home/neelakanta/.m2/repository/org/hibernate/hibernate-validator/5.0.1.Final/hibernate-validator-5.0.1.Final.jar:/home/neelakanta/.m2/repository/javax/validation/validation-api/1.1.0.Final/validation-api-1.1.0.Final.jar:/home/neelakanta/.m2/repository/com/fasterxml/classmate/0.8.0/classmate-0.8.0.jar:/home/neelakanta/.m2/repository/org/hibernate/hibernate-annotations/3.3.0.ga/hibernate-annotations-3.3.0.ga.jar:/home/neelakanta/.m2/repository/org/hibernate/hibernate/3.2.1.ga/hibernate-3.2.1.ga.jar:/home/neelakanta/.m2/repository/net/sf/ehcache/ehcache/1.2.3/ehcache-1.2.3.jar:/home/neelakanta/.m2/repository/commons-logging/commons-logging/1.0.4/commons-logging-1.0.4.jar:/home/neelakanta/.m2/repository/asm/asm-attrs/1.5.3/asm-attrs-1.5.3.jar:/home/neelakanta/.m2/repository/cglib/cglib/2.1_3/cglib-2.1_3.jar:/home/neelakanta/.m2/repository/asm/asm/1.5.3/asm-1.5.3.jar:/home/neelakanta/.m2/repository/commons-collections/commons-collections/2.1.1/commons-collections-2.1.1.jar:/home/neelakanta/.m2/repository/javax/persistence/persistence-api/1.0/persistence-api-1.0.jar:/home/neelakanta/.m2/repository/org/hibernate/hibernate-commons-annotations/3.3.0.ga/hibernate-commons-annotations-3.3.0.ga.jar:/home/neelakanta/.m2/repository/javax/transaction/jta/1.1/jta-1.1.jar:/home/neelakanta/.m2/repository/mysql/mysql-connector-java/6.0.5/mysql-connector-java-6.0.5.jar:/home/neelakanta/.m2/repository/c3p0/c3p0/0.9.0.4/c3p0-0.9.0.4.jar:/home/neelakanta/.m2/repository/org/hibernate/hibernate-entitymanager/4.3.1.Final/hibernate-entitymanager-4.3.1.Final.jar:/home/neelakanta/.m2/repository/org/jboss/logging/jboss-logging-annotations/1.2.0.Beta1/jboss-logging-annotations-1.2.0.Beta1.jar:/home/neelakanta/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.0.0.Final/jboss-transaction-api_1.2_spec-1.0.0.Final.jar:/home/neelakanta/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=false, java.vm.specification.version=1.8, sun.arch.data.model=64, sun.java.command=com.book.store.BookStoreSystemClient, java.home=/home/neelakanta/SetupFiles/jdk1.8.0_45/jre, hibernate.connection.url=jdbc:mysql://localhost:3306/bookstore?createDatabaseIfNotExist=true&useSSL=false, hibernate.dialect=org.hibernate.dialect.MySQLDialect, user.language=en, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.X11.XToolkit, java.vm.info=mixed mode, java.version=1.8.0_45, java.ext.dirs=/home/neelakanta/SetupFiles/jdk1.8.0_45/jre/lib/ext:/usr/java/packages/lib/ext, sun.boot.class.path=/home/neelakanta/SetupFiles/jdk1.8.0_45/jre/lib/resources.jar:/home/neelakanta/SetupFiles/jdk1.8.0_45/jre/lib/rt.jar:/home/neelakanta/SetupFiles/jdk1.8.0_45/jre/lib/sunrsasign.jar:/home/neelakanta/SetupFiles/jdk1.8.0_45/jre/lib/jsse.jar:/home/neelakanta/SetupFiles/jdk1.8.0_45/jre/lib/jce.jar:/home/neelakanta/SetupFiles/jdk1.8.0_45/jre/lib/charsets.jar:/home/neelakanta/SetupFiles/jdk1.8.0_45/jre/lib/jfr.jar:/home/neelakanta/SetupFiles/jdk1.8.0_45/jre/classes, java.vendor=Oracle Corporation, file.separator=/, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, sun.desktop=gnome, sun.cpu.isalist=} 
[2017-09-19 14:57:31,663 - INFO - Version.java::27] - HV000001: Hibernate Validator 5.0.1.Final 
[2017-09-19 14:57:31,673 - DEBUG - DefaultTraversableResolver.java::106] - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver 
[2017-09-19 14:57:31,674 - DEBUG - DefaultTraversableResolver.java::117] - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. 
[2017-09-19 14:57:31,678 - DEBUG - ValidationXmlParser.java::88] - Trying to load META-INF/validation.xml for XML based Validator configuration. 
[2017-09-19 14:57:31,681 - DEBUG - ValidationXmlParser.java::95] - No META-INF/validation.xml found. Using annotation based configuration only. 
[2017-09-19 14:57:31,697 - DEBUG - ClassLoaderAccessImpl.java::55] - Not known whether passed class name [com.book.store.entity.Book] is safe 
[2017-09-19 14:57:31,698 - DEBUG - ClassLoaderAccessImpl.java::57] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.book.store.entity.Book 
[2017-09-19 14:57:31,738 - DEBUG - ClassLoaderAccessImpl.java::55] - Not known whether passed class name [com.book.store.entity.Purchase] is safe 
[2017-09-19 14:57:31,738 - DEBUG - ClassLoaderAccessImpl.java::57] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.book.store.entity.Purchase 
[2017-09-19 14:57:31,743 - DEBUG - JaccIntegrator.java::80] - Skipping JACC integration as it was not enabled 
[2017-09-19 14:57:31,799 - DEBUG - ClassLoaderAccessImpl.java::55] - Not known whether passed class name [com.book.store.entity.Book] is safe 
[2017-09-19 14:57:31,799 - DEBUG - ClassLoaderAccessImpl.java::57] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.book.store.entity.Book 
[2017-09-19 14:57:31,807 - DEBUG - ClassLoaderAccessImpl.java::55] - Not known whether passed class name [com.book.store.entity.Book] is safe 
[2017-09-19 14:57:31,807 - DEBUG - ClassLoaderAccessImpl.java::57] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.book.store.entity.Book 
[2017-09-19 14:57:31,842 - DEBUG - ClassLoaderAccessImpl.java::55] - Not known whether passed class name [com.book.store.entity.Purchase] is safe 
[2017-09-19 14:57:31,842 - DEBUG - ClassLoaderAccessImpl.java::57] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.book.store.entity.Purchase 
[2017-09-19 14:57:31,842 - DEBUG - ClassLoaderAccessImpl.java::55] - Not known whether passed class name [com.book.store.entity.Purchase] is safe 
[2017-09-19 14:57:31,842 - DEBUG - ClassLoaderAccessImpl.java::57] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.book.store.entity.Purchase 
[2017-09-19 14:57:31,850 - DEBUG - AbstractEntityPersister.java::3418] - Static SQL for entity: com.book.store.entity.Book 
[2017-09-19 14:57:31,850 - DEBUG - AbstractEntityPersister.java::3423] -  Version select: select Book_id from Book where Book_id =? 
[2017-09-19 14:57:31,850 - DEBUG - AbstractEntityPersister.java::3426] -  Snapshot select: select book_.Book_id, book_.Author_name as Author_n2_0_, book_.Book_name as Book_nam3_0_, book_.Category as Category4_0_, book_.price as price5_0_, book_.Publisher as Publishe6_0_ from Book book_ where book_.Book_id=? 
[2017-09-19 14:57:31,850 - DEBUG - DelegatingBasicLogger.java::394] -  Insert 0: insert into Book (Author_name, Book_name, Category, price, Publisher, Book_id) values (?, ?, ?, ?, ?, ?) 
[2017-09-19 14:57:31,850 - DEBUG - DelegatingBasicLogger.java::394] -  Update 0: update Book set Author_name=?, Book_name=?, Category=?, price=?, Publisher=? where Book_id=? 
[2017-09-19 14:57:31,850 - DEBUG - DelegatingBasicLogger.java::394] -  Delete 0: delete from Book where Book_id=? 
[2017-09-19 14:57:31,850 - DEBUG - AbstractEntityPersister.java::3434] -  Identity insert: insert into Book (Author_name, Book_name, Category, price, Publisher) values (?, ?, ?, ?, ?) 
[2017-09-19 14:57:31,864 - DEBUG - QuerySpacesImpl.java::174] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@435fb7b5] 
[2017-09-19 14:57:31,865 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : authorName 
[2017-09-19 14:57:31,865 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : bookName 
[2017-09-19 14:57:31,865 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : categoryName 
[2017-09-19 14:57:31,865 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : price 
[2017-09-19 14:57:31,865 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : publisherName 
[2017-09-19 14:57:31,865 - DEBUG - FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java::76] - Building LoadPlan... 
[2017-09-19 14:57:31,874 - DEBUG - LoadQueryJoinAndFetchProcessor.java::95] - processing queryspace <gen:0> 
[2017-09-19 14:57:31,877 - DEBUG - LoadPlanTreePrinter.java::55] - LoadPlan(entity=com.book.store.entity.Book)
    - Returns
       - EntityReturnImpl(entity=com.book.store.entity.Book, querySpaceUid=<gen:0>, path=com.book.store.entity.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.book.store.entity.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {Book_id1_0_0_}
 
[2017-09-19 14:57:31,878 - DEBUG - EntityLoader.java::128] - Static select for entity com.book.store.entity.Book [NONE]: select book0_.Book_id as Book_id1_0_0_, book0_.Author_name as Author_n2_0_0_, book0_.Book_name as Book_nam3_0_0_, book0_.Category as Category4_0_0_, book0_.price as price5_0_0_, book0_.Publisher as Publishe6_0_0_ from Book book0_ where book0_.Book_id=? 
[2017-09-19 14:57:31,879 - DEBUG - QuerySpacesImpl.java::174] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@549949be] 
[2017-09-19 14:57:31,879 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : authorName 
[2017-09-19 14:57:31,879 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : bookName 
[2017-09-19 14:57:31,879 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : categoryName 
[2017-09-19 14:57:31,879 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : price 
[2017-09-19 14:57:31,879 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : publisherName 
[2017-09-19 14:57:31,879 - DEBUG - FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java::76] - Building LoadPlan... 
[2017-09-19 14:57:31,879 - DEBUG - LoadQueryJoinAndFetchProcessor.java::95] - processing queryspace <gen:0> 
[2017-09-19 14:57:31,880 - DEBUG - LoadPlanTreePrinter.java::55] - LoadPlan(entity=com.book.store.entity.Book)
    - Returns
       - EntityReturnImpl(entity=com.book.store.entity.Book, querySpaceUid=<gen:0>, path=com.book.store.entity.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.book.store.entity.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {Book_id1_0_0_}
 
[2017-09-19 14:57:31,880 - DEBUG - EntityLoader.java::128] - Static select for entity com.book.store.entity.Book [READ]: select book0_.Book_id as Book_id1_0_0_, book0_.Author_name as Author_n2_0_0_, book0_.Book_name as Book_nam3_0_0_, book0_.Category as Category4_0_0_, book0_.price as price5_0_0_, book0_.Publisher as Publishe6_0_0_ from Book book0_ where book0_.Book_id=? 
[2017-09-19 14:57:31,880 - DEBUG - QuerySpacesImpl.java::174] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@17a87e37] 
[2017-09-19 14:57:31,880 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : authorName 
[2017-09-19 14:57:31,880 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : bookName 
[2017-09-19 14:57:31,880 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : categoryName 
[2017-09-19 14:57:31,880 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : price 
[2017-09-19 14:57:31,880 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : publisherName 
[2017-09-19 14:57:31,880 - DEBUG - FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java::76] - Building LoadPlan... 
[2017-09-19 14:57:31,881 - DEBUG - LoadQueryJoinAndFetchProcessor.java::95] - processing queryspace <gen:0> 
[2017-09-19 14:57:31,881 - DEBUG - LoadPlanTreePrinter.java::55] - LoadPlan(entity=com.book.store.entity.Book)
    - Returns
       - EntityReturnImpl(entity=com.book.store.entity.Book, querySpaceUid=<gen:0>, path=com.book.store.entity.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.book.store.entity.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {Book_id1_0_0_}
 
[2017-09-19 14:57:31,881 - DEBUG - EntityLoader.java::128] - Static select for entity com.book.store.entity.Book [UPGRADE]: select book0_.Book_id as Book_id1_0_0_, book0_.Author_name as Author_n2_0_0_, book0_.Book_name as Book_nam3_0_0_, book0_.Category as Category4_0_0_, book0_.price as price5_0_0_, book0_.Publisher as Publishe6_0_0_ from Book book0_ where book0_.Book_id=? for update 
[2017-09-19 14:57:31,881 - DEBUG - QuerySpacesImpl.java::174] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@20a14b55] 
[2017-09-19 14:57:31,881 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : authorName 
[2017-09-19 14:57:31,881 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : bookName 
[2017-09-19 14:57:31,881 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : categoryName 
[2017-09-19 14:57:31,881 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : price 
[2017-09-19 14:57:31,881 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : publisherName 
[2017-09-19 14:57:31,882 - DEBUG - FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java::76] - Building LoadPlan... 
[2017-09-19 14:57:31,882 - DEBUG - LoadQueryJoinAndFetchProcessor.java::95] - processing queryspace <gen:0> 
[2017-09-19 14:57:31,882 - DEBUG - LoadPlanTreePrinter.java::55] - LoadPlan(entity=com.book.store.entity.Book)
    - Returns
       - EntityReturnImpl(entity=com.book.store.entity.Book, querySpaceUid=<gen:0>, path=com.book.store.entity.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.book.store.entity.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {Book_id1_0_0_}
 
[2017-09-19 14:57:31,882 - DEBUG - EntityLoader.java::128] - Static select for entity com.book.store.entity.Book [UPGRADE_NOWAIT]: select book0_.Book_id as Book_id1_0_0_, book0_.Author_name as Author_n2_0_0_, book0_.Book_name as Book_nam3_0_0_, book0_.Category as Category4_0_0_, book0_.price as price5_0_0_, book0_.Publisher as Publishe6_0_0_ from Book book0_ where book0_.Book_id=? for update 
[2017-09-19 14:57:31,882 - DEBUG - QuerySpacesImpl.java::174] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6da00fb9] 
[2017-09-19 14:57:31,882 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : authorName 
[2017-09-19 14:57:31,882 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : bookName 
[2017-09-19 14:57:31,883 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : categoryName 
[2017-09-19 14:57:31,883 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : price 
[2017-09-19 14:57:31,883 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : publisherName 
[2017-09-19 14:57:31,883 - DEBUG - FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java::76] - Building LoadPlan... 
[2017-09-19 14:57:31,883 - DEBUG - LoadQueryJoinAndFetchProcessor.java::95] - processing queryspace <gen:0> 
[2017-09-19 14:57:31,883 - DEBUG - LoadPlanTreePrinter.java::55] - LoadPlan(entity=com.book.store.entity.Book)
    - Returns
       - EntityReturnImpl(entity=com.book.store.entity.Book, querySpaceUid=<gen:0>, path=com.book.store.entity.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.book.store.entity.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {Book_id1_0_0_}
 
[2017-09-19 14:57:31,883 - DEBUG - EntityLoader.java::128] - Static select for entity com.book.store.entity.Book [UPGRADE_SKIPLOCKED]: select book0_.Book_id as Book_id1_0_0_, book0_.Author_name as Author_n2_0_0_, book0_.Book_name as Book_nam3_0_0_, book0_.Category as Category4_0_0_, book0_.price as price5_0_0_, book0_.Publisher as Publishe6_0_0_ from Book book0_ where book0_.Book_id=? for update 
[2017-09-19 14:57:31,883 - DEBUG - QuerySpacesImpl.java::174] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@20f12539] 
[2017-09-19 14:57:31,884 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : authorName 
[2017-09-19 14:57:31,884 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : bookName 
[2017-09-19 14:57:31,884 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : categoryName 
[2017-09-19 14:57:31,884 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : price 
[2017-09-19 14:57:31,884 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : publisherName 
[2017-09-19 14:57:31,884 - DEBUG - FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java::76] - Building LoadPlan... 
[2017-09-19 14:57:31,884 - DEBUG - LoadQueryJoinAndFetchProcessor.java::95] - processing queryspace <gen:0> 
[2017-09-19 14:57:31,884 - DEBUG - LoadPlanTreePrinter.java::55] - LoadPlan(entity=com.book.store.entity.Book)
    - Returns
       - EntityReturnImpl(entity=com.book.store.entity.Book, querySpaceUid=<gen:0>, path=com.book.store.entity.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.book.store.entity.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {Book_id1_0_0_}
 
[2017-09-19 14:57:31,884 - DEBUG - EntityLoader.java::128] - Static select for entity com.book.store.entity.Book [FORCE]: select book0_.Book_id as Book_id1_0_0_, book0_.Author_name as Author_n2_0_0_, book0_.Book_name as Book_nam3_0_0_, book0_.Category as Category4_0_0_, book0_.price as price5_0_0_, book0_.Publisher as Publishe6_0_0_ from Book book0_ where book0_.Book_id=? for update 
[2017-09-19 14:57:31,885 - DEBUG - QuerySpacesImpl.java::174] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@18025ced] 
[2017-09-19 14:57:31,885 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : authorName 
[2017-09-19 14:57:31,885 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : bookName 
[2017-09-19 14:57:31,885 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : categoryName 
[2017-09-19 14:57:31,885 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : price 
[2017-09-19 14:57:31,885 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : publisherName 
[2017-09-19 14:57:31,885 - DEBUG - FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java::76] - Building LoadPlan... 
[2017-09-19 14:57:31,885 - DEBUG - LoadQueryJoinAndFetchProcessor.java::95] - processing queryspace <gen:0> 
[2017-09-19 14:57:31,885 - DEBUG - LoadPlanTreePrinter.java::55] - LoadPlan(entity=com.book.store.entity.Book)
    - Returns
       - EntityReturnImpl(entity=com.book.store.entity.Book, querySpaceUid=<gen:0>, path=com.book.store.entity.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.book.store.entity.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {Book_id1_0_0_}
 
[2017-09-19 14:57:31,886 - DEBUG - EntityLoader.java::128] - Static select for entity com.book.store.entity.Book [PESSIMISTIC_READ]: select book0_.Book_id as Book_id1_0_0_, book0_.Author_name as Author_n2_0_0_, book0_.Book_name as Book_nam3_0_0_, book0_.Category as Category4_0_0_, book0_.price as price5_0_0_, book0_.Publisher as Publishe6_0_0_ from Book book0_ where book0_.Book_id=? lock in share mode 
[2017-09-19 14:57:31,886 - DEBUG - QuerySpacesImpl.java::174] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3a3e4aff] 
[2017-09-19 14:57:31,886 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : authorName 
[2017-09-19 14:57:31,886 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : bookName 
[2017-09-19 14:57:31,886 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : categoryName 
[2017-09-19 14:57:31,886 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : price 
[2017-09-19 14:57:31,886 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : publisherName 
[2017-09-19 14:57:31,886 - DEBUG - FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java::76] - Building LoadPlan... 
[2017-09-19 14:57:31,886 - DEBUG - LoadQueryJoinAndFetchProcessor.java::95] - processing queryspace <gen:0> 
[2017-09-19 14:57:31,886 - DEBUG - LoadPlanTreePrinter.java::55] - LoadPlan(entity=com.book.store.entity.Book)
    - Returns
       - EntityReturnImpl(entity=com.book.store.entity.Book, querySpaceUid=<gen:0>, path=com.book.store.entity.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.book.store.entity.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {Book_id1_0_0_}
 
[2017-09-19 14:57:31,887 - DEBUG - EntityLoader.java::128] - Static select for entity com.book.store.entity.Book [PESSIMISTIC_WRITE]: select book0_.Book_id as Book_id1_0_0_, book0_.Author_name as Author_n2_0_0_, book0_.Book_name as Book_nam3_0_0_, book0_.Category as Category4_0_0_, book0_.price as price5_0_0_, book0_.Publisher as Publishe6_0_0_ from Book book0_ where book0_.Book_id=? for update 
[2017-09-19 14:57:31,887 - DEBUG - QuerySpacesImpl.java::174] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@57459491] 
[2017-09-19 14:57:31,887 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : authorName 
[2017-09-19 14:57:31,887 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : bookName 
[2017-09-19 14:57:31,887 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : categoryName 
[2017-09-19 14:57:31,887 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : price 
[2017-09-19 14:57:31,887 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : publisherName 
[2017-09-19 14:57:31,887 - DEBUG - FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java::76] - Building LoadPlan... 
[2017-09-19 14:57:31,887 - DEBUG - LoadQueryJoinAndFetchProcessor.java::95] - processing queryspace <gen:0> 
[2017-09-19 14:57:31,888 - DEBUG - LoadPlanTreePrinter.java::55] - LoadPlan(entity=com.book.store.entity.Book)
    - Returns
       - EntityReturnImpl(entity=com.book.store.entity.Book, querySpaceUid=<gen:0>, path=com.book.store.entity.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.book.store.entity.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {Book_id1_0_0_}
 
[2017-09-19 14:57:31,888 - DEBUG - EntityLoader.java::128] - Static select for entity com.book.store.entity.Book [PESSIMISTIC_FORCE_INCREMENT]: select book0_.Book_id as Book_id1_0_0_, book0_.Author_name as Author_n2_0_0_, book0_.Book_name as Book_nam3_0_0_, book0_.Category as Category4_0_0_, book0_.price as price5_0_0_, book0_.Publisher as Publishe6_0_0_ from Book book0_ where book0_.Book_id=? for update 
[2017-09-19 14:57:31,888 - DEBUG - QuerySpacesImpl.java::174] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@77a98a6a] 
[2017-09-19 14:57:31,888 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : authorName 
[2017-09-19 14:57:31,888 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : bookName 
[2017-09-19 14:57:31,888 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : categoryName 
[2017-09-19 14:57:31,888 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : price 
[2017-09-19 14:57:31,888 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : publisherName 
[2017-09-19 14:57:31,888 - DEBUG - FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java::76] - Building LoadPlan... 
[2017-09-19 14:57:31,889 - DEBUG - LoadQueryJoinAndFetchProcessor.java::95] - processing queryspace <gen:0> 
[2017-09-19 14:57:31,889 - DEBUG - LoadPlanTreePrinter.java::55] - LoadPlan(entity=com.book.store.entity.Book)
    - Returns
       - EntityReturnImpl(entity=com.book.store.entity.Book, querySpaceUid=<gen:0>, path=com.book.store.entity.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.book.store.entity.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {Book_id1_0_0_}
 
[2017-09-19 14:57:31,889 - DEBUG - EntityLoader.java::128] - Static select for entity com.book.store.entity.Book [OPTIMISTIC]: select book0_.Book_id as Book_id1_0_0_, book0_.Author_name as Author_n2_0_0_, book0_.Book_name as Book_nam3_0_0_, book0_.Category as Category4_0_0_, book0_.price as price5_0_0_, book0_.Publisher as Publishe6_0_0_ from Book book0_ where book0_.Book_id=? 
[2017-09-19 14:57:31,889 - DEBUG - QuerySpacesImpl.java::174] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3e10dc6] 
[2017-09-19 14:57:31,889 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : authorName 
[2017-09-19 14:57:31,889 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : bookName 
[2017-09-19 14:57:31,889 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : categoryName 
[2017-09-19 14:57:31,889 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : price 
[2017-09-19 14:57:31,889 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : publisherName 
[2017-09-19 14:57:31,890 - DEBUG - FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java::76] - Building LoadPlan... 
[2017-09-19 14:57:31,890 - DEBUG - LoadQueryJoinAndFetchProcessor.java::95] - processing queryspace <gen:0> 
[2017-09-19 14:57:31,890 - DEBUG - LoadPlanTreePrinter.java::55] - LoadPlan(entity=com.book.store.entity.Book)
    - Returns
       - EntityReturnImpl(entity=com.book.store.entity.Book, querySpaceUid=<gen:0>, path=com.book.store.entity.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.book.store.entity.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {Book_id1_0_0_}
 
[2017-09-19 14:57:31,890 - DEBUG - EntityLoader.java::128] - Static select for entity com.book.store.entity.Book [OPTIMISTIC_FORCE_INCREMENT]: select book0_.Book_id as Book_id1_0_0_, book0_.Author_name as Author_n2_0_0_, book0_.Book_name as Book_nam3_0_0_, book0_.Category as Category4_0_0_, book0_.price as price5_0_0_, book0_.Publisher as Publishe6_0_0_ from Book book0_ where book0_.Book_id=? 
[2017-09-19 14:57:31,900 - DEBUG - CascadeEntityLoader.java::38] - Static select for action ACTION_MERGE on entity com.book.store.entity.Book: select book0_.Book_id as Book_id1_0_0_, book0_.Author_name as Author_n2_0_0_, book0_.Book_name as Book_nam3_0_0_, book0_.Category as Category4_0_0_, book0_.price as price5_0_0_, book0_.Publisher as Publishe6_0_0_ from Book book0_ where book0_.Book_id=? 
[2017-09-19 14:57:31,900 - DEBUG - CascadeEntityLoader.java::38] - Static select for action ACTION_REFRESH on entity com.book.store.entity.Book: select book0_.Book_id as Book_id1_0_0_, book0_.Author_name as Author_n2_0_0_, book0_.Book_name as Book_nam3_0_0_, book0_.Category as Category4_0_0_, book0_.price as price5_0_0_, book0_.Publisher as Publishe6_0_0_ from Book book0_ where book0_.Book_id=? 
[2017-09-19 14:57:31,901 - DEBUG - AbstractEntityPersister.java::3418] - Static SQL for entity: com.book.store.entity.Purchase 
[2017-09-19 14:57:31,901 - DEBUG - AbstractEntityPersister.java::3423] -  Version select: select Purchase_no from Purchase where Purchase_no =? 
[2017-09-19 14:57:31,901 - DEBUG - AbstractEntityPersister.java::3426] -  Snapshot select: select purchase_.Purchase_no, purchase_.Amount as Amount2_1_, purchase_.Book_id as Book_id3_1_, purchase_.Customer_mobileno as Customer4_1_, purchase_.Customer_name as Customer5_1_, purchase_.Purchase_date as Purchase6_1_ from Purchase purchase_ where purchase_.Purchase_no=? 
[2017-09-19 14:57:31,901 - DEBUG - DelegatingBasicLogger.java::394] -  Insert 0: insert into Purchase (Amount, Book_id, Customer_mobileno, Customer_name, Purchase_date, Purchase_no) values (?, ?, ?, ?, ?, ?) 
[2017-09-19 14:57:31,901 - DEBUG - DelegatingBasicLogger.java::394] -  Update 0: update Purchase set Amount=?, Book_id=?, Customer_mobileno=?, Customer_name=?, Purchase_date=? where Purchase_no=? 
[2017-09-19 14:57:31,901 - DEBUG - DelegatingBasicLogger.java::394] -  Delete 0: delete from Purchase where Purchase_no=? 
[2017-09-19 14:57:31,901 - DEBUG - AbstractEntityPersister.java::3434] -  Identity insert: insert into Purchase (Amount, Book_id, Customer_mobileno, Customer_name, Purchase_date) values (?, ?, ?, ?, ?) 
[2017-09-19 14:57:31,901 - DEBUG - QuerySpacesImpl.java::174] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4d18aa28] 
[2017-09-19 14:57:31,901 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : amount 
[2017-09-19 14:57:31,901 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : bookId 
[2017-09-19 14:57:31,901 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : customerMobileNumber 
[2017-09-19 14:57:31,901 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : customerName 
[2017-09-19 14:57:31,901 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : purchaseDate 
[2017-09-19 14:57:31,902 - DEBUG - FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java::76] - Building LoadPlan... 
[2017-09-19 14:57:31,902 - DEBUG - LoadQueryJoinAndFetchProcessor.java::95] - processing queryspace <gen:0> 
[2017-09-19 14:57:31,902 - DEBUG - LoadPlanTreePrinter.java::55] - LoadPlan(entity=com.book.store.entity.Purchase)
    - Returns
       - EntityReturnImpl(entity=com.book.store.entity.Purchase, querySpaceUid=<gen:0>, path=com.book.store.entity.Purchase)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.book.store.entity.Purchase)
          - SQL table alias mapping - purchase0_
          - alias suffix - 0_
          - suffixed key columns - {Purchase1_1_0_}
 
[2017-09-19 14:57:31,902 - DEBUG - EntityLoader.java::128] - Static select for entity com.book.store.entity.Purchase [NONE]: select purchase0_.Purchase_no as Purchase1_1_0_, purchase0_.Amount as Amount2_1_0_, purchase0_.Book_id as Book_id3_1_0_, purchase0_.Customer_mobileno as Customer4_1_0_, purchase0_.Customer_name as Customer5_1_0_, purchase0_.Purchase_date as Purchase6_1_0_ from Purchase purchase0_ where purchase0_.Purchase_no=? 
[2017-09-19 14:57:31,902 - DEBUG - QuerySpacesImpl.java::174] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7756c3cd] 
[2017-09-19 14:57:31,902 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : amount 
[2017-09-19 14:57:31,902 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : bookId 
[2017-09-19 14:57:31,902 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : customerMobileNumber 
[2017-09-19 14:57:31,902 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : customerName 
[2017-09-19 14:57:31,903 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : purchaseDate 
[2017-09-19 14:57:31,903 - DEBUG - FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java::76] - Building LoadPlan... 
[2017-09-19 14:57:31,903 - DEBUG - LoadQueryJoinAndFetchProcessor.java::95] - processing queryspace <gen:0> 
[2017-09-19 14:57:31,903 - DEBUG - LoadPlanTreePrinter.java::55] - LoadPlan(entity=com.book.store.entity.Purchase)
    - Returns
       - EntityReturnImpl(entity=com.book.store.entity.Purchase, querySpaceUid=<gen:0>, path=com.book.store.entity.Purchase)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.book.store.entity.Purchase)
          - SQL table alias mapping - purchase0_
          - alias suffix - 0_
          - suffixed key columns - {Purchase1_1_0_}
 
[2017-09-19 14:57:31,903 - DEBUG - EntityLoader.java::128] - Static select for entity com.book.store.entity.Purchase [READ]: select purchase0_.Purchase_no as Purchase1_1_0_, purchase0_.Amount as Amount2_1_0_, purchase0_.Book_id as Book_id3_1_0_, purchase0_.Customer_mobileno as Customer4_1_0_, purchase0_.Customer_name as Customer5_1_0_, purchase0_.Purchase_date as Purchase6_1_0_ from Purchase purchase0_ where purchase0_.Purchase_no=? 
[2017-09-19 14:57:31,903 - DEBUG - QuerySpacesImpl.java::174] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2bd2b28e] 
[2017-09-19 14:57:31,903 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : amount 
[2017-09-19 14:57:31,903 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : bookId 
[2017-09-19 14:57:31,903 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : customerMobileNumber 
[2017-09-19 14:57:31,903 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : customerName 
[2017-09-19 14:57:31,904 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : purchaseDate 
[2017-09-19 14:57:31,904 - DEBUG - FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java::76] - Building LoadPlan... 
[2017-09-19 14:57:31,904 - DEBUG - LoadQueryJoinAndFetchProcessor.java::95] - processing queryspace <gen:0> 
[2017-09-19 14:57:31,904 - DEBUG - LoadPlanTreePrinter.java::55] - LoadPlan(entity=com.book.store.entity.Purchase)
    - Returns
       - EntityReturnImpl(entity=com.book.store.entity.Purchase, querySpaceUid=<gen:0>, path=com.book.store.entity.Purchase)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.book.store.entity.Purchase)
          - SQL table alias mapping - purchase0_
          - alias suffix - 0_
          - suffixed key columns - {Purchase1_1_0_}
 
[2017-09-19 14:57:31,904 - DEBUG - EntityLoader.java::128] - Static select for entity com.book.store.entity.Purchase [UPGRADE]: select purchase0_.Purchase_no as Purchase1_1_0_, purchase0_.Amount as Amount2_1_0_, purchase0_.Book_id as Book_id3_1_0_, purchase0_.Customer_mobileno as Customer4_1_0_, purchase0_.Customer_name as Customer5_1_0_, purchase0_.Purchase_date as Purchase6_1_0_ from Purchase purchase0_ where purchase0_.Purchase_no=? for update 
[2017-09-19 14:57:31,904 - DEBUG - QuerySpacesImpl.java::174] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@57fd91c9] 
[2017-09-19 14:57:31,904 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : amount 
[2017-09-19 14:57:31,904 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : bookId 
[2017-09-19 14:57:31,904 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : customerMobileNumber 
[2017-09-19 14:57:31,904 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : customerName 
[2017-09-19 14:57:31,904 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : purchaseDate 
[2017-09-19 14:57:31,905 - DEBUG - FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java::76] - Building LoadPlan... 
[2017-09-19 14:57:31,905 - DEBUG - LoadQueryJoinAndFetchProcessor.java::95] - processing queryspace <gen:0> 
[2017-09-19 14:57:31,905 - DEBUG - LoadPlanTreePrinter.java::55] - LoadPlan(entity=com.book.store.entity.Purchase)
    - Returns
       - EntityReturnImpl(entity=com.book.store.entity.Purchase, querySpaceUid=<gen:0>, path=com.book.store.entity.Purchase)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.book.store.entity.Purchase)
          - SQL table alias mapping - purchase0_
          - alias suffix - 0_
          - suffixed key columns - {Purchase1_1_0_}
 
[2017-09-19 14:57:31,905 - DEBUG - EntityLoader.java::128] - Static select for entity com.book.store.entity.Purchase [UPGRADE_NOWAIT]: select purchase0_.Purchase_no as Purchase1_1_0_, purchase0_.Amount as Amount2_1_0_, purchase0_.Book_id as Book_id3_1_0_, purchase0_.Customer_mobileno as Customer4_1_0_, purchase0_.Customer_name as Customer5_1_0_, purchase0_.Purchase_date as Purchase6_1_0_ from Purchase purchase0_ where purchase0_.Purchase_no=? for update 
[2017-09-19 14:57:31,905 - DEBUG - QuerySpacesImpl.java::174] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@52045dbe] 
[2017-09-19 14:57:31,905 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : amount 
[2017-09-19 14:57:31,905 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : bookId 
[2017-09-19 14:57:31,905 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : customerMobileNumber 
[2017-09-19 14:57:31,905 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : customerName 
[2017-09-19 14:57:31,905 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : purchaseDate 
[2017-09-19 14:57:31,906 - DEBUG - FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java::76] - Building LoadPlan... 
[2017-09-19 14:57:31,906 - DEBUG - LoadQueryJoinAndFetchProcessor.java::95] - processing queryspace <gen:0> 
[2017-09-19 14:57:31,906 - DEBUG - LoadPlanTreePrinter.java::55] - LoadPlan(entity=com.book.store.entity.Purchase)
    - Returns
       - EntityReturnImpl(entity=com.book.store.entity.Purchase, querySpaceUid=<gen:0>, path=com.book.store.entity.Purchase)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.book.store.entity.Purchase)
          - SQL table alias mapping - purchase0_
          - alias suffix - 0_
          - suffixed key columns - {Purchase1_1_0_}
 
[2017-09-19 14:57:31,906 - DEBUG - EntityLoader.java::128] - Static select for entity com.book.store.entity.Purchase [UPGRADE_SKIPLOCKED]: select purchase0_.Purchase_no as Purchase1_1_0_, purchase0_.Amount as Amount2_1_0_, purchase0_.Book_id as Book_id3_1_0_, purchase0_.Customer_mobileno as Customer4_1_0_, purchase0_.Customer_name as Customer5_1_0_, purchase0_.Purchase_date as Purchase6_1_0_ from Purchase purchase0_ where purchase0_.Purchase_no=? for update 
[2017-09-19 14:57:31,906 - DEBUG - QuerySpacesImpl.java::174] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@565b064f] 
[2017-09-19 14:57:31,907 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : amount 
[2017-09-19 14:57:31,907 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : bookId 
[2017-09-19 14:57:31,907 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : customerMobileNumber 
[2017-09-19 14:57:31,907 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : customerName 
[2017-09-19 14:57:31,907 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : purchaseDate 
[2017-09-19 14:57:31,907 - DEBUG - FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java::76] - Building LoadPlan... 
[2017-09-19 14:57:31,907 - DEBUG - LoadQueryJoinAndFetchProcessor.java::95] - processing queryspace <gen:0> 
[2017-09-19 14:57:31,907 - DEBUG - LoadPlanTreePrinter.java::55] - LoadPlan(entity=com.book.store.entity.Purchase)
    - Returns
       - EntityReturnImpl(entity=com.book.store.entity.Purchase, querySpaceUid=<gen:0>, path=com.book.store.entity.Purchase)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.book.store.entity.Purchase)
          - SQL table alias mapping - purchase0_
          - alias suffix - 0_
          - suffixed key columns - {Purchase1_1_0_}
 
[2017-09-19 14:57:31,907 - DEBUG - EntityLoader.java::128] - Static select for entity com.book.store.entity.Purchase [FORCE]: select purchase0_.Purchase_no as Purchase1_1_0_, purchase0_.Amount as Amount2_1_0_, purchase0_.Book_id as Book_id3_1_0_, purchase0_.Customer_mobileno as Customer4_1_0_, purchase0_.Customer_name as Customer5_1_0_, purchase0_.Purchase_date as Purchase6_1_0_ from Purchase purchase0_ where purchase0_.Purchase_no=? for update 
[2017-09-19 14:57:31,908 - DEBUG - QuerySpacesImpl.java::174] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@73163d48] 
[2017-09-19 14:57:31,908 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : amount 
[2017-09-19 14:57:31,908 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : bookId 
[2017-09-19 14:57:31,908 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : customerMobileNumber 
[2017-09-19 14:57:31,908 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : customerName 
[2017-09-19 14:57:31,908 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : purchaseDate 
[2017-09-19 14:57:31,908 - DEBUG - FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java::76] - Building LoadPlan... 
[2017-09-19 14:57:31,908 - DEBUG - LoadQueryJoinAndFetchProcessor.java::95] - processing queryspace <gen:0> 
[2017-09-19 14:57:31,908 - DEBUG - LoadPlanTreePrinter.java::55] - LoadPlan(entity=com.book.store.entity.Purchase)
    - Returns
       - EntityReturnImpl(entity=com.book.store.entity.Purchase, querySpaceUid=<gen:0>, path=com.book.store.entity.Purchase)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.book.store.entity.Purchase)
          - SQL table alias mapping - purchase0_
          - alias suffix - 0_
          - suffixed key columns - {Purchase1_1_0_}
 
[2017-09-19 14:57:31,908 - DEBUG - EntityLoader.java::128] - Static select for entity com.book.store.entity.Purchase [PESSIMISTIC_READ]: select purchase0_.Purchase_no as Purchase1_1_0_, purchase0_.Amount as Amount2_1_0_, purchase0_.Book_id as Book_id3_1_0_, purchase0_.Customer_mobileno as Customer4_1_0_, purchase0_.Customer_name as Customer5_1_0_, purchase0_.Purchase_date as Purchase6_1_0_ from Purchase purchase0_ where purchase0_.Purchase_no=? lock in share mode 
[2017-09-19 14:57:31,909 - DEBUG - QuerySpacesImpl.java::174] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@56a4479a] 
[2017-09-19 14:57:31,909 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : amount 
[2017-09-19 14:57:31,909 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : bookId 
[2017-09-19 14:57:31,909 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : customerMobileNumber 
[2017-09-19 14:57:31,909 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : customerName 
[2017-09-19 14:57:31,909 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : purchaseDate 
[2017-09-19 14:57:31,909 - DEBUG - FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java::76] - Building LoadPlan... 
[2017-09-19 14:57:31,909 - DEBUG - LoadQueryJoinAndFetchProcessor.java::95] - processing queryspace <gen:0> 
[2017-09-19 14:57:31,909 - DEBUG - LoadPlanTreePrinter.java::55] - LoadPlan(entity=com.book.store.entity.Purchase)
    - Returns
       - EntityReturnImpl(entity=com.book.store.entity.Purchase, querySpaceUid=<gen:0>, path=com.book.store.entity.Purchase)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.book.store.entity.Purchase)
          - SQL table alias mapping - purchase0_
          - alias suffix - 0_
          - suffixed key columns - {Purchase1_1_0_}
 
[2017-09-19 14:57:31,909 - DEBUG - EntityLoader.java::128] - Static select for entity com.book.store.entity.Purchase [PESSIMISTIC_WRITE]: select purchase0_.Purchase_no as Purchase1_1_0_, purchase0_.Amount as Amount2_1_0_, purchase0_.Book_id as Book_id3_1_0_, purchase0_.Customer_mobileno as Customer4_1_0_, purchase0_.Customer_name as Customer5_1_0_, purchase0_.Purchase_date as Purchase6_1_0_ from Purchase purchase0_ where purchase0_.Purchase_no=? for update 
[2017-09-19 14:57:31,910 - DEBUG - QuerySpacesImpl.java::174] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@20a8a64e] 
[2017-09-19 14:57:31,910 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : amount 
[2017-09-19 14:57:31,910 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : bookId 
[2017-09-19 14:57:31,910 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : customerMobileNumber 
[2017-09-19 14:57:31,910 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : customerName 
[2017-09-19 14:57:31,910 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : purchaseDate 
[2017-09-19 14:57:31,910 - DEBUG - FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java::76] - Building LoadPlan... 
[2017-09-19 14:57:31,910 - DEBUG - LoadQueryJoinAndFetchProcessor.java::95] - processing queryspace <gen:0> 
[2017-09-19 14:57:31,910 - DEBUG - LoadPlanTreePrinter.java::55] - LoadPlan(entity=com.book.store.entity.Purchase)
    - Returns
       - EntityReturnImpl(entity=com.book.store.entity.Purchase, querySpaceUid=<gen:0>, path=com.book.store.entity.Purchase)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.book.store.entity.Purchase)
          - SQL table alias mapping - purchase0_
          - alias suffix - 0_
          - suffixed key columns - {Purchase1_1_0_}
 
[2017-09-19 14:57:31,910 - DEBUG - EntityLoader.java::128] - Static select for entity com.book.store.entity.Purchase [PESSIMISTIC_FORCE_INCREMENT]: select purchase0_.Purchase_no as Purchase1_1_0_, purchase0_.Amount as Amount2_1_0_, purchase0_.Book_id as Book_id3_1_0_, purchase0_.Customer_mobileno as Customer4_1_0_, purchase0_.Customer_name as Customer5_1_0_, purchase0_.Purchase_date as Purchase6_1_0_ from Purchase purchase0_ where purchase0_.Purchase_no=? for update 
[2017-09-19 14:57:31,911 - DEBUG - QuerySpacesImpl.java::174] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1698fc68] 
[2017-09-19 14:57:31,911 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : amount 
[2017-09-19 14:57:31,911 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : bookId 
[2017-09-19 14:57:31,911 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : customerMobileNumber 
[2017-09-19 14:57:31,911 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : customerName 
[2017-09-19 14:57:31,911 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : purchaseDate 
[2017-09-19 14:57:31,911 - DEBUG - FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java::76] - Building LoadPlan... 
[2017-09-19 14:57:31,911 - DEBUG - LoadQueryJoinAndFetchProcessor.java::95] - processing queryspace <gen:0> 
[2017-09-19 14:57:31,911 - DEBUG - LoadPlanTreePrinter.java::55] - LoadPlan(entity=com.book.store.entity.Purchase)
    - Returns
       - EntityReturnImpl(entity=com.book.store.entity.Purchase, querySpaceUid=<gen:0>, path=com.book.store.entity.Purchase)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.book.store.entity.Purchase)
          - SQL table alias mapping - purchase0_
          - alias suffix - 0_
          - suffixed key columns - {Purchase1_1_0_}
 
[2017-09-19 14:57:31,911 - DEBUG - EntityLoader.java::128] - Static select for entity com.book.store.entity.Purchase [OPTIMISTIC]: select purchase0_.Purchase_no as Purchase1_1_0_, purchase0_.Amount as Amount2_1_0_, purchase0_.Book_id as Book_id3_1_0_, purchase0_.Customer_mobileno as Customer4_1_0_, purchase0_.Customer_name as Customer5_1_0_, purchase0_.Purchase_date as Purchase6_1_0_ from Purchase purchase0_ where purchase0_.Purchase_no=? 
[2017-09-19 14:57:31,912 - DEBUG - QuerySpacesImpl.java::174] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@207b8649] 
[2017-09-19 14:57:31,912 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : amount 
[2017-09-19 14:57:31,912 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : bookId 
[2017-09-19 14:57:31,912 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : customerMobileNumber 
[2017-09-19 14:57:31,912 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : customerName 
[2017-09-19 14:57:31,912 - DEBUG - MetamodelGraphWalker.java::137] - Visiting attribute path : purchaseDate 
[2017-09-19 14:57:31,912 - DEBUG - FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java::76] - Building LoadPlan... 
[2017-09-19 14:57:31,912 - DEBUG - LoadQueryJoinAndFetchProcessor.java::95] - processing queryspace <gen:0> 
[2017-09-19 14:57:31,912 - DEBUG - LoadPlanTreePrinter.java::55] - LoadPlan(entity=com.book.store.entity.Purchase)
    - Returns
       - EntityReturnImpl(entity=com.book.store.entity.Purchase, querySpaceUid=<gen:0>, path=com.book.store.entity.Purchase)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.book.store.entity.Purchase)
          - SQL table alias mapping - purchase0_
          - alias suffix - 0_
          - suffixed key columns - {Purchase1_1_0_}
 
[2017-09-19 14:57:31,912 - DEBUG - EntityLoader.java::128] - Static select for entity com.book.store.entity.Purchase [OPTIMISTIC_FORCE_INCREMENT]: select purchase0_.Purchase_no as Purchase1_1_0_, purchase0_.Amount as Amount2_1_0_, purchase0_.Book_id as Book_id3_1_0_, purchase0_.Customer_mobileno as Customer4_1_0_, purchase0_.Customer_name as Customer5_1_0_, purchase0_.Purchase_date as Purchase6_1_0_ from Purchase purchase0_ where purchase0_.Purchase_no=? 
[2017-09-19 14:57:31,913 - DEBUG - CascadeEntityLoader.java::38] - Static select for action ACTION_MERGE on entity com.book.store.entity.Purchase: select purchase0_.Purchase_no as Purchase1_1_0_, purchase0_.Amount as Amount2_1_0_, purchase0_.Book_id as Book_id3_1_0_, purchase0_.Customer_mobileno as Customer4_1_0_, purchase0_.Customer_name as Customer5_1_0_, purchase0_.Purchase_date as Purchase6_1_0_ from Purchase purchase0_ where purchase0_.Purchase_no=? 
[2017-09-19 14:57:31,913 - DEBUG - CascadeEntityLoader.java::38] - Static select for action ACTION_REFRESH on entity com.book.store.entity.Purchase: select purchase0_.Purchase_no as Purchase1_1_0_, purchase0_.Amount as Amount2_1_0_, purchase0_.Book_id as Book_id3_1_0_, purchase0_.Customer_mobileno as Customer4_1_0_, purchase0_.Customer_name as Customer5_1_0_, purchase0_.Purchase_date as Purchase6_1_0_ from Purchase purchase0_ where purchase0_.Purchase_no=? 
[2017-09-19 14:57:31,913 - DEBUG - SessionFactoryImpl.java::462] - Instantiated session factory 
[2017-09-19 14:57:31,915 - INFO - SchemaUpdate.java::101] - HHH000228: Running hbm2ddl schema update 
[2017-09-19 14:57:31,926 - INFO - InformationExtractorJdbcDatabaseMetaDataImpl.java::334] - HHH000262: Table not found: Book 
[2017-09-19 14:57:31,952 - INFO - InformationExtractorJdbcDatabaseMetaDataImpl.java::334] - HHH000262: Table not found: Book 
[2017-09-19 14:57:32,020 - INFO - InformationExtractorJdbcDatabaseMetaDataImpl.java::334] - HHH000262: Table not found: Purchase 
[2017-09-19 14:57:32,027 - INFO - InformationExtractorJdbcDatabaseMetaDataImpl.java::334] - HHH000262: Table not found: Purchase 
[2017-09-19 14:57:32,083 - DEBUG - JtaPlatformInitiator.java::42] - No JtaPlatform was specified, checking resolver 
[2017-09-19 14:57:32,083 - DEBUG - JtaPlatformResolverInitiator.java::33] - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver] 
[2017-09-19 14:57:32,087 - DEBUG - StandardJtaPlatformResolver.java::101] - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform] 
[2017-09-19 14:57:32,088 - DEBUG - NamedQueryRepository.java::149] - Checking 0 named HQL queries 
[2017-09-19 14:57:32,088 - DEBUG - NamedQueryRepository.java::165] - Checking 0 named SQL queries 
[2017-09-19 14:57:32,089 - DEBUG - SessionFactoryRegistry.java::52] - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@75ed9710 
[2017-09-19 14:57:32,090 - DEBUG - SessionFactoryRegistry.java::74] - Registering SessionFactory: 84b93c06-2529-44dd-99e9-c2ff2b41e387 (<unnamed>) 
[2017-09-19 14:57:32,090 - DEBUG - SessionFactoryRegistry.java::81] - Not binding SessionFactory to JNDI, no JNDI name configured 
[2017-09-19 14:57:32,116 - DEBUG - StatisticsInitiator.java::82] - Statistics initialized [enabled=false] 
[2017-09-19 14:57:32,129 - DEBUG - SqlStatementLogger.java::92] - select count(*) as y0_ from Book this_ 
[2017-09-19 14:57:32,137 - DEBUG - DelegatingBasicLogger.java::384] - Result set row: 0 
[2017-09-19 14:57:32,137 - DEBUG - Loader.java::1514] - Result row:  
[2017-09-19 14:57:32,141 - DEBUG - TransactionImpl.java::51] - begin 
[2017-09-19 14:57:32,149 - DEBUG - ActionQueue.java::178] - Executing identity-insert immediately 
[2017-09-19 14:57:32,157 - DEBUG - SqlStatementLogger.java::92] - insert into Book (Author_name, Book_name, Category, price, Publisher) values (?, ?, ?, ?, ?) 
[2017-09-19 14:57:32,160 - DEBUG - IdentifierGeneratorHelper.java::74] - Natively generated identity: 1 
[2017-09-19 14:57:32,160 - DEBUG - ResourceRegistryStandardImpl.java::104] - HHH000387: ResultSet's statement was not registered 
[2017-09-19 14:57:32,162 - DEBUG - ActionQueue.java::178] - Executing identity-insert immediately 
[2017-09-19 14:57:32,162 - DEBUG - SqlStatementLogger.java::92] - insert into Book (Author_name, Book_name, Category, price, Publisher) values (?, ?, ?, ?, ?) 
[2017-09-19 14:57:32,163 - DEBUG - IdentifierGeneratorHelper.java::74] - Natively generated identity: 2 
[2017-09-19 14:57:32,163 - DEBUG - ResourceRegistryStandardImpl.java::104] - HHH000387: ResultSet's statement was not registered 
[2017-09-19 14:57:32,164 - DEBUG - ActionQueue.java::178] - Executing identity-insert immediately 
[2017-09-19 14:57:32,164 - DEBUG - SqlStatementLogger.java::92] - insert into Book (Author_name, Book_name, Category, price, Publisher) values (?, ?, ?, ?, ?) 
[2017-09-19 14:57:32,165 - DEBUG - IdentifierGeneratorHelper.java::74] - Natively generated identity: 3 
[2017-09-19 14:57:32,165 - DEBUG - ResourceRegistryStandardImpl.java::104] - HHH000387: ResultSet's statement was not registered 
[2017-09-19 14:57:32,165 - DEBUG - ActionQueue.java::178] - Executing identity-insert immediately 
[2017-09-19 14:57:32,165 - DEBUG - SqlStatementLogger.java::92] - insert into Book (Author_name, Book_name, Category, price, Publisher) values (?, ?, ?, ?, ?) 
[2017-09-19 14:57:32,166 - DEBUG - IdentifierGeneratorHelper.java::74] - Natively generated identity: 4 
[2017-09-19 14:57:32,166 - DEBUG - ResourceRegistryStandardImpl.java::104] - HHH000387: ResultSet's statement was not registered 
[2017-09-19 14:57:32,167 - DEBUG - ActionQueue.java::178] - Executing identity-insert immediately 
[2017-09-19 14:57:32,167 - DEBUG - SqlStatementLogger.java::92] - insert into Book (Author_name, Book_name, Category, price, Publisher) values (?, ?, ?, ?, ?) 
[2017-09-19 14:57:32,167 - DEBUG - IdentifierGeneratorHelper.java::74] - Natively generated identity: 5 
[2017-09-19 14:57:32,168 - DEBUG - ResourceRegistryStandardImpl.java::104] - HHH000387: ResultSet's statement was not registered 
[2017-09-19 14:57:32,168 - DEBUG - ActionQueue.java::178] - Executing identity-insert immediately 
[2017-09-19 14:57:32,168 - DEBUG - SqlStatementLogger.java::92] - insert into Book (Author_name, Book_name, Category, price, Publisher) values (?, ?, ?, ?, ?) 
[2017-09-19 14:57:32,169 - DEBUG - IdentifierGeneratorHelper.java::74] - Natively generated identity: 6 
[2017-09-19 14:57:32,169 - DEBUG - ResourceRegistryStandardImpl.java::104] - HHH000387: ResultSet's statement was not registered 
[2017-09-19 14:57:32,169 - DEBUG - TransactionImpl.java::62] - committing 
[2017-09-19 14:57:32,170 - DEBUG - AbstractFlushingEventListener.java::132] - Processing flush-time cascades 
[2017-09-19 14:57:32,170 - DEBUG - AbstractFlushingEventListener.java::174] - Dirty checking collections 
[2017-09-19 14:57:32,172 - DEBUG - AbstractFlushingEventListener.java::106] - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects 
[2017-09-19 14:57:32,172 - DEBUG - AbstractFlushingEventListener.java::113] - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections 
[2017-09-19 14:57:32,173 - DEBUG - EntityPrinter.java::102] - Listing entities: 
[2017-09-19 14:57:32,173 - DEBUG - EntityPrinter.java::109] - com.book.store.entity.Book{authorName=Chetan Bhagat, price=95, publisherName=Tata, bookName=Half Girlfriend, categoryName=General, bookId=3} 
[2017-09-19 14:57:32,173 - DEBUG - EntityPrinter.java::109] - com.book.store.entity.Book{authorName=A.P.J. Abdul Kalam, price=200, publisherName=Swapna, bookName=Forge your Future, categoryName=General, bookId=4} 
[2017-09-19 14:57:32,173 - DEBUG - EntityPrinter.java::109] - com.book.store.entity.Book{authorName=John Green, price=159, publisherName=Pai, bookName=The Fault in our Stars, categoryName=Kids, bookId=5} 
[2017-09-19 14:57:32,173 - DEBUG - EntityPrinter.java::109] - com.book.store.entity.Book{authorName=Randall Munroe, price=420, publisherName=Pai, bookName=My Little Book, categoryName=Kids, bookId=6} 
[2017-09-19 14:57:32,174 - DEBUG - EntityPrinter.java::109] - com.book.store.entity.Book{authorName=Herbert Schildt, price=615, publisherName=Tata, bookName=Java: The Complete Reference, categoryName=Technology, bookId=1} 
[2017-09-19 14:57:32,174 - DEBUG - EntityPrinter.java::109] - com.book.store.entity.Book{authorName=Singh Y. Kirani, price=232, publisherName=Subhash, bookName=Matlab Programming, categoryName=Technology, bookId=2} 
